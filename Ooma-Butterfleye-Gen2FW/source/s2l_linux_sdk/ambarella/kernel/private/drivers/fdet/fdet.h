/*
 * ambhw/fdet.h
 *
 * History:
 *	2012/06/28 - [Zhenwu Xue] created file
 *
 *
 * Copyright (c) 2015 Ambarella, Inc.
 *
 * This file and its contents ("Software") are protected by intellectual
 * property rights including, without limitation, U.S. and/or foreign
 * copyrights. This Software is also the confidential and proprietary
 * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
 * disclose, distribute, modify, or otherwise prepare derivative works of this
 * Software or any portion thereof except pursuant to a signed license agreement
 * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
 * In the absence of such an agreement, you agree to promptly notify and return
 * this Software to Ambarella, Inc.
 *
 * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
 * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
 * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
 * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
 * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
 * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
 * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
 * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
 * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
 * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
 * POSSIBILITY OF SUCH DAMAGE.
 *
 */


#ifndef __AMBHW__FDET__
#define __AMBHW__FDET__

#include <ambhw/chip.h>
#include <ambhw/busaddr.h>

#define FDET_BASE_ADDRESS_OFFSET	0x00
#define FDET_ENABLE_OFFSET		0x04
#define FDET_GO_OFFSET			0x08
#define FDET_CONFIG_DONE_OFFSET		0x0C
#define FDET_RESET_OFFSET		0x10
#define FDET_INPUT_WIDTH_OFFSET		0x14
#define FDET_INPUT_HEIGHT_OFFSET	0x18

#if (CHIP_REV == A7)
#define FDET_DEADLINE_OFFSET		0x1C
#define FDET_SKIP_FIRST_INT_OFFSET	0x20
#define FDET_FS_CMD_LIST_PTR_OFFSET	0x24
#define FDET_FS_CMD_LIST_SIZE_OFFSET	0x28
#define FDET_FS_RESULT_BUF_PTR_OFFSET	0x2C
#define FDET_FS_RESULT_BUF_SIZE_OFFSET	0x30
#define FDET_TS_CMD_LIST_PTR_OFFSET	0x34
#define FDET_TS_CMD_LIST_SIZE_OFFSET	0x38
#define FDET_TS_RESULT_BUF_PTR_OFFSET	0x3C
#define FDET_TS_RESULT_BUF_SIZE_OFFSET	0x40
#define FDET_ORIG_TARGET_PTR_OFFSET	0x44
#define FDET_ORIG_TARGET_PITCH_OFFSET	0x48
#define FDET_TMP_TARGET_PTR_OFFSET	0x4C
#define FDET_SEND_DEADLINE_INT_OFFSET	0x50
#else
#define FDET_DEADLINE_OFFSET		0x20
#define FDET_SKIP_FIRST_INT_OFFSET	0x1C
#define FDET_SEND_DEADLINE_INT_OFFSET	0x24
#define FDET_FS_CMD_LIST_PTR_OFFSET	0x28
#define FDET_FS_CMD_LIST_SIZE_OFFSET	0x2C
#define FDET_FS_RESULT_BUF_PTR_OFFSET	0x30
#define FDET_FS_RESULT_BUF_SIZE_OFFSET	0x34
#define FDET_TS_CMD_LIST_PTR_OFFSET	0x38
#define FDET_TS_CMD_LIST_SIZE_OFFSET	0x3C
#define FDET_TS_RESULT_BUF_PTR_OFFSET	0x40
#define FDET_TS_RESULT_BUF_SIZE_OFFSET	0x44
#define FDET_ORIG_TARGET_PTR_OFFSET	0x50
#define FDET_ORIG_TARGET_PITCH_OFFSET	0x54
#define FDET_TMP_TARGET_PTR_OFFSET	0x58
#endif

#define FDET_RESULT_STATUS_OFFSET	0x100
#define FDET_ERROR_STATUS_OFFSET	0x104
#define FDET_FS_CMD_STATUS_OFFSET	0x108
#define FDET_TS_CMD_STATUS_OFFSET	0x10C
#define FDET_ACTIVE_OFFSET		0x110

#define FDET_SCALE_FACTOR0_OFFSET	0x400
#define FDET_SCALE_FACTOR_OFFSET(n)	(FDET_SCALE_FACTOR0_OFFSET + ((n) << 2))

#if (CHIP_REV == A7)

#define FDET_EVALUATION_ID0_OFFSET	0x800
#define FDET_EVALUATION_ID_OFFSET(n)	(FDET_EVALUATION_ID0_OFFSET + ((n) << 2))

#else

#define FDET_EVALUATION_ID0_OFFSET	0x500
#define FDET_EVALUATION_ID_OFFSET(n)	(FDET_EVALUATION_ID0_OFFSET + ((n) << 2))

#define FDET_EVALUATION_NUM0_OFFSET	0x600
#define FDET_EVALUATION_NUM_OFFSET(n)	(FDET_EVALUATION_NUM0_OFFSET + ((n) << 2))

#define FDET_EVALUATION_NUM_REG(n)	FACE_DETECTION_REG(FDET_EVALUATION_NUM_OFFSET(n))

#define FDET_HAVE_EVAL_NUM_REGS

#endif

#if (CHIP_REV == A7)
#define FDET_IRQF			IRQF_TRIGGER_FALLING
#else
#define FDET_IRQF			IRQF_TRIGGER_RISING
#endif

#ifndef FDET_IRQ
#define FDET_IRQ			FACE_DET_IRQ
#endif

#define FDET_BASE_ADDRESS_REG		FACE_DETECTION_REG(FDET_BASE_ADDRESS_OFFSET)
#define FDET_ENABLE_REG			FACE_DETECTION_REG(FDET_ENABLE_OFFSET)
#define FDET_GO_REG			FACE_DETECTION_REG(FDET_GO_OFFSET)
#define FDET_CONFIG_DONE_REG		FACE_DETECTION_REG(FDET_CONFIG_DONE_OFFSET)
#define FDET_RESET_REG			FACE_DETECTION_REG(FDET_RESET_OFFSET)
#define FDET_INPUT_WIDTH_REG		FACE_DETECTION_REG(FDET_INPUT_WIDTH_OFFSET)
#define FDET_INPUT_HEIGHT_REG		FACE_DETECTION_REG(FDET_INPUT_HEIGHT_OFFSET)
#define FDET_DEADLINE_REG		FACE_DETECTION_REG(FDET_DEADLINE_OFFSET)
#define FDET_SEND_DEADLINE_INT_REG	FACE_DETECTION_REG(FDET_SEND_DEADLINE_INT_OFFSET)
#define FDET_SKIP_FIRST_INT_REG		FACE_DETECTION_REG(FDET_SKIP_FIRST_INT_OFFSET)
#define FDET_FS_CMD_LIST_PTR_REG	FACE_DETECTION_REG(FDET_FS_CMD_LIST_PTR_OFFSET)
#define FDET_FS_CMD_LIST_SIZE_REG	FACE_DETECTION_REG(FDET_FS_CMD_LIST_SIZE_OFFSET)
#define FDET_FS_RESULT_BUF_PTR_REG	FACE_DETECTION_REG(FDET_FS_RESULT_BUF_PTR_OFFSET)
#define FDET_FS_RESULT_BUF_SIZE_REG	FACE_DETECTION_REG(FDET_FS_RESULT_BUF_SIZE_OFFSET)
#define FDET_TS_CMD_LIST_PTR_REG	FACE_DETECTION_REG(FDET_TS_CMD_LIST_PTR_OFFSET)
#define FDET_TS_CMD_LIST_SIZE_REG	FACE_DETECTION_REG(FDET_TS_CMD_LIST_SIZE_OFFSET)
#define FDET_TS_RESULT_BUF_PTR_REG	FACE_DETECTION_REG(FDET_TS_RESULT_BUF_PTR_OFFSET)
#define FDET_TS_RESULT_BUF_SIZE_REG	FACE_DETECTION_REG(FDET_TS_RESULT_BUF_SIZE_OFFSET)
#define FDET_ORIG_TARGET_PTR_REG	FACE_DETECTION_REG(FDET_ORIG_TARGET_PTR_OFFSET)
#define FDET_ORIG_TARGET_PITCH_REG	FACE_DETECTION_REG(FDET_ORIG_TARGET_PITCH_OFFSET)
#define FDET_TMP_TARGET_PTR_REG		FACE_DETECTION_REG(FDET_TMP_TARGET_PTR_OFFSET)

#define FDET_RESULT_STATUS_REG		FACE_DETECTION_REG(FDET_RESULT_STATUS_OFFSET)
#define FDET_ERROR_STATUS_REG		FACE_DETECTION_REG(FDET_ERROR_STATUS_OFFSET)
#define FDET_FS_CMD_STATUS_REG		FACE_DETECTION_REG(FDET_FS_CMD_STATUS_OFFSET)
#define FDET_TS_CMD_STATUS_REG		FACE_DETECTION_REG(FDET_TS_CMD_STATUS_OFFSET)
#define FDET_ACTIVE_REG			FACE_DETECTION_REG(FDET_ACTIVE_OFFSET)

#define FDET_SCALE_FACTOR_REG(n)	FACE_DETECTION_REG(FDET_SCALE_FACTOR_OFFSET(n))

#define FDET_EVALUATION_ID_REG(n)	FACE_DETECTION_REG(FDET_EVALUATION_ID_OFFSET(n))



#define FDET_CONFIG_BASE_NORMAL		0x0C

#define FDET_ENABLE			0x01
#define FDET_DISABLE			0x00

#define FDET_START			0x01
#define FDET_STOP			0x00

#define FDET_CONFIG_DONE		0x01

#define FDET_RESET			0x01

#define FDET_SKIP_FIRST_INTERRUPT	0x01

#define FDET_FS_RESULT_NUM(s)		((s) >> 16)
#define FDET_TS_RESULT_NUM(s)		((s) & 0xFFFF)

#define FDET_ERR_TS_RESULT_OVERFLOW	0x0001
#define FDET_ERR_TS_MERGE_OVERFLOW	0x0002
#define FDET_ERR_TS_TOO_LONG		0x0004
#define FDET_ERR_FS_RESULT_OVERFLOW	0x0100
#define FDET_ERR_FS_MERGE_OVERFLOW	0x0200

#define FDET_LAST_FS_CMD_ID(s)		((s) & 0x0FFF)
#define FDET_LAST_TS_CMD_ID(s)		((s) & 0x0FFF)

#define FDET_ACTIVE			0x01

#define	FDET_SCALE_FACTOR_EXPONENT(v)	((v) & 0x0007)
#define	FDET_SCALE_FACTOR_MANTISSA(v)	(((v) & 0x07FF) << 3)
#define	FDET_RECIPROCAL_SCALE_FACTOR_EXPONENT(v)	(((v) & 0x0007) << 14)
#define	FDET_RECIPROCAL_SCALE_FACTOR_MANTISSA(v)	(((v) & 0x07FF) << 17)

#define FDET_CASCADE_CLASSIFIER_PTR(v)	(v & 0x1FFF)
#define FDET_SPECIAL_CLASSIFIER_PTR(v)	((v & 0x1FFF) << 13)
#define FDET_SPECIAL_CLASSIFIER_NUM(v)	((v & 0x003F) << 26)

#endif
