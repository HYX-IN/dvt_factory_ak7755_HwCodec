diff --git a/AmbaConfig b/AmbaConfig
index 68a6f2e..0a3e037 100644
--- a/AmbaConfig
+++ b/AmbaConfig
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/01/10 - [Louis Sun] Create
 ##
-## Copyright (C) 2014-2018, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 menuconfig BUILD_AMBAREALLA_APP_UTILITY
@@ -28,4 +45,4 @@ source app/utility/jpg_enc/AmbaConfig
 source app/utility/mptool/AmbaConfig
 source app/utility/upgrade_partition/AmbaConfig
 
-endif
\ No newline at end of file
+endif
diff --git a/af_value_server/AmbaConfig b/af_value_server/AmbaConfig
index db4e56a..024166f 100644
--- a/af_value_server/AmbaConfig
+++ b/af_value_server/AmbaConfig
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/03/06 - [HuaiShun Hu] Create
 ##
-## Copyright (C) 2004-2014, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 
diff --git a/af_value_server/af_value_server.cpp b/af_value_server/af_value_server.cpp
index 088056e..f8e9c9f 100644
--- a/af_value_server/af_value_server.cpp
+++ b/af_value_server/af_value_server.cpp
@@ -4,14 +4,33 @@
  * Histroy:
  *   2014-3-06 - [HuaiShun Hu] created file
  *
- * Copyright (C) 2008-2014, Ambarella ShangHai Co,Ltd
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <sys/types.h>
diff --git a/af_value_server/lens_focus.sh b/af_value_server/lens_focus.sh
index 7fe7560..163cdd3 100755
--- a/af_value_server/lens_focus.sh
+++ b/af_value_server/lens_focus.sh
@@ -1,4 +1,32 @@
 #! /bin/sh
+## History:
+##
+## 2016/12/30 - [JianTang] Created file
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
 
 IR_CUTTER_SWITCH_GPIO_PATH=/sys/class/gpio/gpio35
 
diff --git a/af_value_server/make.inc b/af_value_server/make.inc
index 606f1fa..6c753ac 100644
--- a/af_value_server/make.inc
+++ b/af_value_server/make.inc
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/03/06 - [HuaiShun Hu] Created file
 ##
-## Copyright (C) 2012-2016, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 ifeq ($(BUILD_AMBARELLA_APP_UTILITY_AF_VALUE_SERVER), y)
diff --git a/amb_scripts/AmbaConfig b/amb_scripts/AmbaConfig
index b7d241a..513b2ed 100644
--- a/amb_scripts/AmbaConfig
+++ b/amb_scripts/AmbaConfig
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/06/04 - [Cao Rongrong] Create
 ##
-## Copyright (C) 2012-2016, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 menuconfig BUILD_AMBAREALLA_UTILITY_SCRIPTS
@@ -26,6 +43,13 @@ config BUILD_AMBAREALLA_UTILITY_SCRIPTS_ALL
 	help
 		Add All of Ambarella Scripts.
 
+config BUILD_AMBAREALLA_UTILITY_SCRIPTS_BCSTINIT
+	bool "Add BROADCAST bc_init.sh Scripts"
+	depends on !BUILD_AMBAREALLA_UTILITY_SCRIPTS_ALL && CONFIG_ARCH_H2
+	default n
+	help
+		Add bc_init.sh Scripts.
+
 config BUILD_AMBAREALLA_UTILITY_SCRIPTS_INITIAV
 	bool "Add init.sh Scripts"
 	depends on !BUILD_AMBAREALLA_UTILITY_SCRIPTS_ALL
diff --git a/amb_scripts/add_partition.sh b/amb_scripts/add_partition.sh
index 7aa5534..2172397 100755
--- a/amb_scripts/add_partition.sh
+++ b/amb_scripts/add_partition.sh
@@ -1,35 +1,62 @@
 #!/bin/sh
-# example: use the add partition <add:ipcam not use it > 
 #
+#  example: use the add partition <add:ipcam not use it >
+#    mtdparts=ambnand:70m@0xf220000"
 #
-#  mtdparts=ambnand:70m@0xf220000"
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
 #
-	/sbin/mdev -s
+
+/sbin/mdev -s
 
 PartitionName="add"
 VolumeName="ambarella_fs"
 DeviceName="ubi1"
 FolderName="/ambarella"
 
-MtdNum=`cat /proc/mtd | grep $PartitionName | awk '{print $1}' | sed -e s/^mtd// | sed -e s/\://`
+MtdNum=$(grep $PartitionName /proc/mtd | awk '{print $1}' | sed -e s/^mtd// | sed -e s/://)
 
 # format
 if [ -r /dev/$DeviceName ]; then
 	echo "	$DeviceName exists"
 else
-	/usr/sbin/ubiattach /dev/ubi_ctrl -m $MtdNum -d 1
+	/usr/sbin/ubiattach /dev/ubi_ctrl -m "$MtdNum" -d 1
 	Check_UBI=$?
 if [ $Check_UBI != "0" ]; then
-	/usr/sbin/ubiformat /dev/mtd$MtdNum
-	/usr/sbin/ubiattach /dev/ubi_ctrl -m $MtdNum -d 1
+	/usr/sbin/ubiformat /dev/mtd"$MtdNum"
+	/usr/sbin/ubiattach /dev/ubi_ctrl -m "$MtdNum" -d 1
 fi
 	/usr/sbin/ubimkvol /dev/$DeviceName -N $VolumeName -m
 fi
 
-UbiCount=`ubinfo |grep Count | awk '{print $5 }'`
+UbiCount=$(ubinfo |grep Count | awk '{print $5 }')
 
-if [	"$UbiCount" == "1" ]; then
-	/usr/sbin/ubiattach /dev/ubi_ctrl -m $MtdNum -d 1
+if [	"$UbiCount" = "1" ]; then
+	/usr/sbin/ubiattach /dev/ubi_ctrl -m "$MtdNum" -d 1
 else
 	echo "	$DeviceName was attached"
 fi
@@ -43,9 +70,9 @@ else
 fi
 
 #mount
-if [	"` df | grep $DeviceName`"	!= ""	]; then
+if [	"$( df | grep $DeviceName)"	!= ""	]; then
 	echo "	$DeviceName was mounted"
 else
 	echo "	mount -t ubifs $DeviceName:$VolumeName $FolderName "
 	mount -t ubifs $DeviceName:$VolumeName $FolderName
-fi
\ No newline at end of file
+fi
diff --git a/amb_scripts/aoss.sh b/amb_scripts/aoss.sh
index 9fd77f6..b6a5bfa 100755
--- a/amb_scripts/aoss.sh
+++ b/amb_scripts/aoss.sh
@@ -1,5 +1,32 @@
 #!/bin/sh
-
+#
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
 config_dir=/sys/module/ambarella_config/parameters
 board_chip=$(cat $config_dir/board_chip)
 board_type=$(cat $config_dir/board_type)
@@ -24,7 +51,7 @@ aoss_clean_modules()
 	module_check=$(lsmod | awk '{print $1}' | tail -n +2)
 	for i in $module_check
 	do
-		rmmod $i
+		rmmod "$i"
 	done
 }
 
@@ -40,7 +67,7 @@ aoss_i1()
 		#test2_cmd="-vwvga --lcd 1p3831 --disable-csc --idle"
 		;;
 		*)
-		echo $board_type
+		echo "$board_type"
 		test2_cmd="-V720p --hdmi --idle"
 		#test2_cmd="-V720p --hdmi -i0 -h720p"
 		;;
@@ -48,7 +75,7 @@ aoss_i1()
 
 	case "$board_rev" in
 		*)
-		echo $board_rev
+		echo "$board_rev"
 		;;
 	esac
 
@@ -59,14 +86,14 @@ aoss_i1()
 
 	/etc/init.d/S11init start
 	/usr/local/bin/init.sh --na
-	/usr/local/bin/test2 $test2_cmd
+	/usr/local/bin/test2 "$test2_cmd"
 	sd_empty=1
-	while [ $sd_empty -ne 0 ]; do 
+	while [ $sd_empty -ne 0 ]; do
 		if [ -r /tmp/mmcblk0p1/Ducks.Take.Off.1080p.QHD.CRF25.x264-CtrlHD.mkv ]; then
-			echo "SD ready" 
+			echo "SD ready"
 			sd_empty=0
 		else
-			echo "SD empty" 
+			echo "SD empty"
 		fi
 		sleep 2
 	done
@@ -78,13 +105,13 @@ aoss_a5s()
 {
 	case "$board_type" in
 		*)
-		echo $board_type
+		echo "$board_type"
 		;;
 	esac
 
 	case "$board_rev" in
 		*)
-		echo $board_rev
+		echo "$board_rev"
 		;;
 	esac
 
@@ -105,13 +132,13 @@ aoss_a2()
 {
 	case "$board_type" in
 		*)
-		echo $board_type
+		echo "$board_type"
 		;;
 	esac
 
 	case "$board_rev" in
 		*)
-		echo $board_rev
+		echo "$board_rev"
 		;;
 	esac
 
@@ -142,7 +169,7 @@ case "$board_chip" in
 	;;
 
 	*)
-	echo $board_chip
+	echo "$board_chip"
 	;;
 esac
 
diff --git a/amb_scripts/bigrx.sh b/amb_scripts/bigrx.sh
index a4a6a5e..db60332 100755
--- a/amb_scripts/bigrx.sh
+++ b/amb_scripts/bigrx.sh
@@ -1,5 +1,32 @@
 #!/bin/sh
-
+#
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
 sysctl -w net.core.rmem_max=10485760
 sysctl -w net.core.rmem_default=1048576
 sysctl -w net.ipv4.udp_mem="4096 1048576 10485760"
diff --git a/amb_scripts/block_dump.sh b/amb_scripts/block_dump.sh
index 970f38f..0732e2c 100755
--- a/amb_scripts/block_dump.sh
+++ b/amb_scripts/block_dump.sh
@@ -1,8 +1,36 @@
 #!/bin/sh
+#
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
 echo 1 > /proc/sys/vm/block_dump
-while [ true ]
+while true
 do
 dmesg -c
-echo -e "\n"
+printf "%b" "\n"
 sleep 1
 done
diff --git a/amb_scripts/check_audioclk.sh b/amb_scripts/check_audioclk.sh
index 65ad184..46c9b0a 100644
--- a/amb_scripts/check_audioclk.sh
+++ b/amb_scripts/check_audioclk.sh
@@ -1,6 +1,34 @@
 #!/bin/sh
-audioclk=`cat /proc/ambarella/performance | grep Audio | awk '{print $2}'`
-if [ $audioclk != 12288000 ]; then echo "audio clk is wrong" $audioclk ", must be 12288000! (48KHz sample rate)"
+#
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+audioclk=$(grep Audio /proc/ambarella/performance | awk '{print $2}')
+if [ "$audioclk" != 12288000 ]; then echo "audio clk is wrong" "$audioclk" ", must be 12288000! (48KHz sample rate)"
 else
 	 echo "audio clk is OK"
 fi
diff --git a/amb_scripts/demo.sh b/amb_scripts/demo.sh
index 2f887a3..5f84efe 100755
--- a/amb_scripts/demo.sh
+++ b/amb_scripts/demo.sh
@@ -1,4 +1,32 @@
 #!/bin/sh
+#
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
 
 config_dir=/sys/module/ambarella_config/parameters
 if [ -d $config_dir ]; then
@@ -8,19 +36,16 @@ if [ -d $config_dir ]; then
 		board_rev=$(cat $config_dir/board_rev)
 	else
 		config_file=/etc/ambarella.conf
-		board_chip=$(grep "ARCH" $config_file | awk -F \= '{print $2}')
+		board_chip=$(grep "ARCH" $config_file | awk -F = '{print $2}')
 	fi
 else
 	config_dir=/etc/ambarella.conf
-	board_chip=$(awk -F \= '{print $2}' $config_dir | grep "s2lm_kiwi")
-	if [ "$board_chip"x != "s2lm_kiwi"x ]; then
-		board_chip=$(awk -F \= '{print $2}' $config_dir | grep "hawthorn")
-	fi
+	board_chip=$(sed -n "2p" $config_dir | awk -F = '{print $2}')
 fi
 
 demo_default()
 {
-	/usr/local/bin/init.sh $1
+	/usr/local/bin/init.sh "$1"
 	/usr/local/bin/test_encode -i0 -V480p --hdmi -X --bsize 720p
 }
 
@@ -44,12 +69,12 @@ demo_i1()
 
 	case "$board_rev" in
 		*)
-		echo $board_rev
+		echo "$board_rev"
 		;;
 	esac
 
 	/usr/local/bin/init.sh $init_cmd
-	/usr/local/bin/test2 $test2_cmd
+	/usr/local/bin/test2 "$test2_cmd"
 
 	demo_filename=/tmp/mmcblk0p1/Ducks.Take.Off.1080p.QHD.CRF25.x264-CtrlHD.mkv
 
@@ -66,7 +91,7 @@ demo_i1()
 
 	loopcount=0
 	while true; do
-		loopcount=`expr $loopcount + 1`
+		loopcount=$((loopcount + 1))
 		/usr/local/bin/pbtest $demo_filename > /dev/null 2>&1
 		echo "=====Finish loop $loopcount=====" > /dev/ttyS0
 		echo 3 > /proc/sys/vm/drop_caches
@@ -78,7 +103,7 @@ demo_i1()
 demo_s2lm()
 {
 	echo "try to load it66121 external HDMI driver for S2Lm EVK board"
-	if [ -r /lib/modules/$kernel_ver/extra/it66121.ko ]; then
+	if [ -r /lib/modules/"$kernel_ver"/extra/it66121.ko ]; then
 	modprobe it66121
 	fi
 	echo "try to enter 480p preview by HDMI, and default VIN"
@@ -98,29 +123,53 @@ demo_s2e()
 	/usr/local/bin/test_encode -i1080p -V480p --hdmi -X --bsize 1080p
 }
 
+demo_s3l()
+{
+	/usr/local/bin/init.sh --imx290
+	/usr/local/bin/test_image -i0&
+	/usr/local/bin/test_encode -i0 -V480p --hdmi -X --bsize 720p
+}
+
+demo_s5l()
+{
+	/usr/local/bin/init.sh --imx226
+	/usr/local/bin/test_tuning -a&
+	/usr/local/bin/test_encode -i0 --hdmi 480p
+}
+
 case "$board_chip" in
 	7200)
 	demo_i1
 	;;
 
 	s2lm_kiwi)
-	echo $board_chip
+	echo "$board_chip"
 	demo_s2lm
 	;;
 
 	hawthorn)
-	echo $board_chip
+	echo "$board_chip"
 	demo_s2l
 	;;
 
 	s2)
-	echo $board_chip
+	echo "$board_chip"
 	demo_s2e
 	;;
 
+	mango)
+	echo "$board_chip"
+	demo_s3l
+	;;
+
+	s5l_strawberry)
+	echo "$board_chip"
+	demo_s5l
+	;;
+
 	*)
-	echo $board_chip
-	demo_default
+	echo "$board_chip"
+	demo_default "$@"
 	;;
 esac
 
diff --git a/amb_scripts/drop_caches.sh b/amb_scripts/drop_caches.sh
index 34c1623..c079411 100755
--- a/amb_scripts/drop_caches.sh
+++ b/amb_scripts/drop_caches.sh
@@ -1,5 +1,33 @@
 #!/bin/sh
-while [ true ]
+#
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+while true
 do
 echo 1 > /proc/sys/vm/drop_caches
 sleep 1
diff --git a/amb_scripts/dsp_debug.sh b/amb_scripts/dsp_debug.sh
index b22ffc6..7211fff 100644
--- a/amb_scripts/dsp_debug.sh
+++ b/amb_scripts/dsp_debug.sh
@@ -1,47 +1,96 @@
 #!/bin/sh
+#
 # The check file can help the user debug the issue that dsp crash.
-# It's used for S2(S2E) and S2L.
+# It's used for S2(S2E), S2L, S3L, S5, and S5L.
+#
+# History:
+#	2012/05/05 - [Jian Tang] Created file
+#	2015/07/07 - [Jingyang Qiu] Add S3L support
+#	2016/05/31 - [Jian Tang] Add S5 support
+#	2016/12/13 - [Jian Tang] Add S5L support
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
 #
 
 IRQ_LAST_PIXEL="vin0_idsp_last_pixel"
+IRQ_LAST_PIXEL_VIN1="vin1_idsp_last_pixel"
+IRQ_VCAP="vcap"
 IRQ_VDSP="vdsp"
 
 DSPLOG_FOLDER="/tmp"
 REGISTER_FOLDER="/home/ambarella"
+DSPLOG_AMBADEBUG_FILE="dsplog_ambadebug"
+DSPLOG_BEFORE_FILE="dsplog_capture_before_hang"
+DSPLOG_AFTER_FILE="dsplog_capture_after_hang"
+DSPLOG_FILE_SIZE=10000000
 
-KERNEL_VERSION=`uname -r`
-CHIP=`grep AMBARELLA_ARCH /etc/ambarella.conf | cut -d'=' -f 2 | tr [:lower:] [:upper:]`
+KERNEL_VERSION=$(uname -r)
+CHIP=$(grep AMBARELLA_ARCH /etc/ambarella.conf | cut -d'=' -f 2 | tr '[:lower:]' '[:upper:]')
 
 glo_var=0
-get_interrupts()
+
+func_get_interrupts()
 {
-	irq=`cat /proc/interrupts | grep $1 | cut -d':' -f2 | grep -o "[0-9]*[0-9] "`
-	tmp=0
+	local irq=$(grep "$1" /proc/interrupts | cut -d':' -f2 | grep -o "[0-9]*[0-9] ")
+	local tmp=0
 	for i in $irq ; do
-		tmp=$(($tmp+$i))
+		tmp=$((tmp+i))
 	done
 	glo_var=$tmp
 }
 
-caplog_s2()
+func_dump_reg_error()
 {
-	amba_debug -w 0x70118000 -d 0x1000 && amba_debug -r 0x70110000 -s 0x100 > ${REGISTER_FOLDER}/vin_register.txt
-    amba_debug -r 0x70118040 -s 0x90 > ${REGISTER_FOLDER}/0x70118040_0x90.txt
-    amba_debug -r 0x70107C00 -s 0xB0 > ${REGISTER_FOLDER}/0x70107C00_0xB0.txt
-    #DSP PC address:
-    amba_debug -r 0x70160020 -s 0x20 > ${REGISTER_FOLDER}/0x70160020_0x20.txt
+	echo "Invalid Chip ID! Do nothing."
+}
+
+func_dump_reg_s2()
+{
+	amba_debug -w 0x70118000 -d 0x1000 && amba_debug -r 0x70110000 -s 0x120 > ${REGISTER_FOLDER}/vin_register.txt
+	amba_debug -r 0x70107C00 -s 0x120 > ${REGISTER_FOLDER}/0x70107C00_0x120.txt
+	amba_debug -r 0x70118040 -s 0x220 > ${REGISTER_FOLDER}/0x70118040_0x220.txt
+	# DSP PC address:
+	amba_debug -r 0x70160020 -s 0x20 > ${REGISTER_FOLDER}/0x70160020_0x20.txt
+	amba_debug -r 0x70160400 -s 0x410 > ${REGISTER_FOLDER}/0x70160400_0x410.txt
+	amba_debug -r 0x70140028 -s 0x20 > ${REGISTER_FOLDER}/0x70140028_0x20.txt
+	amba_debug -r 0x70150028 -s 0x20 > ${REGISTER_FOLDER}/0x70150028_0x20.txt
+	amba_debug -r 0x70140800 -s 0x210 > ${REGISTER_FOLDER}/0x70140800_0x210.txt
+	amba_debug -r 0x70150800 -s 0x210 > ${REGISTER_FOLDER}/0x70150800_0x210.txt
 	dmesg > ${REGISTER_FOLDER}/dmesg.txt
-	if [ $KERNEL_VERSION = "3.8.8" ] || [ $KERNEL_VERSION = "3.8.8+" ]; then
+	if [ "$KERNEL_VERSION" = "3.8.8" ] || [ "$KERNEL_VERSION" = "3.8.8+" ]; then
 		cat /proc/ambarella/mode > ${REGISTER_FOLDER}/mode.txt
 	else
 		cat /proc/ambarella/clock > ${REGISTER_FOLDER}/clock.txt
 	fi
 
 	sleep 10
-	amba_debug -r 0x80000 -s 0x20000 -f ${REGISTER_FOLDER}/dsplog_ambadebug.bin
+	amba_debug -r 0x80000 -s 0x20000 -f ${DSPLOG_FOLDER}/${DSPLOG_AMBADEBUG_FILE}.bin
+	dsplog_cap -i ${DSPLOG_FOLDER}/${DSPLOG_AMBADEBUG_FILE}.bin -f ${REGISTER_FOLDER}/${DSPLOG_AMBADEBUG_FILE}.txt
 }
 
-caplog_s2l()
+func_dump_reg_s2l()
 {
 	amba_debug -w 0xec118000 -d 0x1000 && amba_debug -r 0xec110000 -s 0x120 > ${REGISTER_FOLDER}/vin_register.txt
 
@@ -49,89 +98,279 @@ caplog_s2l()
 	amba_debug -r 0xec160200 -s 0x200 > ${REGISTER_FOLDER}/0xec160200_0x200.txt
 	amba_debug -r 0xec150028 -s 0x20 > ${REGISTER_FOLDER}/0xec150028_0x20.txt
 	amba_debug -r 0xec101c00 -s 0x80 > ${REGISTER_FOLDER}/0xec101c00_0x80.txt
-	amba_debug -r 0x08696240 -s 0x240 > ${REGISTER_FOLDER}/sec1_0x08696240.bin
-	amba_debug -r 0x08696000 -s 0x240 > ${REGISTER_FOLDER}/sec1_0x08696000.bin
-	amba_debug -r 0xC8696240 -s 0x240 > ${REGISTER_FOLDER}/sec1_0xC8696240.bin
-	amba_debug -r 0xC8696000 -s 0x240 > ${REGISTER_FOLDER}/sec1_0xC8696000.bin
+
+	cat /proc/ambarella/iav > ${REGISTER_FOLDER}/iav.txt
+	cat /proc/ambarella/clock > ${REGISTER_FOLDER}/clock.txt
+}
+
+func_dump_reg_s3l()
+{
+	amba_debug -w 0xec118000 -d 0x1000 && amba_debug -r 0xec110000 -s 0x120 > ${REGISTER_FOLDER}/vin_register.txt
+
+	amba_debug -r 0xec160020 -s 0x20 > ${REGISTER_FOLDER}/0xec160020_0x20.txt
+	amba_debug -r 0xec160400 -s 0x200 > ${REGISTER_FOLDER}/0xec160400_0x200.txt
+	amba_debug -r 0xec150028 -s 0x20 > ${REGISTER_FOLDER}/0xec150028_0x20.txt
+	amba_debug -r 0xec101c00 -s 0x100 > ${REGISTER_FOLDER}/0xec101c00_0x100.txt
+
+	cat /proc/ambarella/iav > ${REGISTER_FOLDER}/iav.txt
+	cat /proc/ambarella/clock > ${REGISTER_FOLDER}/clock.txt
+}
+
+func_dump_reg_s5()
+{
+	amba_debug -w 0xf4008000 -d 0x100 && amba_debug -r 0xf4000000 -s 0x120 > ${REGISTER_FOLDER}/vin0_register.txt
+	amba_debug -w 0xf4008000 -d 0x900 && amba_debug -r 0xf4000000 -s 0x120 > ${REGISTER_FOLDER}/vin1_register.txt
+	amba_debug -w 0xf4008000 -d 0x1500 && amba_debug -r 0xf4000000 -s 0x120 > ${REGISTER_FOLDER}/vin2_register.txt
+	amba_debug -w 0xf4008000 -d 0x1600 && amba_debug -r 0xf4000000 -s 0x120 > ${REGISTER_FOLDER}/vin3_register.txt
+
+	amba_debug -r 0xec130010 -s 0x40  > ${REGISTER_FOLDER}/0xec130010_0x40.txt
+	amba_debug -r 0xec130800 -s 0x800 > ${REGISTER_FOLDER}/0xec130800_0x800.txt
+	amba_debug -r 0xec010010 -s 0x40  > ${REGISTER_FOLDER}/0xec010010_0x40.txt
+	amba_debug -r 0xec010800 -s 0x800 > ${REGISTER_FOLDER}/0xec010800_0x800.txt
+	amba_debug -r 0xec160010 -s 0x1c0 > ${REGISTER_FOLDER}/0xec160010_0x1c0.txt
+	amba_debug -r 0xec160800 -s 0x600 > ${REGISTER_FOLDER}/0xec160800_0x600.txt
+	amba_debug -r 0xec06f000 -s 0x400 > ${REGISTER_FOLDER}/0xec06f000_0x400.txt
+}
+
+func_dump_reg_s5l()
+{
+	amba_debug -w 0xec118000 -d 0x1000 && amba_debug -r 0xec110000 -s 0x120 > ${REGISTER_FOLDER}/vin0_register.txt
+	amba_debug -w 0xec118000 -d 0xa000 && amba_debug -r 0xec110000 -s 0x120 > ${REGISTER_FOLDER}/vin1_register.txt
+
+	amba_debug -r 0xec160020 -s 0x20 > ${REGISTER_FOLDER}/0xec160020_0x20.txt
+	amba_debug -r 0xec160400 -s 0x200 > ${REGISTER_FOLDER}/0xec160400_0x200.txt
+	amba_debug -r 0xec150028 -s 0x20 > ${REGISTER_FOLDER}/0xec150028_0x20.txt
+	amba_debug -r 0xec101c00 -s 0x100 > ${REGISTER_FOLDER}/0xec101c00_0x100.txt
+
 	cat /proc/ambarella/iav > ${REGISTER_FOLDER}/iav.txt
 	cat /proc/ambarella/clock > ${REGISTER_FOLDER}/clock.txt
 }
 
-check_interrupt()
+func_dump_info()
 {
+	cat /proc/interrupts > ${REGISTER_FOLDER}/interrupt.txt
+	killall  dsplog_cap
+	date > ${REGISTER_FOLDER}/stop_date.txt
+	dsplog_cap -m all -b all -l 3 -o ${DSPLOG_FOLDER}/${DSPLOG_AFTER_FILE}.bin -p ${DSPLOG_FILE_SIZE} &
+	cat /proc/interrupts > ${REGISTER_FOLDER}/interrupt.txt
+	sleep 2
+	cat /proc/interrupts >> ${REGISTER_FOLDER}/interrupt.txt
+
+	echo "Get ${CHIP} DSP info"
+	if [ "$CHIP" = "S2" ] ; then
+		func_dump_reg_s2
+	elif [ "$CHIP" = "S2L" ] ; then
+		func_dump_reg_s2l
+	elif [ "$CHIP" = "S3L" ] ; then
+		func_dump_reg_s3l
+	elif [ "$CHIP" = "S5" ] ; then
+		func_dump_reg_s5
+	elif [ "$CHIP" = "S5L" ] ; then
+		func_dump_reg_s5l
+	else
+		func_dump_reg_error
+	fi
 
-	get_interrupts ${IRQ_LAST_PIXEL}
-	last_pixel=$glo_var
-	get_interrupts ${IRQ_VDSP}
-	vdsp=$glo_var
+	cat /proc/meminfo > ${REGISTER_FOLDER}/meminfo.txt
+	lsmod > ${REGISTER_FOLDER}/lsmod.txt
+	cat /proc/interrupts >> ${REGISTER_FOLDER}/interrupt.txt
+	test_encode --show-all > ${REGISTER_FOLDER}/test_encode_show_a.txt &
+	load_ucode /lib/firmware/ > ${REGISTER_FOLDER}/ucode.txt
+	cat /proc/interrupts >> ${REGISTER_FOLDER}/interrupt.txt
+	echo "================== ${CHIP} DSP HANG =================="
+	echo " DSP log binary by dsplog_cap is ${DSPLOG_FOLDER}/dsplog_capture_*****.bin "
+	echo " All the debug info have been captured on the /home/ "
+	echo " Please help to parse the ${DSPLOG_FOLDER}/dsplog_capture.bin in the follow command : "
+	echo " dsplog_cap -i ${DSPLOG_FOLDER}/dsplog_capture.bin -f ${REGISTER_FOLDER}/dsplog_capture.txt "
+	echo " Then send us the ${REGISTER_FOLDER}/dsplog_capture.txt and all the files on the /home "
+	echo "================== DSP HANG =================="
+	sleep 2
+	dmesg > ${REGISTER_FOLDER}/dmesg.txt
+	killall dsplog_cap
+	dsplog_cap -i ${DSPLOG_FOLDER}/${DSPLOG_BEFORE_FILE}.bin.1 -f ${REGISTER_FOLDER}/${DSPLOG_BEFORE_FILE}.1.txt
+	dsplog_cap -i ${DSPLOG_FOLDER}/${DSPLOG_BEFORE_FILE}.bin.2 -f ${REGISTER_FOLDER}/${DSPLOG_BEFORE_FILE}.2.txt
+	dsplog_cap -i ${DSPLOG_FOLDER}/${DSPLOG_AFTER_FILE}.bin.1 -f ${REGISTER_FOLDER}/${DSPLOG_AFTER_FILE}.1.txt
+
+	date > ${REGISTER_FOLDER}/end_date.txt
+}
+
+func_check_interrupt_s2l()
+{
+	func_get_interrupts ${IRQ_LAST_PIXEL}
+	local last_pixel=$glo_var
+
+	func_get_interrupts ${IRQ_VDSP}
+	local vdsp=$glo_var
 
 	sleep 1
 
-	get_interrupts ${IRQ_LAST_PIXEL}
-	last_pixel2=$glo_var
-	get_interrupts ${IRQ_VDSP}
-	vdsp2=$glo_var
+	func_get_interrupts ${IRQ_LAST_PIXEL}
+	local last_pixel2=$glo_var
 
-	diff_last_pixel=$(($last_pixel2-$last_pixel))
-	diff_vdsp=$(($vdsp2-$vdsp))
+	func_get_interrupts ${IRQ_VDSP}
+	local vdsp2=$glo_var
 
-	p2=${diff_last_pixel#-}
-	p3=${diff_vdsp#-}
+	local diff_last_pixel=$((last_pixel2-last_pixel))
+	local diff_vdsp=$((vdsp2-vdsp))
 
+	local p2=${diff_last_pixel#-}
+	local p3=${diff_vdsp#-}
 
 	echo "last_pixel in 1s: $p2"
 	echo "vdsp in 1s: $p3"
 
-	if [ $p2 -eq 0 ] || [ $p3 -eq 0 ]; then
-		cat /proc/interrupts > ${REGISTER_FOLDER}/interrupt.txt
-		sleep 5
-		killall  dsplog_cap
-		date > ${REGISTER_FOLDER}/stop_date.txt
-		dsplog_cap -m all -b all -l 3 -o ${DSPLOG_FOLDER}/dsplog_capture_after_hang.bin -p 5000000 &
-		cat /proc/interrupts > ${REGISTER_FOLDER}/interrupt.txt
-		sleep 1
-		cat /proc/interrupts >> ${REGISTER_FOLDER}/interrupt.txt
-
-		echo "Get ${CHIP} DSP info"
-		if [ ${CHIP} = "S2L" ]; then
-			caplog_s2l
-		else
-			caplog_s2
-		fi
-
-		dmesg > ${REGISTER_FOLDER}/dmesg.txt
-		cat /proc/meminfo > ${REGISTER_FOLDER}/meminfo.txt
-		lsmod > ${REGISTER_FOLDER}/lsmod.txt
-		cat /proc/interrupts >> ${REGISTER_FOLDER}/interrupt.txt
-		test_encode --show-a > ${REGISTER_FOLDER}/test_encode_show_a.txt &
-		load_ucode /lib/firmware/ > ${REGISTER_FOLDER}/ucode.txt
-		cat /proc/interrupts >> ${REGISTER_FOLDER}/interrupt.txt
-		echo "================== ${CHIP} DSP HANG =================="
-		echo " DSP log binary by dsplog_cap is ${DSPLOG_FOLDER}/dsplog_capture_*****.bin "
-		echo " All the debug info have been captured on the /home/ "
-		echo " Please help to parse the ${DSPLOG_FOLDER}/dsplog_capture.bin in the follow command : "
-		echo " dsplog_cap -i ${DSPLOG_FOLDER}/dsplog_capture.bin -f ${REGISTER_FOLDER}/dsplog_capture.txt "
-		echo " Then send us the ${REGISTER_FOLDER}/dsplog_capture.txt and all the files on the /home "
-		echo "================== DSP HANG =================="
-		sleep 2
-		killall dsplog_cap
-		dsplog_cap -i ${DSPLOG_FOLDER}/dsplog_capture_before_hang.bin.1 -f ${REGISTER_FOLDER}/dsplog_capture_before_hang.1.txt
-		dsplog_cap -i ${DSPLOG_FOLDER}/dsplog_capture_before_hang.bin.2 -f ${REGISTER_FOLDER}/dsplog_capture_before_hang.2.txt
-		dsplog_cap -i ${DSPLOG_FOLDER}/dsplog_capture_after_hang.bin.1 -f ${REGISTER_FOLDER}/dsplog_capture_after_hang.1.txt
-
-		date > ${REGISTER_FOLDER}/end_date.txt
+	if [ "$p2" -eq 0 ] || [ "$p3" -eq 0 ]; then
+		func_dump_info
 		exit 1
 	fi
 }
 
+func_check_interrupt_cv1()
+{
+
+	func_get_interrupts ${IRQ_VCAP}
+	local vcap=$glo_var
+
+	func_get_interrupts ${IRQ_VDSP}
+	local vdsp=$glo_var
+
+	sleep 1
+
+	func_get_interrupts ${IRQ_VCAP}
+	local vcap2=$glo_var
+
+	func_get_interrupts ${IRQ_VDSP}
+	local vdsp2=$glo_var
+
+	local diff_vcap=$((vcap2-vcap))
+	local diff_vdsp=$((vdsp2-vdsp))
+
+	local p2=${diff_vcap#-}
+	local p3=${diff_vdsp#-}
+
+	echo "vcap in 1s: $p2"
+	echo "vdsp in 1s: $p3"
+
+	if [ "$p2" -eq 0 ] || [ "$p3" -eq 0 ]; then
+		func_dump_info
+		exit 1
+	fi
+}
+
+func_check_interrupt_others()
+{
+	func_get_interrupts ${IRQ_LAST_PIXEL}
+	local last_pixel=$glo_var
+
+	func_get_interrupts ${IRQ_VCAP}
+	local vcap=$glo_var
+
+	func_get_interrupts ${IRQ_VDSP}
+	local vdsp=$glo_var
+
+	sleep 1
+
+	func_get_interrupts ${IRQ_LAST_PIXEL}
+	local last_pixel2=$glo_var
+
+	func_get_interrupts ${IRQ_VCAP}
+	local vcap2=$glo_var
+
+	func_get_interrupts ${IRQ_VDSP}
+	local vdsp2=$glo_var
+
+	local diff_last_pixel=$((last_pixel2-last_pixel))
+	local diff_vcap=$((vcap2-vcap))
+	local diff_vdsp=$((vdsp2-vdsp))
+
+	local p2=${diff_last_pixel#-}
+	local p3=${diff_vcap#-}
+	local p4=${diff_vdsp#-}
+
+	if [ "$CHIP" != "S5" ] ; then
+		echo "last_pixel in 1s: $p2"
+		echo "vcap in 1s: $p3"
+		echo "vdsp in 1s: $p4"
+	fi
+
+	if [ "$p2" -eq 0 ] || [ "$p3" -eq 0 ] || [ "$p4" -eq 0 ]; then
+		func_dump_info
+		exit 1
+	fi
+}
+
+func_check_interrupt_s5l()
+{
+	func_get_interrupts ${IRQ_LAST_PIXEL}
+	local last_pixel=$glo_var
+
+	func_get_interrupts ${IRQ_LAST_PIXEL_VIN1}
+	local last_pixel_vin1=$glo_var
+
+	func_get_interrupts ${IRQ_VCAP}
+	local vcap=$glo_var
+
+	func_get_interrupts ${IRQ_VDSP}
+	local vdsp=$glo_var
+
+	sleep 1
+
+	func_get_interrupts ${IRQ_LAST_PIXEL}
+	local last_pixel2=$glo_var
+
+	func_get_interrupts ${IRQ_LAST_PIXEL_VIN1}
+	local last_pixel2_vin1=$glo_var
+
+	func_get_interrupts ${IRQ_VCAP}
+	local vcap2=$glo_var
+
+	func_get_interrupts ${IRQ_VDSP}
+	local vdsp2=$glo_var
+
+	local diff_last_pixel=$((last_pixel2-last_pixel+last_pixel2_vin1-last_pixel_vin1))
+	local diff_vcap=$((vcap2-vcap))
+	local diff_vdsp=$((vdsp2-vdsp))
+
+	local p2=${diff_last_pixel#-}
+	local p3=${diff_vcap#-}
+	local p4=${diff_vdsp#-}
+
+	echo "last_pixel in 1s: $p2"
+	echo "vcap in 1s: $p3"
+	echo "vdsp in 1s: $p4"
+
+	if [ "$p2" -eq 0 ] || [ "$p3" -eq 0 ] || [ "$p4" -eq 0 ]; then
+		func_dump_info
+		exit 1
+	fi
+}
+
+func_check_interrupt()
+{
+	case "$CHIP" in
+	"S2L")
+	func_check_interrupt_s2l
+	;;
+	"S5L")
+	func_check_interrupt_s5l
+	;;
+	"CV1")
+	func_check_interrupt_cv1
+	;;
+	*)
+	func_check_interrupt_others
+	;;
+	esac
+}
+
+
 mkdir -p ${REGISTER_FOLDER}
 date > ${REGISTER_FOLDER}/start_date.txt
 
-dsplog_cap -m all -b all -l 3 -o ${DSPLOG_FOLDER}/dsplog_capture_before_hang.bin -p 5000000 &
+dsplog_cap -m all -b all -l 3 -o ${DSPLOG_FOLDER}/${DSPLOG_BEFORE_FILE}.bin -p ${DSPLOG_FILE_SIZE} &
 
-while [ true ]
+while true
 do
-
-check_interrupt
+func_check_interrupt
 done
 
diff --git a/amb_scripts/dspintcore.sh b/amb_scripts/dspintcore.sh
index f5e248e..e5c5a52 100644
--- a/amb_scripts/dspintcore.sh
+++ b/amb_scripts/dspintcore.sh
@@ -1,21 +1,49 @@
 #!/bin/bash
+#
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
 
 get_dsp()
 {
-	dsp=`echo $vin0_idsp | cut -d':' -f2 | grep -o "[0-9]*[0-9] "`
+	dsp=$(echo "$vin0_idsp" | cut -d':' -f2 | grep -o "[0-9]*[0-9] ")
 	tmp=0
 	for i in $dsp ; do
-		tmp=$(($tmp+$i))
+		tmp=$((tmp+i))
 	done
 	return $tmp
 }
 
 get_dsp2()
 {
-	dsp2=`echo $vin0_idsp | cut -d':' -f3 | grep -o "[0-9]*[0-9] "`
+	dsp2=$(echo "$vin0_idsp" | cut -d':' -f3 | grep -o "[0-9]*[0-9] ")
 	tmp=0
 	for i in $dsp2 ; do
-		tmp=$(($tmp+$i))
+		tmp=$((tmp+i))
 	done
 	return $tmp
 }
@@ -36,25 +64,25 @@ creat_dir()
 
 check_and_creat_file()
 {
-	random=`cat /proc/uptime | cut -d'.' -f0`
+	random=$(cut -d'.' -f0 /proc/uptime)
 	redirect=dsplog_$random
-	while [ -e /home/ambarella/$redirect ];do
+	while [ -e /home/ambarella/"$redirect" ];do
 		echo "$redirect Exit file ,re-create!"
-		random=`cat /proc/uptime | cut -d'.' -f0`
+		random=$(cut -d'.' -f0 /proc/uptime)
 		redirect=dsplog_$random
 	done
 	return 0
 }
 
-if [ -z $1 ];then
+if [ -z "$1" ];then
 	help
 fi
 
-if [ $1 = "-h" ];then
+if [ "$1" = "-h" ];then
 	help
 fi
 
-echo $1 | egrep '^[0-9]+$'
+echo "$1" | egrep '^[0-9]+$'
 notdit=$?
 if [ $notdit -eq 1 ];then
 	echo "Please enter the number!"
@@ -65,16 +93,16 @@ redirect=
 creat_dir
 check_and_creat_file
 redirect=/home/ambarella/$redirect
-touch $redirect
+touch "$redirect"
 
 flag=0
 xflag=0
 max_gap=0
-uptime=`cat /proc/uptime | cut -d' ' -f1 | cut -d'.' -f1`
-current=`cat /proc/uptime | cut -d' ' -f1 | cut -d'.' -f1`
-while [ true ]
+uptime=$(cut -d' ' -f1 /proc/uptime | cut -d'.' -f1)
+current=$(cut -d' ' -f1 /proc/uptime | cut -d'.' -f1)
+while true
 do
-vin0_idsp=`cat /proc/interrupts | grep vin0_idsp`
+vin0_idsp=$(grep vin0_idsp /proc/interrupts)
 if [ $? -eq 0 ]; then
 	get_dsp
 	dsp=$?
@@ -82,36 +110,36 @@ if [ $? -eq 0 ]; then
 	dsp2=$?
 	if [ $flag -eq 0 ];then
 		if [ $dsp -gt $dsp2 ];then
-			diff=$(($dsp-$dsp2))
+			diff=$((dsp-dsp2))
 			diff2=0
 		else
-			diff2=$(($dsp2-$dsp))
+			diff2=$((dsp2-dsp))
 			diff=0
 		fi
 		echo "Start diff is ${diff#-}"
 		flag=1
 	fi
-	dsp=$(($dsp+$diff2))
-	dsp2=$(($dsp2+$diff))
-	n=$(($dsp-$dsp2))
+	dsp=$((dsp+diff2))
+	dsp2=$((dsp2+diff))
+	n=$((dsp-dsp2))
 	p=${n#-}
-	if [ $p -gt $1 ];then
+	if [ $p -gt "$1" ];then
 		xflag=0
-		echo "CARE !! Difference between vin0_idsp and vin0_idsp_last_pixel is more than $1!!" >> $redirect
-		cat /proc/interrupts >> $redirect
+		echo "CARE !! Difference between vin0_idsp and vin0_idsp_last_pixel is more than $1!!" >> "$redirect"
+		cat /proc/interrupts >> "$redirect"
 	fi
-	current=`cat /proc/uptime | cut -d' ' -f1 | cut -d'.' -f1`
+	current=$(cut -d' ' -f1 /proc/uptime| cut -d'.' -f1)
 	if [ $p -gt $max_gap ]; then
 		max_gap=$p
-		echo "Current max diff is $max_gap" >> $redirect
-		uptime=`cat /proc/uptime | cut -d' ' -f1 | cut -d'.' -f1`
+		echo "Current max diff is $max_gap" >> "$redirect"
+		uptime=$(cut -d' ' -f1 /proc/uptime| cut -d'.' -f1)
 	fi
-	timediff=$(($current-$uptime))
+	timediff=$((current-uptime))
 	timediff=${timediff#-}
 	if [ $timediff -gt 3600 ]; then
 		if [ $xflag -eq 0 ]; then
 			xflag=1
-			echo "The intr counts diffs cannot increase after running for a long time" >> $redirect
+			echo "The intr counts diffs cannot increase after running for a long time" >> "$redirect"
 		fi
 	fi
 else
diff --git a/amb_scripts/fisheye_dewarp.sh b/amb_scripts/fisheye_dewarp.sh
index 9bee562..fd3c3ff 100755
--- a/amb_scripts/fisheye_dewarp.sh
+++ b/amb_scripts/fisheye_dewarp.sh
@@ -1,7 +1,35 @@
 #!/bin/sh
+#
+# History:
+#	2012/05/05 - [Jian Tang] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
 
 /usr/local/bin/init.sh --imx172;
 /bin/cp /etc/camera/fisheye.conf.imx172.focusafe125  /etc/camera/fisheye.conf ;
-/usr/local/bin/rtsp_server & ;
+/usr/local/bin/rtsp_server &
 /usr/local/bin/test_fisheyecam 360 h1280 ;
 
diff --git a/amb_scripts/hostap.sh b/amb_scripts/hostap.sh
index 6aef4e2..7a5bfae 100644
--- a/amb_scripts/hostap.sh
+++ b/amb_scripts/hostap.sh
@@ -1,167 +1,285 @@
 #!/bin/sh
-
-##########################
+#
 # History:
-#	2013/06/24 - [Tao Wu] create file
+#	2013/06/24 - [Tao Wu] Create file
+#	2016/06/22 - [Tao Wu] Update file
+#
+# Copyright (c) 2015 Ambarella, Inc.
 #
-# Copyright (C) 2004-2013, Ambarella, Inc.
-##########################
-auth=$1
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+
+HOSTAP_VERSION="1.1.2"
+
+encryption=$1
 ssid=$2
+passwd=$3
+channel=$4
+
+DEVICE=wlan0
+DIR_CONFIG=/tmp/config
 
-INTERFACE=wlan0
-CTRL_INTERFACE=/var/run/wpa_supplicant
+############# HOSTAP CONFIG ###############
+WOWLAN=1
 HOSTAP_CTRL_INTERFACE=/var/run/hostapd
-CONFIG=/etc/network/hostapd.conf
+HOST_CONFIG=$DIR_CONFIG/hostapd.conf
 DEFAULT_CHANNEL=1
-channel=$DEFAULT_CHANNEL
+HOST_MAX_STA=5
+AP_PIN=12345670
+#DRIVER=nl80211
+
+wpa_group_rekey=120
+#############  DHCP Server ###############
+LOCAL_IP=192.168.42.1
+LOCAL_NETMASK=255.255.255.0
+DHCP_IP_START=192.168.42.2
+DHCP_IP_END=192.168.42.20
 
-usage()
+############# Exit Error Number ###############
+ERRNO_OK=0
+ERRNO_PARAM=1
+ERRNO_ENV=2
+#ERRNO_SSID_NOT_FOUND=3
+#ERRNO_PASSWORD_WRONG=4
+
+#####################################
+usages()
 {
-	echo "usage:  $0 wpa SSID PASSWORD CHANNEL"
-	echo "        $0 open SSID CHANNEL"
-	echo "        $0 wps SSID CHANNEL"
-	echo "        [ WPS Connect devices] #hostapd_cli -i<interface> [wps_pbc |wps_pin any <Pin Code> ]"
-	echo "        $0 stopap      Stop AP mode and Enter STA mode"
+	echo "Version: ${HOSTAP_VERSION}"
+	echo "This script used to Setup/Stop WiFi AP mode with hostapd"
+	echo "usage:             $0 [open|wpa2|wpa|wpawpa2|wps] <SSID> <Password> <Channel>"
+	echo ""
+	echo "Example:"
+	echo "Setup AP[Open]:    $0  open               <SSID>     0      <Channel>"
+	echo "Setup AP[Encrypt]: $0 [wpa2|wpa|wpawpa2]  <SSID> <Password> <Channel>"
+	echo "Setup AP[WPA2+WPS]:$0  wps                <SSID> <Password> <Channel>"
+	echo "      [Control AP] # hostapd_cli -i<interface> [wps_pbc | wps_pin any <PIN>] (PIN:${AP_PIN})"
+	echo "Stop AP mode:      $0 stop"
+	echo ""
+	echo "NOTICE: Using interface AP[${DEVICE}] by default, change it if necessary."
+
+	exit $ERRNO_OK
 }
 
-auth_wpa()
+# kill process
+kill_apps()
 {
-	echo "ctrl_interface=$CTRL_INTERFACE" >>$CONFIG
-	echo "ap_scan=2" >>$CONFIG
-	echo "network={" >>$CONFIG
-	echo "ssid=\"$ssid\"" >>$CONFIG
-	echo "mode=2" >>$CONFIG
-	echo "frequency=$freq" >>$CONFIG
-	echo "key_mgmt=WPA-PSK">>$CONFIG
-	echo "proto=RSN" >>$CONFIG
-	echo "pairwise=CCMP" >>$CONFIG
-	echo "psk=\"$passwd\"" >>$CONFIG
-	echo "}" >>$CONFIG
+	#the max times to kill app
+	local KILL_NUM_MAX=10
+
+	for app in "$@"
+	do
+		local kill_num=0
+		while [ "$(pgrep "${app}")" != "" ]
+		do
+			if [ $kill_num -ge $KILL_NUM_MAX ]; then
+				echo "Please try execute \"killall ${app}\" by yourself"
+				exit $ERRNO_ENV
+			else
+				killall -9 "${app}"
+				sleep 1
+			fi
+			kill_num=$((kill_num + 1));
+		done
+	done
 }
 
-auth_open()
+stop_wifi_app()
 {
-	echo "ctrl_interface=$CTRL_INTERFACE" >>$CONFIG
-	echo "ap_scan=2" >>$CONFIG
-	echo "network={" >>$CONFIG
-	echo "ssid=\"$ssid\"" >>$CONFIG
-	echo "mode=2" >>$CONFIG
-	echo "frequency=$freq" >>$CONFIG
-	echo "key_mgmt=NONE">>$CONFIG
-	echo "}" >>$CONFIG
+	kill_apps udhcpc dnsmasq NetworkManager hostapd_cli hostapd
+	ifconfig ${DEVICE} down
 }
 
-auth_wps()
+################ AP Mode #####################
+check_encrypt()
 {
-	echo "interface=$INTERFACE" >$CONFIG
-	echo "ctrl_interface=$HOSTAP_CTRL_INTERFACE" >>$CONFIG
-	echo "ssid=$ssid" >>$CONFIG
-	echo "ignore_broadcast_ssid=0" >>$CONFIG
-	echo "channel=$channel" >>$CONFIG
-	echo "wpa=2" >>$CONFIG
-	echo "wpa_key_mgmt=WPA-PSK" >>$CONFIG
-	echo "wpa_pairwise=CCMP" >>$CONFIG
-	echo "wpa_passphrase=12345670" >>$CONFIG
-	echo "wps_state=2" >>$CONFIG
-	echo "ap_pin=12345670" >>$CONFIG
-	echo "eap_server=1" >>$CONFIG
-	echo "ap_setup_locked=0" >>$CONFIG
-	echo "config_methods=label display push_button keypad ethernet" >>$CONFIG
-	echo "wps_pin_requests=/var/run/hostapd.pin-req" >>$CONFIG
+	if [ "${encryption}" != "open" ]; then
+		len=${#passwd}
+		if [ "$len" -lt 8 ]; then
+			echo "Password length at least 8"
+			exit 1
+		fi
+	fi
 }
 
-start_ap()
+check_channel()
 {
-mkdir -p /var/lib/misc
+	if [ ${#channel} -gt 0 ]; then
+		if [ "${channel}" -gt 196 ] || [ "${channel}" -lt 1 ]; then
+			echo "Your Channel is wrong(1 ~ 196), using Channel ${DEFAULT_CHANNEL} by default."
+			channel=$DEFAULT_CHANNEL
+		fi
+	else
+		echo "No specified channel, using default channel ${DEFAULT_CHANNEL}."
+		channel=$DEFAULT_CHANNEL
+	fi
+}
 
-if [ -x /etc/init.d/S45network-manager ]; then
-	/etc/init.d/S45network-manager stop
-fi
-killall -9 wpa_supplicant hostapd dnsmasq> /dev/null
+generate_hostapd_conf()
+{
+	if [ -f ${HOST_CONFIG} ]; then
+		## Use the saved config, Do not need generate new config except failed to connect.
+		return ;
+	fi
+	mkdir -p $DIR_CONFIG
 
-## Setup interface and set IP,gateway##
-ifconfig $INTERFACE up
-ifconfig $INTERFACE 192.168.42.1
-route add default netmask 255.255.255.0 gw 192.168.42.1
-## Start Hostapd ##
-wpa_supplicant -Dnl80211 -i$INTERFACE -c$CONFIG &
-sleep 1
+	check_encrypt
+	check_channel
+	echo "AP: SSID[${ssid}], Password[${passwd}], Encryption[${encryption}], Channel[${channel}]."
 
+	echo "interface=${DEVICE}" > ${HOST_CONFIG}
+	echo "ctrl_interface=${HOSTAP_CTRL_INTERFACE}" >> ${HOST_CONFIG}
+	#echo "driver=${DRIVER}" >> ${HOST_CONFIG}
+
+	## This for WiFi suspend/resume
+	if [ $WOWLAN -eq 1 ]; then
+		echo "wowlan_triggers=any" >> ${HOST_CONFIG}
+	fi
+
+	{
+	echo "beacon_int=100"
+	echo "dtim_period=1"
+	echo "preamble=0"
+	echo "ssid=${ssid}"
+	echo "max_num_sta=${HOST_MAX_STA}"
+	} >> ${HOST_CONFIG}
+
+	if [ ${channel} -gt 14 ]; then
+		echo "hw_mode=a" >> ${HOST_CONFIG}
+	fi
+	echo "channel=${channel}" >> ${HOST_CONFIG}
+
+	if [ "${encryption}" != "open" ]; then
+		local len_passwd=${#passwd}
+		local local_passwd_value=""
+
+		if [ "$len_passwd" -eq 64 ]; then
+			echo "passphrase length is 64, using hex type"
+			local_passwd_value="${passwd}"
+		elif [ "$len_passwd" -ge 8 ] && [ "$len_passwd" -le 63 ]; then
+			local_passwd_value="${passwd}"
+		else
+			echo "Invalid passphrase length ${len_passwd} (expected: 8..63 or 64 hex)"
+			rm -rf ${HOST_CONFIG}
+			exit $ERRNO_PARAM
+		fi
+	fi
+
+	case ${encryption} in
+		open)
+			;;
+		wpa2)
+			echo "wpa=2" >> ${HOST_CONFIG}
+			echo "wpa_key_mgmt=WPA-PSK" >> ${HOST_CONFIG}
+			echo "wpa_pairwise=CCMP" >> ${HOST_CONFIG}
+			echo "wpa_passphrase=${local_passwd_value}" >> ${HOST_CONFIG}
+			;;
+		wpa)
+			echo "wpa=1" >> ${HOST_CONFIG}
+			echo "wpa_key_mgmt=WPA-PSK" >> ${HOST_CONFIG}
+			echo "wpa_pairwise=TKIP" >> ${HOST_CONFIG}
+			echo "wpa_passphrase=${local_passwd_value}" >> ${HOST_CONFIG}
+			;;
+		wpawpa2)
+			echo "wpa=2" >> ${HOST_CONFIG}
+			echo "wpa_key_mgmt=WPA-PSK" >> ${HOST_CONFIG}
+			echo "wpa_pairwise=TKIP CCMP" >> ${HOST_CONFIG}
+			echo "wpa_passphrase=${local_passwd_value}" >> ${HOST_CONFIG}
+			;;
+		wps)
+			echo "wpa=2" >> ${HOST_CONFIG}
+			echo "wpa_key_mgmt=WPA-PSK" >> ${HOST_CONFIG}
+			echo "wpa_pairwise=CCMP" >> ${HOST_CONFIG}
+			echo "wpa_passphrase=${local_passwd_value}" >> ${HOST_CONFIG}
+
+			echo "wps_state=2" >> ${HOST_CONFIG}
+			echo "eap_server=1" >> ${HOST_CONFIG}
+			echo "ap_pin=${AP_PIN}" >> ${HOST_CONFIG}
+			echo "config_methods=label display push_button keypad ethernet" >> ${HOST_CONFIG}
+			echo "wps_pin_requests=/var/run/hostapd.pin-req" >> ${HOST_CONFIG}
+			;;
+		*)
+			echo "Not support encryption [$encryption]"
+			exit $ERRNO_PARAM
+			;;
+	esac
+
+	echo "wpa_group_rekey=$wpa_group_rekey" >> ${HOST_CONFIG}
+	#echo "ignore_broadcast_ssid=0" >> ${HOST_CONFIG}
+	#echo "ap_setup_locked=0" >> ${HOST_CONFIG}
+}
+
+start_dhcp_server()
+{
 ## Start DHCP Server ##
-dnsmasq --no-daemon --no-resolv --no-poll --dhcp-range=192.168.42.2,192.168.42.254,1h &
-echo "HostAP Setup Finished."
+	mkdir -p /var/lib/misc
+	mkdir -p /etc/dnsmasq.d
+	dnsmasq -i${DEVICE} --no-daemon --no-resolv --no-poll --dhcp-range=${DHCP_IP_START},${DHCP_IP_END},1h &
 }
 
 hostapd_start_ap()
 {
-mkdir -p /var/lib/misc
-
-if [ -x /etc/init.d/S45network-manager ]; then
-	/etc/init.d/S45network-manager stop
-fi
-killall -9 wpa_supplicant hostapd dnsmasq> /dev/null
+	## Setup interface and set IP,gateway##
+	echo "Using Interface AP:[${DEVICE}]"
+	ifconfig ${DEVICE} ${LOCAL_IP} up
+	route add default netmask ${LOCAL_NETMASK} gw ${LOCAL_IP}
+	## Start Hostapd ##
+	CMD="hostapd ${HOST_CONFIG} -B"
+	echo "CMD=${CMD}"
+	$CMD
 
-## Setup interface and set IP,gateway##
-ifconfig $INTERFACE up
-ifconfig $INTERFACE 192.168.42.1
-route add default netmask 255.255.255.0 gw 192.168.42.1
-## Start Hostapd ##
-hostapd $CONFIG &
-sleep 1
-
-## Start DHCP Server ##
-dnsmasq --no-daemon --no-resolv --no-poll --dhcp-range=192.168.42.2,192.168.42.254,1h &
-echo "HostAP Setup Finished."
+	start_dhcp_server
+	echo "HostAP Setup Finished."
 }
 
-stop_ap()
+clear_config()
 {
-killall -9 wpa_supplicant hostapd dnsmasq > /dev/null
-### Re install module ###
-sleep 1
-if [ -x /etc/init.d/S45network-manager ]; then
-	/etc/init.d/S45network-manager start
-fi
-echo "HostAP Stop Finished."
+	rm -rf ${HOST_CONFIG}
 }
 
-rm -rf $CONFIG
+################   Main  ###################
 
-case $auth in
-	wpa)
-	passwd=$3
-	len=${#passwd}
-	if [ $len -lt 8 ]; then
-		echo "WPA password length at least 8"
-		exit 1
-	fi
-	if [ $4 != "" ]; then
-		channel=$4
-	fi
-	freq=$(($channel*5 +2407))
-	auth_wpa && start_ap
-	;;
-	open)
-	if [ $3 != "" ]; then
-		channel=$3
-	fi
-	freq=$(($channel*5 +2407))
-	auth_open && start_ap
-	;;
-	wps)
-	if [ $3 != "" ]; then
-		channel=$3
-	fi
-	freq=$(($channel*5 +2407))
-	auth_wps && hostapd_start_ap
-	;;
-	stopap)
-	stop_ap
-	;;
+## Show usage when no parameter
+if [ $# -eq 0 ]; then
+	usages
+fi
+
+## Start WiFi
+if [ $# -gt 1 ]; then
+	clear_config
+fi
+
+case ${encryption} in
+	"stop")
+		stop_wifi_app
+		;;
+	open|wpa2|wpa|wpawpa2|wps)
+		generate_hostapd_conf
+		hostapd_start_ap
+		;;
 	*)
-	echo "Please input authentication type."
-	usage
-	exit 1
-	;;
+		echo "Please Select Encryption [open|wpa2|wpa|wpawpa2|wps] or stop"
+		exit $ERRNO_PARAM
+		;;
 esac
+########################################
diff --git a/amb_scripts/init.sh b/amb_scripts/init.sh
index 6f5e7bc..f1e9cb7 100644
--- a/amb_scripts/init.sh
+++ b/amb_scripts/init.sh
@@ -1,437 +1,583 @@
 #!/bin/sh
-
-echo $PATH | grep "/usr/local/bin"
+#
+# History:
+#	2010/05/05 - [Jian Tang] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+
+echo "$PATH" | grep "/usr/local/bin"
 if [ $? -eq 1 ]; then
-      export PATH=$PATH:/usr/local/bin
+	export PATH=$PATH:/usr/local/bin
 fi
+kernel_ver=$(uname -r)
 
-AMBARELLA_CONF=ambarella.conf
 
-[ -r /etc/$AMBARELLA_CONF ] && . /etc/$AMBARELLA_CONF
+func_load_etc_cfg()
+{
+	local AMBARELLA_CONF=ambarella.conf
+	[ -r /etc/$AMBARELLA_CONF ] &&  .  /etc/$AMBARELLA_CONF
 
-kernel_ver=$(uname -r)
+	#set socket send and receive max buf size
+	echo 655360 > /proc/sys/net/core/wmem_max
+}
 
-if [ -d /sys/module/ambarella_config/parameters ]; then
-	config_dir=/sys/module/ambarella_config/parameters
-fi
-#set socket send and receive max buf size
-echo 655360 > /proc/sys/net/core/wmem_max
-
-if [ -x /tmp/mmcblk0p1/ext-pro.sh ]; then
-echo "==============================================="
-echo "Exec: /tmp/mmcblk0p1/ext-pro.sh"
-echo "==============================================="
-/tmp/mmcblk0p1/ext-pro.sh
-elif [ -x /home/default/ext-pro.sh ]; then
-echo "==============================================="
-echo "Exec: /home/default/ext-pro.sh"
-echo "==============================================="
-/home/default/ext-pro.sh
-fi
-case "$?" in
-    0)
-	;;
-    *)
-  	echo "Exec ext-pro.sh failed!"
-	exit 1
-	;;
-esac
-
-if [ -d /tmp/mmcblk0p1/lib/modules ]; then
-echo "==============================================="
-echo "Using ext modules: /tmp/mmcblk0p1/lib/modules"
-echo "==============================================="
-mount --bind /tmp/mmcblk0p1/lib/modules /lib/modules
-elif [ -d /home/default/lib/modules ]; then
-echo "==============================================="
-echo "Using ext modules: /home/default/lib/modules"
-echo "==============================================="
-mount --bind /home/default/lib/modules /lib/modules
-fi
-case "$?" in
-    0)
-	;;
-    *)
-  	echo "Mount ext modules failed!"
-	exit 1
-	;;
-esac
-
-if [ -d /tmp/mmcblk0p1/lib/firmware ]; then
-echo "==============================================="
-echo "Using ext firmware: /tmp/mmcblk0p1/lib/firmware"
-echo "==============================================="
-mount --bind /tmp/mmcblk0p1/lib/firmware /lib/firmware
-elif [ -d /home/default/lib/firmware ]; then
-echo "==============================================="
-echo "Using ext firmware: /home/default/lib/firmware"
-echo "==============================================="
-mount --bind /home/default/lib/firmware /lib/firmware
-elif [ -d /lib/firmware/still ] && [ "$AMBARELLA_CALI" = "1" ]; then
-echo "==============================================="
-echo "Using stillcap firmware: /lib/firmware/still"
-echo "==============================================="
-mount --bind /lib/firmware/still /lib/firmware
-fi
-case "$?" in
-    0)
-	;;
-    *)
-  	echo "Mount ext firmware failed!"
-	exit 1
-	;;
-esac
-
-if [ "$SYS_BOARD_BSP" = "a2ipcam" ]; then
-	echo "Note: iav module param can be changed to enable slow shutter and disable osd insert"
-	modprobe iav disable_osd_insert=0
-else
-	modprobe iav
-fi
-case "$?" in
-    0)
-	;;
-    *)
-  	echo "Modprobe IAV failed!"
-	exit 1
-	;;
-esac
-
-modprobe ambtve
-case "$?" in
-    0)
-	;;
-    *)
-  	echo "Modprobe ambtve failed!"
-	exit 1
-	;;
-esac
-
-if [ -r /lib/modules/$kernel_ver/extra/ambdbus.ko ]; then
-	modprobe ambdbus
+func_load_sd_param_pre()
+{
+	if [ -x /tmp/mmcblk0p1/ext-pro.sh ]; then
+		echo "==============================================="
+		echo "Exec: /tmp/mmcblk0p1/ext-pro.sh"
+		echo "==============================================="
+		/tmp/mmcblk0p1/ext-pro.sh
+	elif [ -x /home/default/ext-pro.sh ]; then
+		echo "==============================================="
+		echo "Exec: /home/default/ext-pro.sh"
+		echo "==============================================="
+		/home/default/ext-pro.sh
+	fi
 	case "$?" in
-	    0)
+		0)
 		;;
-	    *)
-	  	echo "Modprobe ambdbus failed!"
+		*)
+		echo "Exec ext-pro.sh failed!"
+		exit 1
 		;;
 	esac
-fi
-
-if [ -r /lib/modules/$kernel_ver/extra/ambhdmi.ko ]; then
-        modprobe ambhdmi
-        case "$?" in
-            0)
-                ;;
-            *)
-                echo "Modprobe ambhdmi failed!"
-                ;;
-        esac
-fi
 
-if [ -r /lib/modules/$kernel_ver/extra/vin.ko ]; then
-        modprobe vin
-        case "$?" in
-            0)
-              ;;
-            *)
-               echo "Modprobe vin failed!"
-               exit 1
-               ;;
-        esac
-fi
+	if [ -d /tmp/mmcblk0p1/lib/modules ]; then
+		echo "==============================================="
+		echo "Using ext modules: /tmp/mmcblk0p1/lib/modules"
+		echo "==============================================="
+		mount --bind /tmp/mmcblk0p1/lib/modules /lib/modules
+	elif [ -d /home/default/lib/modules ]; then
+		echo "==============================================="
+		echo "Using ext modules: /home/default/lib/modules"
+		echo "==============================================="
+		mount --bind /home/default/lib/modules /lib/modules
+	fi
+	case "$?" in
+		0)
+		;;
+		*)
+		echo "Mount ext modules failed!"
+		exit 1
+		;;
+	esac
 
-default_vin=mt9t002
-if [ "$SYS_BOARD_BSP" = "s2ipcam" ]; then
-	#export ext gpio(10) to use vin gpio reset
-	echo 168 > /sys/class/gpio/export
-fi
+	if [ -d /tmp/mmcblk0p1/lib/firmware ]; then
+		echo "==============================================="
+		echo "Using ext firmware: /tmp/mmcblk0p1/lib/firmware"
+		echo "==============================================="
+		mount --bind /tmp/mmcblk0p1/lib/firmware /lib/firmware
+	elif [ -d /home/default/lib/firmware ]; then
+		echo "==============================================="
+		echo "Using ext firmware: /home/default/lib/firmware"
+		echo "==============================================="
+		mount --bind /home/default/lib/firmware /lib/firmware
+	elif [ -d /lib/firmware/still ] && [ "$AMBARELLA_CALI" = "1" ]; then
+		echo "==============================================="
+		echo "Using stillcap firmware: /lib/firmware/still"
+		echo "==============================================="
+		mount --bind /lib/firmware/still /lib/firmware
+	fi
+	case "$?" in
+		0)
+		;;
+		*)
+		echo "Mount ext firmware failed!"
+		exit 1
+		;;
+	esac
+}
 
-case $1 in
-    --mt9p006 ) insmod /lib/modules/$kernel_ver/extra/mt9p006.ko ;;
-    --m3135 ) insmod /lib/modules/$kernel_ver/extra/mt9t002.ko ;;
-    --mt9t002 ) insmod /lib/modules/$kernel_ver/extra/mt9t002.ko ;;
-    --mt9t002_mipi ) insmod /lib/modules/$kernel_ver/extra/mt9t002_mipi.ko adapter_id=1;;
-    --ar0330 )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	insmod /lib/modules/$kernel_ver/extra/mt9t002.ko ;;
-    --mt9t002_s3d )
-	insmod /lib/modules/$kernel_ver/extra/sbrg.ko
-	insmod /lib/modules/$kernel_ver/extra/mt9t002_s3d.ko
-	;;
-    --ar0330cs ) insmod /lib/modules/$kernel_ver/extra/mt9t002_parallel.ko ;;
-    --ar0330cs_mipi ) insmod /lib/modules/$kernel_ver/extra/mt9t002_mipi.ko ;;
-    --ar0331 ) insmod /lib/modules/$kernel_ver/extra/ar0331.ko hdr_mode=1;;
-    --ar0130 ) insmod /lib/modules/$kernel_ver/extra/ar0130.ko ;;
-    --ar0835hs ) insmod /lib/modules/$kernel_ver/extra/ar0835hs.ko ;;
-    --ar0141 ) insmod /lib/modules/$kernel_ver/extra/ar0141.ko ;;
-    --ar0230 ) insmod /lib/modules/$kernel_ver/extra/ar0230.ko ;;
-    --ar0237 ) insmod /lib/modules/$kernel_ver/extra/ar0237.ko ;;
-    --mt9m033 ) insmod /lib/modules/$kernel_ver/extra/mt9m033.ko ;;
-    --mt9m034 ) insmod /lib/modules/$kernel_ver/extra/mt9m033.ko ;;
-    --imx035 ) insmod /lib/modules/$kernel_ver/extra/imx035.ko ;;
-    --imx036 ) insmod /lib/modules/$kernel_ver/extra/imx036.ko ;;
-    --imx121 ) insmod /lib/modules/$kernel_ver/extra/imx121.ko ;;
-    --imx122 ) insmod /lib/modules/$kernel_ver/extra/imx122.ko ;;
-    --imx104 ) insmod /lib/modules/$kernel_ver/extra/imx104.ko ;;
-    --imx136 ) insmod /lib/modules/$kernel_ver/extra/imx136_lvds.ko ;;
-    --imx136_wdr ) insmod /lib/modules/$kernel_ver/extra/imx136_parallel.ko ;;
-    --imx136_120fps ) insmod /lib/modules/$kernel_ver/extra/imx136_plvds.ko ;;
-    --imx172 ) insmod /lib/modules/$kernel_ver/extra/imx172.ko ;;
-    --imx174 ) insmod /lib/modules/$kernel_ver/extra/imx174.ko ;;
-    --imx138 ) insmod /lib/modules/$kernel_ver/extra/imx104.ko ;;
-    --imx178 ) insmod /lib/modules/$kernel_ver/extra/imx178.ko ;;
-    --imx178_spi ) insmod /lib/modules/$kernel_ver/extra/imx178.ko spi=1 bus_addr=0 ;;
-    --imx185 ) insmod /lib/modules/$kernel_ver/extra/imx185.ko ;;
-    --imx185_120fps ) insmod /lib/modules/$kernel_ver/extra/imx185_plvds.ko ;;
-    --imx226 ) insmod /lib/modules/$kernel_ver/extra/imx226.ko ;;
-    --imx123 ) insmod /lib/modules/$kernel_ver/extra/imx123.ko ;;
-    --imx124 ) insmod /lib/modules/$kernel_ver/extra/imx124.ko ;;
-    --imx224 ) insmod /lib/modules/$kernel_ver/extra/imx224.ko ;;
-    --imx183 ) insmod /lib/modules/$kernel_ver/extra/imx183.ko ;;
-    --imx322 ) insmod /lib/modules/$kernel_ver/extra/imx322.ko ;;
-    --imx290 ) insmod /lib/modules/$kernel_ver/extra/imx290.ko ;;
-    --imx291 ) insmod /lib/modules/$kernel_ver/extra/imx291.ko ;;
-    --imx250 ) insmod /lib/modules/$kernel_ver/extra/imx250.ko ;;
-    --ov7740 ) insmod /lib/modules/$kernel_ver/extra/ov7740.ko ;;
-    --ov2710 ) insmod /lib/modules/$kernel_ver/extra/ov2710_parallel.ko ;;
-    --ov2710_mipi ) insmod /lib/modules/$kernel_ver/extra/ov2710_mipi.ko ;;
-    --ov2715 ) insmod /lib/modules/$kernel_ver/extra/ov2710_parallel.ko ;;
-    --ov2715_mipi ) insmod /lib/modules/$kernel_ver/extra/ov2710_mipi.ko ;;
-    --ov5653 ) insmod /lib/modules/$kernel_ver/extra/ov5653.ko ;;
-    --ov9710 ) insmod /lib/modules/$kernel_ver/extra/ov9710.ko ;;
-    --ov9718 ) insmod /lib/modules/$kernel_ver/extra/ov9718_mipi.ko ;;
-    --ov9718_mipi ) insmod /lib/modules/$kernel_ver/extra/ov9718_mipi.ko ;;
-    --ov9715 ) insmod /lib/modules/$kernel_ver/extra/ov9710.ko ;;
-    --ov9750_mipi ) insmod /lib/modules/$kernel_ver/extra/ov9750_mipi.ko ;;
-    --ov9732 ) insmod /lib/modules/$kernel_ver/extra/ov9732_mipi.ko ;;
-    --ov9732_parallel ) insmod /lib/modules/$kernel_ver/extra/ov9732_parallel.ko ;;
-    --altera_fpga ) insmod /lib/modules/$kernel_ver/extra/altera_fpga.ko ;;
-    --gs2970 )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	insmod /lib/modules/$kernel_ver/extra/gs2970.ko ;;
-    --ov10630_yuv ) insmod /lib/modules/$kernel_ver/extra/ov10630_yuv.ko ;;
-    --ov10633_yuv ) insmod /lib/modules/$kernel_ver/extra/ov10633_yuv.ko ;;
-    --ov10630_rgb ) insmod /lib/modules/$kernel_ver/extra/ov10630_rgb.ko ;;
-    --ov4689 ) insmod /lib/modules/$kernel_ver/extra/ov4689_mipi.ko ;;
-    --ov4689_2lane ) insmod /lib/modules/$kernel_ver/extra/ov4689_mipi.ko lane=2 ;;
-    --ov5658 ) insmod /lib/modules/$kernel_ver/extra/ov5658_mipi.ko ;;
-    --mn34041pl ) insmod /lib/modules/$kernel_ver/extra/mn34041pl.ko ;;
-    --mn34031pl ) insmod /lib/modules/$kernel_ver/extra/mn34031pl.ko ;;
-    --mn34210pl ) insmod /lib/modules/$kernel_ver/extra/mn34210pl.ko ;;
-    --mn34220pl ) insmod /lib/modules/$kernel_ver/extra/mn34220pl.ko ;;
-    --mn34220   ) insmod /lib/modules/$kernel_ver/extra/mn34220pl.ko ;;
-    --mn34230pl ) insmod /lib/modules/$kernel_ver/extra/mn34230pl.ko ;;
-    --gt2005 ) insmod /lib/modules/$kernel_ver/extra/gt2005.ko ;;
-    --tw9910 )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	insmod /lib/modules/$kernel_ver/extra/tw9910.ko ;;
-    --adv7443 )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	insmod /lib/modules/$kernel_ver/extra/adv7443.ko ;;
-    --adv7441 )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	if [  -e /lib/firmware/EDID.bin ]; then
-		insmod /lib/modules/$kernel_ver/extra/adv7443.ko edid_data=EDID.bin
+func_load_iav_driver()
+{
+	if [ "$SYS_BOARD_BSP" = "a2ipcam" ]; then
+		echo "Note: iav module param can be changed to enable slow shutter and disable osd insert"
+		modprobe iav disable_osd_insert=0
 	else
-		insmod /lib/modules/$kernel_ver/extra/adv7443.ko
+		modprobe iav
 	fi
-	;;
-    --adv7441a )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	if [  -e /lib/firmware/EDID.bin ]; then
-		insmod /lib/modules/$kernel_ver/extra/adv7441a.ko edid_data=EDID.bin
-	else
-		insmod /lib/modules/$kernel_ver/extra/adv7441a.ko
+	case "$?" in
+		0)
+		;;
+		*)
+		echo "Modprobe IAV failed!"
+		exit 1
+		;;
+	esac
+}
+
+func_load_vout_driver()
+{
+	if [ -r /lib/modules/"$kernel_ver"/extra/ambtve.ko ]; then
+		modprobe ambtve
+		case "$?" in
+			0)
+			;;
+			*)
+			echo "Modprobe ambtve failed!"
+			exit 1
+			;;
+		esac
 	fi
-	;;
-    --adv7619 )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	if [  -e /lib/firmware/EDID.bin ]; then
-		insmod /lib/modules/$kernel_ver/extra/adv7619.ko edid_data=EDID.bin
-	else
-		insmod /lib/modules/$kernel_ver/extra/adv7619.ko
+
+	if [ -r /lib/modules/"$kernel_ver"/extra/ambdve.ko ]; then
+		modprobe ambdve
+		case "$?" in
+			0)
+			;;
+			*)
+			echo "Modprobe ambdve failed!"
+			exit 1
+			;;
+		esac
 	fi
-	;;
-    --tvp5150 )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	insmod /lib/modules/$kernel_ver/extra/tvp5150.ko ;;
-
-    --yuv480i ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=1 video_bits=8 video_mode=65520 cap_cap_w=720 cap_cap_h=480 video_phase=3 video_fps=8541875 video_pixclk=27000000 video_yuv_mode=1;;
-    --yuv480p ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=65522 cap_cap_w=720 cap_cap_h=480 video_phase=3 video_fps=8541875 video_pixclk=27000000 video_yuv_mode=3;;
-    --yuv576i ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=1 video_bits=8 video_mode=65521 cap_cap_w=720 cap_cap_h=576 video_phase=3 video_fps=10240000 video_pixclk=27000000 video_yuv_mode=1;;
-    --yuv576p ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=65523 cap_cap_w=720 cap_cap_h=576 video_phase=3 video_fps=10240000 video_pixclk=27000000 video_yuv_mode=3;;
-    --yuv720p ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=65524 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=8541875 video_yuv_mode=3;;
-    --yuv720p50 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=65525 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=10240000 video_yuv_mode=3;;
-    --yuv720p30 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=40 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=17066667 video_yuv_mode=3;;
-    --yuv720p25 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=39 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
-    --yuv720p24 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=38 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=21333333 video_yuv_mode=3;;
-    --yuv1080i ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_format=1 video_type=6 video_mode=65526 cap_cap_w=1920 cap_cap_h=1080 video_phase=2 video_yuv_mode=3 video_fps=8541875 ;;
-    --yuv1080i50 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=6 video_format=1 video_bits=16 video_mode=65527 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_fps=10240000 video_yuv_mode=3;;
-    --yuv1080p30 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_mode=65533 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=17066667 ;;
-    --yuv1080p25 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=6 video_format=2 video_bits=16 video_mode=65532 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
-    --yuv1080p ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=6 video_mode=65528 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=17083750 video_pixclk=148500000;;
-    --yuv1080p50 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=6 video_mode=65529 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=10240000 video_pixclk=148500000;;
-    --yuv1600p30 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=6 video_mode=12 cap_cap_w=1600 cap_cap_h=1200 video_phase=3 video_yuv_mode=3 video_fps=17083750 video_pixclk=27000000;;
-    --mdin380 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=6 video_mode=12 cap_cap_w=1600 cap_cap_h=1200 video_phase=3 video_yuv_mode=3 video_fps=17083750 ;;
-    --yuv1280_960p30 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=16 cap_cap_w=1280 cap_cap_h=960 video_phase=3 video_fps=17066667 video_yuv_mode=3;;
-    --yuv1280_960p25 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=16 cap_cap_w=1280 cap_cap_h=960 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
-
-    --yuv480i_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=1 video_bits=8 video_mode=65520 cap_start_x=64 cap_start_y=18 cap_cap_w=720 cap_cap_h=480 video_phase=0 video_fps=8541875 video_pixclk=27000000 video_yuv_mode=0;;
-    --yuv480p_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65522 cap_start_x=60 cap_start_y=36 cap_cap_w=720 cap_cap_h=480 video_phase=0 video_fps=8541875 video_pixclk=27000000 video_yuv_mode=3;;
-    --yuv576i_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=1 video_bits=8 video_mode=65521 cap_start_x=60 cap_start_y=22 cap_cap_w=720 cap_cap_h=576 video_phase=0 video_fps=10240000 video_pixclk=27000000 video_yuv_mode=0;;
-    --yuv576p_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65523 cap_start_x=66 cap_start_y=44 cap_cap_w=720 cap_cap_h=576 video_phase=0 video_fps=10240000 video_pixclk=27000000 video_yuv_mode=3;;
-    --yuv720p_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65524 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=8541875 video_yuv_mode=3;;
-    --yuv720p50_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65525 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=10240000 video_yuv_mode=3;;
-    --yuv720p30_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=40 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=17066667 video_yuv_mode=3;;
-    --yuv720p25_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=39 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
-    --yuv720p24_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=38 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=21333333 video_yuv_mode=3;;
-    --yuv1080i_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_format=1 video_type=1 video_mode=65526 cap_start_x=192 cap_start_y=20 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=8541875 ;;
-    --yuv1080i50_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=1 video_bits=16 video_mode=65527 cap_start_x=192 cap_start_y=20 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_fps=10240000 video_yuv_mode=3;;
-    --yuv1080p30_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_mode=65533 cap_start_x=192 cap_start_y=41 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=17066667 ;;
-    --yuv1080p25_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65532 cap_start_x=192 cap_start_y=41 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
-    --yuv1080p_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_mode=65528 cap_start_x=192 cap_start_y=41 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=17083750 video_pixclk=148500000;;
-    --yuv1080p50_601 ) insmod /lib/modules/$kernel_ver/extra/ambdd.ko video_type=1 video_mode=65529 cap_start_x=192 cap_start_y=41 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=10240000 video_pixclk=148500000;;
-
-    --na )
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	echo "Init without VIN drivers..." ;;
-    --gps )
-    echo " Load default Touch Screen Driver "
-    insmod /lib/modules/$kernel_ver/kernel/drivers/input/touchscreen/ak4183.ko
-	insmod /lib/modules/$kernel_ver/extra/$default_vin.ko
-    ;;
-    --ak4183 )
-    echo " Load ak4183 Touch Screen Driver "
-    insmod /lib/modules/$kernel_ver/kernel/drivers/input/touchscreen/ak4183.ko
-	insmod /lib/modules/$kernel_ver/extra/$default_vin.ko
-    ;;
-    --chacha_mt4d )
-    echo " Load chacha_mt4d Touch Screen driver "
-    insmod /lib/modules/$kernel_ver/kernel/drivers/input/touchscreen/chacha_mt4d.ko
-	insmod /lib/modules/$kernel_ver/extra/$default_vin.ko
-    ;;
-    --nvr_demo )
-    echo " Load NVR demo Touch Screen driver "
-    insmod /lib/modules/$kernel_ver/kernel/drivers/input/touchscreen/tm1726.ko
-    ;;
-    *)
-	echo -1 > $config_dir/board_vin0_vsync_irq_gpio
-	echo "Default method to init without VIN drivers..."
-	#echo "Use $default_vin as default."
-	echo "Cat this file to find out what VIN can be supported."
-	#insmod /lib/modules/$kernel_ver/extra/$default_vin.ko
-	;;
-esac
-case "$?" in
-    0)
-	;;
-    *)
-  	echo "Insmod $1 failed!"
-	exit 1
-	;;
-esac
-
-if [ -r /lib/modules/$kernel_ver/extra/amba_lens.ko ]; then
-	modprobe amba_lens
-fi
 
-case "$2" in
-    --m13vp288ir ) insmod /lib/modules/$kernel_ver/extra/m13vp288ir.ko ;;
-	--mz128bp2810icr ) insmod /lib/modules/$kernel_ver/extra/mz128bp2810icr.ko ;;
-    *)
-        echo "Default init without lens driver"
-        ;;
-esac
-case "$?" in
-    0)
-        ;;
-    *)
-        echo "Insmod $2 failed!"
-        exit 1
-        ;;
-esac
-
-if [ -r /lib/modules/$kernel_ver/extra/ambad.ko ]; then
-	modprobe ambad
-fi
+	if [ -r /lib/modules/"$kernel_ver"/extra/ambdbus.ko ]; then
+		modprobe ambdbus
+		case "$?" in
+			0)
+			;;
+			*)
+			echo "Modprobe ambdbus failed!"
+			;;
+		esac
+	fi
 
-if [ -r /lib/modules/$kernel_ver/extra/fdet.ko ]; then
-	modprobe fdet
-fi
+	if [ -r /lib/modules/"$kernel_ver"/extra/lcd_td043.ko ]; then
+		modprobe lcd_td043
+		case "$?" in
+			0)
+			;;
+			*)
+			echo "Modprobe lcd_td043 failed!"
+			;;
+		esac
+	fi
 
-if [ -r /lib/modules/$kernel_ver/extra/mpu6000.ko ]; then
-	modprobe mpu6000
-fi
+	if [ -r /lib/modules/"$kernel_ver"/extra/ambhdmi.ko ]; then
+		modprobe ambhdmi
+		case "$?" in
+			0)
+			;;
+			*)
+			echo "Modprobe ambhdmi failed!"
+			;;
+		esac
+	fi
+}
 
-if [ -r /lib/modules/$kernel_ver/extra/eis.ko ]; then
-	modprobe eis
-fi
+func_load_vin_driver()
+{
+	local default_vin=mt9t002
+	local sensor=$1
 
-case $2 in
-	--high )
-	/usr/local/bin/amba_debug -w 0x701700e4 -d 0x30110100 && /usr/local/bin/amba_debug -w 0x701700e4 -d 0x30110101 && /usr/local/bin/amba_debug -w 0x701700e4 -d 0x30110100
-	echo "Change iDSP to 147 MHz"
-	/usr/local/bin/amba_debug -w 0x701700dc -d 0x1c111000 && /usr/local/bin/amba_debug -w 0x701700dc -d 0x1c111001 && /usr/local/bin/amba_debug -w 0x701700dc -d 0x1c111000
-	echo "Change DDR2 to 348 MHz"
-	;;
-	*)
-	echo "Use default settings"
-	;;
-esac
-
-LOAD_UCODE=`which load_ucode`
-if [  -e $LOAD_UCODE ]; then
-$LOAD_UCODE /lib/firmware
-case "$?" in
-	0)
-	;;
-	*)
-  	echo "Load ucode failed!"
-	exit 1
-	;;
-esac
-fi
+	if [ -d /sys/module/ambarella_config/parameters ]; then
+		local config_dir=/sys/module/ambarella_config/parameters
+	fi
 
-if [  -e /usr/local/bin/iav_server ]; then
-echo "Start IAV Server ..."
-/usr/local/bin/iav_server &
-fi
+	if [ -r /lib/modules/"$kernel_ver"/extra/vin.ko ]; then
+		modprobe vin
+		case "$?" in
+			0)
+			;;
+			*)
+			echo "Modprobe vin failed!"
+			exit 1
+			;;
+		esac
+	fi
 
-if [  -e /tmp/mmcblk0p1/ext-post.sh ]; then
-echo "==============================================="
-echo "Exec: /tmp/mmcblk0p1/ext-post.sh"
-echo "==============================================="
-/tmp/mmcblk0p1/ext-post.sh
-elif [  -e /home/default/ext-post.sh ]; then
-echo "==============================================="
-echo "Exec: /home/default/ext-post.sh"
-echo "==============================================="
-/home/default/ext-post.sh
-fi
-case "$?" in
-    0)
-	;;
-    *)
-  	echo "Exec ext-post.sh failed!"
-	exit 1
-	;;
-esac
-
-#add dsp log driver
-if [ -r /lib/modules/$kernel_ver/extra/dsplog.ko ]; then
-	echo "load dsplog driver "
-	modprobe dsplog
-fi
+	if [ "$SYS_BOARD_BSP" = "s2ipcam" ]; then
+		#export ext gpio(10) to use vin gpio reset
+		echo 168 > /sys/class/gpio/export
+	fi
+
+	case $sensor in
+		--mt9p006 ) insmod /lib/modules/"$kernel_ver"/extra/mt9p006.ko ;;
+		--m3135 ) insmod /lib/modules/"$kernel_ver"/extra/mt9t002.ko ;;
+		--mt9t002 ) insmod /lib/modules/"$kernel_ver"/extra/mt9t002.ko ;;
+		--mt9t002_mipi ) insmod /lib/modules/"$kernel_ver"/extra/mt9t002_mipi.ko adapter_id=1;;
+		--ar0330 )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			insmod /lib/modules/"$kernel_ver"/extra/mt9t002.ko ;;
+		--mt9t002_s3d )
+			insmod /lib/modules/"$kernel_ver"/extra/sbrg.ko
+			insmod /lib/modules/"$kernel_ver"/extra/mt9t002_s3d.ko ;;
+		--mt9m033 ) insmod /lib/modules/"$kernel_ver"/extra/mt9m033.ko ;;
+		--mt9m034 ) insmod /lib/modules/"$kernel_ver"/extra/mt9m033.ko ;;
+		--ar0330cs ) insmod /lib/modules/"$kernel_ver"/extra/mt9t002_parallel.ko ;;
+		--ar0330cs_mipi ) insmod /lib/modules/"$kernel_ver"/extra/mt9t002_mipi.ko ;;
+		--ar0331 ) insmod /lib/modules/"$kernel_ver"/extra/ar0331.ko hdr_mode=1;;
+		--ar0130 ) insmod /lib/modules/"$kernel_ver"/extra/ar0130.ko ;;
+		--ar0835hs ) insmod /lib/modules/"$kernel_ver"/extra/ar0835hs.ko ;;
+		--ar0141 ) insmod /lib/modules/"$kernel_ver"/extra/ar0141.ko ;;
+		--ar0230 ) insmod /lib/modules/"$kernel_ver"/extra/ar0230.ko ;;
+		--ar0237 ) insmod /lib/modules/"$kernel_ver"/extra/ar0237.ko ;;
+		--ar0237_ir ) insmod /lib/modules/"$kernel_ver"/extra/ar0237.ko ir_mode=1 ;;
+		--ar0239 ) insmod /lib/modules/"$kernel_ver"/extra/ar0239.ko ;;
+		--ar0239_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ar0239_mipi.ko ;;
+		--ar0521 ) insmod /lib/modules/"$kernel_ver"/extra/ar0521.ko ;;
+		--ar0521_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ar0521_mipi.ko ;;
+
+		--imx035 ) insmod /lib/modules/"$kernel_ver"/extra/imx035.ko ;;
+		--imx036 ) insmod /lib/modules/"$kernel_ver"/extra/imx036.ko ;;
+		--imx122 ) insmod /lib/modules/"$kernel_ver"/extra/imx122.ko ;;
+		--imx104 ) insmod /lib/modules/"$kernel_ver"/extra/imx104.ko ;;
+		--imx136 ) insmod /lib/modules/"$kernel_ver"/extra/imx136_lvds.ko ;;
+		--imx136_wdr ) insmod /lib/modules/"$kernel_ver"/extra/imx136_parallel.ko ;;
+		--imx136_120fps ) insmod /lib/modules/"$kernel_ver"/extra/imx136_plvds.ko ;;
+		--imx174 ) insmod /lib/modules/"$kernel_ver"/extra/imx174.ko ;;
+		--imx138 ) insmod /lib/modules/"$kernel_ver"/extra/imx104.ko ;;
+		--imx178 ) insmod /lib/modules/"$kernel_ver"/extra/imx178.ko ;;
+		--imx178_spi ) insmod /lib/modules/"$kernel_ver"/extra/imx178.ko spi=1 bus_addr=0 ;;
+		--imx185 ) insmod /lib/modules/"$kernel_ver"/extra/imx185.ko ;;
+		--imx185_120fps ) insmod /lib/modules/"$kernel_ver"/extra/imx185_plvds.ko ;;
+		--imx123 ) insmod /lib/modules/"$kernel_ver"/extra/imx123.ko ;;
+		--imx124 ) insmod /lib/modules/"$kernel_ver"/extra/imx124.ko ;;
+		--imx183 ) insmod /lib/modules/"$kernel_ver"/extra/imx183.ko ;;
+		--imx121 ) insmod /lib/modules/"$kernel_ver"/extra/imx121.ko ;;
+		--imx172 ) insmod /lib/modules/"$kernel_ver"/extra/imx172.ko ;;
+		--imx224 ) insmod /lib/modules/"$kernel_ver"/extra/imx224.ko ;;
+		--imx226 ) insmod /lib/modules/"$kernel_ver"/extra/imx226.ko ;;
+		--imx250 ) insmod /lib/modules/"$kernel_ver"/extra/imx250.ko ;;
+		--imx290 ) insmod /lib/modules/"$kernel_ver"/extra/imx290.ko ;;
+		--imx290_mipi ) insmod /lib/modules/"$kernel_ver"/extra/imx290_mipi.ko ;;
+		--imx291 ) insmod /lib/modules/"$kernel_ver"/extra/imx291.ko ;;
+		--imx291_mipi ) insmod /lib/modules/"$kernel_ver"/extra/imx291_mipi.ko ;;
+		--imx274 ) insmod /lib/modules/"$kernel_ver"/extra/imx274.ko ;;
+		--imx274_mipi ) insmod /lib/modules/"$kernel_ver"/extra/imx274_mipi.ko ;;
+		--imx317 ) insmod /lib/modules/"$kernel_ver"/extra/imx274.ko ;;
+		--imx317_mipi ) insmod /lib/modules/"$kernel_ver"/extra/imx274_mipi.ko ;;
+		--imx322 ) insmod /lib/modules/"$kernel_ver"/extra/imx322.ko ;;
+		--imx326 ) insmod /lib/modules/"$kernel_ver"/extra/imx326.ko ;;
+		--imx326_mipi ) insmod /lib/modules/"$kernel_ver"/extra/imx326_mipi.ko ;;
+		--imx327_mipi ) insmod /lib/modules/"$kernel_ver"/extra/imx327_mipi.ko ;;
+		--imx377 ) insmod /lib/modules/"$kernel_ver"/extra/imx377_mipi.ko ;;
+		--imx385 ) insmod /lib/modules/"$kernel_ver"/extra/imx385.ko ;;
+		--imx385_mipi ) insmod /lib/modules/"$kernel_ver"/extra/imx385_mipi.ko ;;
+
+		--ov7740 ) insmod /lib/modules/"$kernel_ver"/extra/ov7740.ko ;;
+		--ov2710 ) insmod /lib/modules/"$kernel_ver"/extra/ov2710.ko ;;
+		--ov2710_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ov2710_mipi.ko ;;
+		--ov2715 ) insmod /lib/modules/"$kernel_ver"/extra/ov2710_parallel.ko ;;
+		--ov2715_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ov2710_mipi.ko ;;
+		--ov2718_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ov2718_mipi.ko ;;
+		--ov2735_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ov2735_mipi.ko ;;
+		--ov5653 ) insmod /lib/modules/"$kernel_ver"/extra/ov5653.ko ;;
+		--ov9710 ) insmod /lib/modules/"$kernel_ver"/extra/ov9710.ko ;;
+		--ov9718 ) insmod /lib/modules/"$kernel_ver"/extra/ov9718_mipi.ko ;;
+		--ov9718_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ov9718_mipi.ko ;;
+		--ov9715 ) insmod /lib/modules/"$kernel_ver"/extra/ov9710.ko ;;
+		--ov9750_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ov9750_mipi.ko ;;
+		--ov9750_parallel ) insmod /lib/modules/"$kernel_ver"/extra/ov9750_parallel.ko ;;
+		--ov9756_mipi ) insmod /lib/modules/"$kernel_ver"/extra/ov9750_mipi.ko ir_mode=1 ;;
+		--ov9756_parallel ) insmod /lib/modules/"$kernel_ver"/extra/ov9750_parallel.ko ir_mode=1 ;;
+		--ov9732 ) insmod /lib/modules/"$kernel_ver"/extra/ov9732_mipi.ko ;;
+		--ov9732_parallel ) insmod /lib/modules/"$kernel_ver"/extra/ov9732_parallel.ko ;;
+		--os05a10 ) insmod /lib/modules/"$kernel_ver"/extra/os05a10.ko ;;
+		--os08a10 ) insmod /lib/modules/"$kernel_ver"/extra/os08a10.ko ;;
+
+		--altera_fpga ) insmod /lib/modules/"$kernel_ver"/extra/altera_fpga.ko ;;
+		--gs2970 )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			insmod /lib/modules/"$kernel_ver"/extra/gs2970.ko ;;
+		--ov10630_yuv ) insmod /lib/modules/"$kernel_ver"/extra/ov10630_yuv.ko ;;
+		--ov10633_yuv ) insmod /lib/modules/"$kernel_ver"/extra/ov10633_yuv.ko ;;
+		--ov10630_rgb ) insmod /lib/modules/"$kernel_ver"/extra/ov10630_rgb.ko ;;
+		--ov4689 ) insmod /lib/modules/"$kernel_ver"/extra/ov4689_mipi.ko ;;
+		--ov4689_2lane ) insmod /lib/modules/"$kernel_ver"/extra/ov4689_mipi.ko lane=2 ;;
+		--ov5658 ) insmod /lib/modules/"$kernel_ver"/extra/ov5658_mipi.ko ;;
+		--mn34041pl ) insmod /lib/modules/"$kernel_ver"/extra/mn34041pl.ko ;;
+		--mn34031pl ) insmod /lib/modules/"$kernel_ver"/extra/mn34031pl.ko ;;
+		--mn34210pl ) insmod /lib/modules/"$kernel_ver"/extra/mn34210pl.ko ;;
+		--mn34220pl ) insmod /lib/modules/"$kernel_ver"/extra/mn34220pl.ko ;;
+		--mn34220   ) insmod /lib/modules/"$kernel_ver"/extra/mn34220pl.ko ;;
+		--mn34420   ) insmod /lib/modules/"$kernel_ver"/extra/mn34420pl.ko ;;
+		--mn34230pl ) insmod /lib/modules/"$kernel_ver"/extra/mn34230pl.ko ;;
+		--gt2005 ) insmod /lib/modules/"$kernel_ver"/extra/gt2005.ko ;;
+		--tw9910 )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			insmod /lib/modules/"$kernel_ver"/extra/tw9910.ko ;;
+		--adv7443 )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			insmod /lib/modules/"$kernel_ver"/extra/adv7443.ko ;;
+		--adv7441 )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			if [  -e /lib/firmware/EDID.bin ]; then
+				insmod /lib/modules/"$kernel_ver"/extra/adv7443.ko edid_data=EDID.bin
+			else
+				insmod /lib/modules/"$kernel_ver"/extra/adv7443.ko
+			fi
+			;;
+		--adv7441a )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			if [  -e /lib/firmware/EDID.bin ]; then
+				insmod /lib/modules/"$kernel_ver"/extra/adv7441a.ko edid_data=EDID.bin
+			else
+				insmod /lib/modules/"$kernel_ver"/extra/adv7441a.ko
+			fi
+			;;
+		--adv7441a_cbcr_swap )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			if [  -e /lib/firmware/EDID.bin ]; then
+				insmod /lib/modules/"$kernel_ver"/extra/adv7441a.ko swap_cbcr=1 edid_data=EDID.bin
+			else
+				insmod /lib/modules/"$kernel_ver"/extra/adv7441a.ko swap_cbcr=1
+			fi
+			;;
+			--adv7619 )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			if [  -e /lib/firmware/EDID.bin ]; then
+				insmod /lib/modules/"$kernel_ver"/extra/adv7619.ko edid_data=EDID.bin
+			else
+				insmod /lib/modules/"$kernel_ver"/extra/adv7619.ko
+			fi
+			;;
+		--tvp5150 )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			insmod /lib/modules/"$kernel_ver"/extra/tvp5150.ko ;;
+
+		--yuv480i ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=1 video_bits=8 video_mode=65520 cap_cap_w=720 cap_cap_h=480 video_phase=3 video_fps=8541875 video_pixclk=27000000 video_yuv_mode=1;;
+		--yuv480p ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=65522 cap_cap_w=720 cap_cap_h=480 video_phase=3 video_fps=8541875 video_pixclk=27000000 video_yuv_mode=3;;
+		--yuv576i ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=1 video_bits=8 video_mode=65521 cap_cap_w=720 cap_cap_h=576 video_phase=3 video_fps=10240000 video_pixclk=27000000 video_yuv_mode=1;;
+		--yuv576p ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=65523 cap_cap_w=720 cap_cap_h=576 video_phase=3 video_fps=10240000 video_pixclk=27000000 video_yuv_mode=3;;
+		--yuv720p ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=65524 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=8541875 video_yuv_mode=3;;
+		--yuv720p50 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=65525 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=10240000 video_yuv_mode=3;;
+		--yuv720p30 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=40 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=17066667 video_yuv_mode=3;;
+		--yuv720p25 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=39 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
+		--yuv720p24 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=38 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=21333333 video_yuv_mode=3;;
+		--yuv1080i ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_format=1 video_type=6 video_mode=65526 cap_cap_w=1920 cap_cap_h=1080 video_phase=2 video_yuv_mode=3 video_fps=8541875 ;;
+		--yuv1080i50 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=6 video_format=1 video_bits=16 video_mode=65527 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_fps=10240000 video_yuv_mode=3;;
+		--yuv1080p30 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_mode=65533 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=17066667 ;;
+		--yuv1080p25 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=6 video_format=2 video_bits=16 video_mode=65532 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
+		--yuv1080p ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=6 video_mode=65528 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=17083750 video_pixclk=148500000;;
+		--yuv1080p50 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=6 video_mode=65529 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=10240000 video_pixclk=148500000;;
+		--yuv1600p30 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=6 video_mode=12 cap_cap_w=1600 cap_cap_h=1200 video_phase=3 video_yuv_mode=3 video_fps=17083750 video_pixclk=27000000;;
+		--mdin380 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=6 video_mode=12 cap_cap_w=1600 cap_cap_h=1200 video_phase=3 video_yuv_mode=3 video_fps=17083750 ;;
+		--yuv1280_960p30 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=16 cap_cap_w=1280 cap_cap_h=960 video_phase=3 video_fps=17066667 video_yuv_mode=3;;
+		--yuv1280_960p25 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_format=2 video_bits=16 video_mode=16 cap_cap_w=1280 cap_cap_h=960 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
+		--yuv4kp30 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=2 video_mode=65533 cap_cap_w=3840 cap_cap_h=2160 video_phase=3 video_yuv_mode=3 video_fps=17066667 ;;
+
+		--yuv480i_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=1 video_bits=8 video_mode=65520 cap_start_x=64 cap_start_y=18 cap_cap_w=720 cap_cap_h=480 video_phase=0 video_fps=8541875 video_pixclk=27000000 video_yuv_mode=0;;
+		--yuv480p_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65522 cap_start_x=60 cap_start_y=36 cap_cap_w=720 cap_cap_h=480 video_phase=0 video_fps=8541875 video_pixclk=27000000 video_yuv_mode=3;;
+		--yuv576i_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=1 video_bits=8 video_mode=65521 cap_start_x=60 cap_start_y=22 cap_cap_w=720 cap_cap_h=576 video_phase=0 video_fps=10240000 video_pixclk=27000000 video_yuv_mode=0;;
+		--yuv576p_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65523 cap_start_x=66 cap_start_y=44 cap_cap_w=720 cap_cap_h=576 video_phase=0 video_fps=10240000 video_pixclk=27000000 video_yuv_mode=3;;
+		--yuv720p_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65524 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=8541875 video_yuv_mode=3;;
+		--yuv720p50_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65525 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=10240000 video_yuv_mode=3;;
+		--yuv720p30_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=40 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=17066667 video_yuv_mode=3;;
+		--yuv720p25_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=39 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
+		--yuv720p24_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=38 cap_start_x=220 cap_start_y=25 cap_cap_w=1280 cap_cap_h=720 video_phase=3 video_fps=21333333 video_yuv_mode=3;;
+		--yuv1080i_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_format=1 video_type=1 video_mode=65526 cap_start_x=192 cap_start_y=20 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=8541875 ;;
+		--yuv1080i50_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=1 video_bits=16 video_mode=65527 cap_start_x=192 cap_start_y=20 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_fps=10240000 video_yuv_mode=3;;
+		--yuv1080p30_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_mode=65533 cap_start_x=192 cap_start_y=41 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=17066667 ;;
+		--yuv1080p25_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_format=2 video_bits=16 video_mode=65532 cap_start_x=192 cap_start_y=41 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_fps=20480000 video_yuv_mode=3;;
+		--yuv1080p_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_mode=65528 cap_start_x=192 cap_start_y=41 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=17083750 video_pixclk=148500000;;
+		--yuv1080p50_601 ) insmod /lib/modules/"$kernel_ver"/extra/ambdd.ko video_type=1 video_mode=65529 cap_start_x=192 cap_start_y=41 cap_cap_w=1920 cap_cap_h=1080 video_phase=3 video_yuv_mode=3 video_fps=10240000 video_pixclk=148500000;;
+
+		--na )
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			echo "Init without VIN drivers..." ;;
+		--gps )
+			echo " Load default Touch Screen Driver "
+			insmod /lib/modules/"$kernel_ver"/kernel/drivers/input/touchscreen/ak4183.ko
+			insmod /lib/modules/"$kernel_ver"/extra/$default_vin.ko ;;
+		--ak4183 )
+			echo " Load ak4183 Touch Screen Driver "
+			insmod /lib/modules/"$kernel_ver"/kernel/drivers/input/touchscreen/ak4183.ko
+			insmod /lib/modules/"$kernel_ver"/extra/$default_vin.ko ;;
+		--chacha_mt4d )
+			echo " Load chacha_mt4d Touch Screen driver "
+			insmod /lib/modules/"$kernel_ver"/kernel/drivers/input/touchscreen/chacha_mt4d.ko
+			insmod /lib/modules/"$kernel_ver"/extra/$default_vin.ko ;;
+		--nvr_demo )
+			echo " Load NVR demo Touch Screen driver "
+			insmod /lib/modules/"$kernel_ver"/kernel/drivers/input/touchscreen/tm1726.ko ;;
+		*)
+			printf "%d\n" -1 > "$config_dir"/board_vin0_vsync_irq_gpio
+			echo "Default method to init without VIN drivers..."
+			#echo "Use $default_vin as default."
+			echo "Cat this file to find out what VIN can be supported."
+			#insmod /lib/modules/$kernel_ver/extra/$default_vin.ko
+			;;
+	esac
+	case "$?" in
+		0)
+		;;
+		*)
+		echo "Insmod $sensor failed!"
+		exit 1
+		;;
+	esac
+}
+
+func_load_lens_driver()
+{
+	local lens=$1
+	if [ -r /lib/modules/"$kernel_ver"/extra/amba_lens.ko ]; then
+		modprobe amba_lens
+	fi
+
+	case "$lens" in
+		--m13vp288ir ) insmod /lib/modules/"$kernel_ver"/extra/m13vp288ir.ko ;;
+		--mz128bp2810icr ) insmod /lib/modules/"$kernel_ver"/extra/mz128bp2810icr.ko ;;
+		*)
+		echo "Default init without lens driver"
+		;;
+	esac
+	case "$?" in
+		0)
+		;;
+		*)
+		echo "Insmod $lens failed!"
+		exit 1
+		;;
+	esac
+}
+
+func_load_misc_drivers()
+{
+	if [ -r /lib/modules/"$kernel_ver"/extra/ambad.ko ]; then
+		modprobe ambad
+		# Used for linixrc init
+		sleep 0.1
+	fi
+
+	if [ -r /lib/modules/"$kernel_ver"/extra/fdet.ko ]; then
+		modprobe fdet
+	fi
 
-if [ -r /usr/local/bin/ImageServerDaemon.sh ]; then
-	if [ -x /usr/local/bin/ImageServerDaemon.sh ]; then
+	if [ -r /lib/modules/"$kernel_ver"/extra/mpu6000.ko ]; then
+		modprobe mpu6000
+	fi
+
+	if [ -r /lib/modules/"$kernel_ver"/extra/eis.ko ]; then
+		modprobe eis
+	fi
+}
+
+func_debug_raise_clock()
+{
+	local opt=$1
+	case $opt in
+		--high )
+		if [ "$SYS_BOARD_BSP" = "a2ipcam" ]; then
+			/usr/local/bin/amba_debug -w 0x701700e4 -d 0x30110100 && /usr/local/bin/amba_debug -w 0x701700e4 -d 0x30110101 && /usr/local/bin/amba_debug -w 0x701700e4 -d 0x30110100
+			echo "Change iDSP to 147 MHz"
+			/usr/local/bin/amba_debug -w 0x701700dc -d 0x1c111000 && /usr/local/bin/amba_debug -w 0x701700dc -d 0x1c111001 && /usr/local/bin/amba_debug -w 0x701700dc -d 0x1c111000
+			echo "Change DDR2 to 348 MHz"
+		fi
+		;;
+		*)
+		echo "Use default settings"
+		;;
+	esac
+}
+
+func_load_ucode()
+{
+	local load_ucode_util=$(which load_ucode)
+	if [  -e "$load_ucode_util" ]; then
+		$load_ucode_util  /lib/firmware
+	case "$?" in
+		0)
+		;;
+		*)
+		echo "Load ucode failed!"
+		exit 1
+		;;
+	esac
+	fi
+}
+
+func_load_sd_param_post()
+{
+	if [  -e /tmp/mmcblk0p1/ext-post.sh ]; then
 		echo "==============================================="
-		echo "Exec: /usr/local/bin/ImageServerDaemon.sh"
+		echo "Exec: /tmp/mmcblk0p1/ext-post.sh"
 		echo "==============================================="
-		/usr/local/bin/ImageServerDaemon.sh start
+		/tmp/mmcblk0p1/ext-post.sh
+	elif [  -e /home/default/ext-post.sh ]; then
+		echo "==============================================="
+		echo "Exec: /home/default/ext-post.sh"
+		echo "==============================================="
+		/home/default/ext-post.sh
 	fi
-fi
+	case "$?" in
+		0)
+		;;
+		*)
+		echo "Exec ext-post.sh failed!"
+		exit 1
+		;;
+	esac
+}
+
+func_load_dsplog_driver()
+{
+	if [ -r /lib/modules/"$kernel_ver"/extra/dsplog.ko ]; then
+		modprobe dsplog
+	fi
+}
+
+func_load_demos()
+{
+	if [  -e /usr/local/bin/iav_server ]; then
+		echo "Start IAV Server ..."
+		/usr/local/bin/iav_server &
+	fi
+
+	if [ -r /usr/local/bin/ImageServerDaemon.sh ]; then
+		if [ -x /usr/local/bin/ImageServerDaemon.sh ]; then
+			echo "==============================================="
+			echo "Exec: /usr/local/bin/ImageServerDaemon.sh"
+			echo "==============================================="
+			/usr/local/bin/ImageServerDaemon.sh start
+		fi
+	fi
+}
+
+func_main()
+{
+	func_load_etc_cfg
+	func_load_sd_param_pre
+	func_load_iav_driver
+	func_load_vout_driver
+	func_load_vin_driver    "$1"
+	func_load_lens_driver  "$2"
+	func_load_misc_drivers
+	func_debug_raise_clock  "$2"
+	func_load_ucode
+	func_load_sd_param_post
+	func_load_dsplog_driver
+	func_load_demos
+}
+
+
+func_main  "$1"  "$2"
 
 exit $?
 
diff --git a/amb_scripts/make.inc b/amb_scripts/make.inc
index a207fa6..66b8fa1 100644
--- a/amb_scripts/make.inc
+++ b/amb_scripts/make.inc
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/06/04 - [Cao Rongrong] Create
 ##
-## Copyright (C) 2012-2016, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 ifeq ($(BUILD_AMBAREALLA_UTILITY_SCRIPTS), y)
@@ -24,8 +41,12 @@ LOCAL_SRCS	:=
 
 ifeq ($(BUILD_AMBAREALLA_UTILITY_SCRIPTS_ALL), y)
 LOCAL_SRCS	+= $(wildcard $(LOCAL_PATH)/*.sh)
+LOCAL_SRCS	+= $(LOCAL_PATH)/dsp $(LOCAL_PATH)/pll
 else
 
+ifeq ($(BUILD_AMBAREALLA_UTILITY_SCRIPTS_BCSTINIT), y)
+LOCAL_SRCS	+= $(wildcard $(LOCAL_PATH)/bc_init.sh)
+endif
 ifeq ($(BUILD_AMBAREALLA_UTILITY_SCRIPTS_INITIAV), y)
 LOCAL_SRCS	+= $(wildcard $(LOCAL_PATH)/init.sh)
 endif
diff --git a/amb_scripts/mediaserver.sh b/amb_scripts/mediaserver.sh
index 90e2618..f2edb52 100755
--- a/amb_scripts/mediaserver.sh
+++ b/amb_scripts/mediaserver.sh
@@ -1,5 +1,33 @@
 #!/bin/sh
+## History:
+##
+## 2016/12/30 - [JianTang] Created file
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
 
-/usr/local/bin/init.sh $1
+/usr/local/bin/init.sh "$1"
 /usr/local/bin/mediaserver -e -r -i
 
diff --git a/amb_scripts/playback_4k.sh b/amb_scripts/playback_4k.sh
index 03fcd47..b8fb4c8 100644
--- a/amb_scripts/playback_4k.sh
+++ b/amb_scripts/playback_4k.sh
@@ -1,4 +1,32 @@
 #!/bin/sh
+#
+# History:
+#	2012/05/05 - [Jingyang Qiu] created file
+#
+# Copyright (c) 2015 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
 
 /usr/local/bin/init.sh --na
 /usr/local/bin/test2 -V2160p30 --hdmi --cs rgb --idle
diff --git a/amb_scripts/s2atbtest.sh b/amb_scripts/s2atbtest.sh
index 211cf6c..f9a3377 100644
--- a/amb_scripts/s2atbtest.sh
+++ b/amb_scripts/s2atbtest.sh
@@ -25,16 +25,16 @@ encode_frame_number_vout=0
 
 adv7619_timeout=10
 
-led_0=2
+#led_0=2
 led_1=207
 led_2=17
 led_3=5
 led_4=76
 led_5=36
 led_6=32
-led_7=143
-led_8=0
-led_9=4
+#led_7=143
+#led_8=0
+#led_9=4
 
 led1_set()
 {
@@ -119,7 +119,7 @@ get_gpio_level()
 		gpiolevel=$value
 		#echo "$gpiolevel" "$value"
 	done</sys/class/gpio/gpio"$1"/value
-	
+
 	if [ "$gpiolevel" -eq 0 ]; then
 		return 0
 	else
@@ -145,7 +145,7 @@ if [ -f "$adc7_path" ]; then
 	done<"$adc7_path"
 	#echo "output $adcvalue"
 	#adcvalue=${adcvalue#* }
-	adcvalue=$(($adcvalue))
+	adcvalue=$((adcvalue))
 	#echo "output $adcvalue"
 
 	if [ $adcvalue -ge 4080 ]; then
@@ -176,7 +176,7 @@ stty -F /dev/ttyS1 raw speed 115200
 
 uart1_read()
 {
-	READ=`timeout -t "$uart1_timeout" dd if=/dev/ttyS1 count=5`
+	READ=$(timeout -t "$uart1_timeout" dd if=/dev/ttyS1 count=5)
 	if [ "$READ" = "$1" ]; then
 		echo "#NEXT" > /dev/ttyS1
 		return 0
@@ -229,7 +229,7 @@ read_cfgfile()
 md5_check()
 {
 	check=0
-	md5_checkfile=""
+#	md5_checkfile=""
 
 	md5sum atb_encode.h264 > atb_encode.h264.md5
 	while read checksum filename
@@ -292,11 +292,11 @@ test_vin_adv7619()
 usage()
 {
 	echo usage
-	echo "-u	usbtest"
-	echo "-e	ethernet"
-	echo "--vin	vinencode test"
-	echo "--vout	vouttest"
-	echo "--default	s2atb test"
+	printf "%s\n" "-u	usbtest"
+	printf "%s\n" "-e	ethernet"
+	printf "%s\n" "--vin	vinencode test"
+	printf "%s\n" "--vout	vouttest"
+	printf "%s\n" "--default	s2atb test"
 }
 
 #echo param "$*" "$#"
@@ -305,9 +305,9 @@ if [ "$#" -lt 1 ]; then
 	usage
 	exit 1
 fi
-	
 
-loop=0
+
+#loop=0
 while [ $# -ne 0 ]
 do
 	case "$1" in
@@ -419,12 +419,12 @@ if [ "$vout_atb_test" = 1 ]; then
 			i=$((i+1))
 			sleep 1
 		done
-		
+
 		if [ "$i" -eq "$adv7619_timeout" ]; then
 			echo "get adv7619 return timeout"
 			ret=1
 		fi
-		
+
 		if [ "$ret" -eq 1 ]; then
 			uart1_write adv7619vinfail
 			exit 1
diff --git a/amb_scripts/s2lm_hdmi.sh b/amb_scripts/s2lm_hdmi.sh
index e30ffce..d8e617f 100644
--- a/amb_scripts/s2lm_hdmi.sh
+++ b/amb_scripts/s2lm_hdmi.sh
@@ -1,8 +1,36 @@
 #!/bin/sh
+## History:
+##
+## 2016/12/30 - [JianTang] Created file
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
 kernel_ver=$(uname -r)
 echo "try to load it66121 external HDMI driver for S2Lm EVK board"
-if [ -r /lib/modules/$kernel_ver/extra/it66121.ko ]; then
+if [ -r /lib/modules/"$kernel_ver"/extra/it66121.ko ]; then
 modprobe it66121
 fi
 echo "try to enter 480p preview by HDMI, and default VIN"
-test_encode -i0 -v480p --lcd digital601 -K --bsize 480p --bmaxsize 480p
\ No newline at end of file
+test_encode -i0 -v480p --lcd digital601 -K --bsize 480p --bmaxsize 480p
diff --git a/amb_scripts/sd_speed.sh b/amb_scripts/sd_speed.sh
index 4437969..5b5f6e8 100755
--- a/amb_scripts/sd_speed.sh
+++ b/amb_scripts/sd_speed.sh
@@ -1,4 +1,32 @@
 #!/bin/sh
+## History:
+##
+## 2016/12/30 - [JianTang] Created file
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
 
 time dd if=/dev/zero of=/tmp/mmcblk0p1/empty.file bs=128k count=1k
 sync
diff --git a/amb_scripts/shmoo.sh b/amb_scripts/shmoo.sh
index 09e0053..01d731d 100755
--- a/amb_scripts/shmoo.sh
+++ b/amb_scripts/shmoo.sh
@@ -1,4 +1,32 @@
 #!/bin/sh
+## History:
+##
+## 2016/12/30 - [JianTang] Created file
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
 
 echo "wait ethernet connect"
 while true;do
@@ -12,6 +40,6 @@ done
 echo "run bandwidth-arm in background"
 /usr/local/bin/bandwidth-arm > /dev/zero &
 /sbin/watchdog -T 5 /dev/watchdog
-/usr/local/bin/init.sh $1
+/usr/local/bin/init.sh "$1"
 /usr/local/bin/test_shmoo --default
 
diff --git a/amb_scripts/sta_action.sh b/amb_scripts/sta_action.sh
index aad0802..0281bc1 100644
--- a/amb_scripts/sta_action.sh
+++ b/amb_scripts/sta_action.sh
@@ -1,23 +1,53 @@
 #!/bin/sh
-##########################
-# History:
-#	2015/08/19 - [Tao Wu] create file
-#
-# Copyright (C) 2004-2015 Ambarella, Inc.
-##########################
+## History:
+##	2015/08/19 - [Tao Wu] create file
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
 
 IFNAME=$1
 CMD=$2
 
 WIFI_STATUS=/dev/console
 
+generate_dns_conf()
+{
+	echo "#  DO NOT EDIT THIS FILE BY HAND " > /etc/resolv.conf
+	for i in "$@"; do
+		echo "nameserver $i" >> /etc/resolv.conf
+	done
+}
+
 if [ "$CMD" = "CONNECTED" ]; then
     # configure network, signal DHCP client, etc.
-	echo $(date) ":: CONNECTED"  > $WIFI_STATUS
-	udhcpc -i${IFNAME} > $WIFI_STATUS
+	echo "$(date)" ":: CONNECTED"  > $WIFI_STATUS
+	dns_server=$(udhcpc -i"${IFNAME}" 2>&1 |grep dns|awk '{print $3}')
+	generate_dns_conf "$dns_server"
 fi
 
 if [ "$CMD" = "DISCONNECTED" ]; then
     # remove network configuration, if needed
-	echo $(date) ":: DISCONNECTED"  > $WIFI_STATUS
+	echo "$(date)" ":: DISCONNECTED"  > $WIFI_STATUS
 fi
diff --git a/amb_scripts/stop-all-svc.sh b/amb_scripts/stop-all-svc.sh
index 6d6998f..2ef64c8 100755
--- a/amb_scripts/stop-all-svc.sh
+++ b/amb_scripts/stop-all-svc.sh
@@ -1,4 +1,32 @@
 #!/bin/sh
+## History:
+##
+## 2016/12/30 - [JianTang] Created file
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
 #
 # stop all services
 #
@@ -9,41 +37,41 @@ timeout()
 	command=$*
 	$command &
 	commandpid=$!
-	( sleep $second ; kill -9 $commandpid > /dev/null 2>&1 ) &
-	wait $commandpid > /dev/null 2>&1
+	( sleep $second ; kill -9 "$commandpid" > /dev/null 2>&1 ) &
+	wait "$commandpid" > /dev/null 2>&1
 }
 
 stop_all()
 {
 	echo "stop all services"
-	app_pid=`pgrep apps_launcher`
-	audio_svc=`pgrep audio_svc`
-	video_svc=`pgrep video_svc`
-	media_svc=`pgrep media_svc`
-	event_svc=`pgrep event_svc`
-	img_svc=`pgrep img_svc`
-	sys_svc=`pgrep sys_svc`
-	if [ $app_pid ]; then
-		kill -2 $app_pid
-		kill -15 $app_pid
+	app_pid=$(pgrep apps_launcher)
+	audio_svc=$(pgrep audio_svc)
+	video_svc=$(pgrep video_svc)
+	media_svc=$(pgrep media_svc)
+	event_svc=$(pgrep event_svc)
+	img_svc=$(pgrep img_svc)
+	sys_svc=$(pgrep sys_svc)
+	if [ "$app_pid" ]; then
+		kill -2 "$app_pid"
+		kill -15 "$app_pid"
 	fi
 
 	echo "apps_launcher or services are"
-	while [ $app_pid -o $audio_svc -o $video_svc -o $media_svc -o $event_svc -o $img_svc -o $sys_svc ]
+	while [ "$app_pid" -o "$audio_svc" -o "$video_svc" -o "$media_svc" -o "$event_svc" -o "$img_svc" -o "$sys_svc" ]
 	do
-		if [ $app_pid ]; then
+		if [ "$app_pid" ]; then
 			echo "apps_launcher is still running"
 		else
 			echo "stopped"
 			return 0
 		fi
-		app_pid=`pgrep apps_launcher`
-		audio_svc=`pgrep audio_svc`
-		video_svc=`pgrep video_svc`
-		media_svc=`pgrep media_svc`
-		event_svc=`pgrep event_svc`
-		img_svc=`pgrep img_svc`
-		sys_svc=`pgrep sys_svc`
+		app_pid=$(pgrep apps_launcher)
+		audio_svc=$(pgrep audio_svc)
+		video_svc=$(pgrep video_svc)
+		media_svc=$(pgrep media_svc)
+		event_svc=$(pgrep event_svc)
+		img_svc=$(pgrep img_svc)
+		sys_svc=$(pgrep sys_svc)
 		sleep 1
 	done
 	echo "done"
@@ -53,38 +81,38 @@ check_svc_status()
 {
 	DATE=$(date '+%Y-%m-%d-%H:%M:%S')
 	LOG_FILE=/var/log/stop_services_$DATE.log
-	app_pid=`pgrep apps_launcher`
-	audio_svc=`pgrep audio_svc`
-	video_svc=`pgrep video_svc`
-	media_svc=`pgrep media_svc`
-	event_svc=`pgrep event_svc`
-	img_svc=`pgrep img_svc`
-	sys_svc=`pgrep img_svc`
+	app_pid=$(pgrep apps_launcher)
+	audio_svc=$(pgrep audio_svc)
+	video_svc=$(pgrep video_svc)
+	media_svc=$(pgrep media_svc)
+	event_svc=$(pgrep event_svc)
+	img_svc=$(pgrep img_svc)
+	sys_svc=$(pgrep img_svc)
 
-	if [ $app_pid ]; then
-		echo "apps_launcher stopped failed" >> $LOG_FILE
-		echo "below service still running:" >> $LOG_FILE
+	if [ "$app_pid" ]; then
+		echo "apps_launcher stopped failed" >> "$LOG_FILE"
+		echo "below service still running:" >> "$LOG_FILE"
 	else
-		echo "apps_launcher stop successfully" >> $LOG_FILE
+		echo "apps_launcher stop successfully" >> "$LOG_FILE"
 		return 0;
 	fi
-	if [ $audio_svc ]; then
-		echo "audio_svc " >> $LOG_FILE
+	if [ "$audio_svc" ]; then
+		echo "audio_svc " >> "$LOG_FILE"
 	fi
-	if [ $video_svc ]; then
-		echo "video_svc " >> $LOG_FILE
+	if [ "$video_svc" ]; then
+		echo "video_svc " >> "$LOG_FILE"
 	fi
-	if [ $media_svc ]; then
-		echo "media_svc " >> $LOG_FILE
+	if [ "$media_svc" ]; then
+		echo "media_svc " >> "$LOG_FILE"
 	fi
-	if [ $event_svc ]; then
-		echo "event_svc " >> $LOG_FILE
+	if [ "$event_svc" ]; then
+		echo "event_svc " >> "$LOG_FILE"
 	fi
-	if [ $img_svc ]; then
-		echo "img_svc " >> $LOG_FILE
+	if [ "$img_svc" ]; then
+		echo "img_svc " >> "$LOG_FILE"
 	fi
-	if [ $sys_svc ]; then
-		echo "sys_svc " >> $LOG_FILE
+	if [ "$sys_svc" ]; then
+		echo "sys_svc " >> "$LOG_FILE"
 	fi
 	echo "check all services status done"
 }
@@ -109,3 +137,4 @@ case "$1" in
 		check_svc_status
 		;;
 esac
+\00\00
diff --git a/amb_scripts/sys_scan.sh b/amb_scripts/sys_scan.sh
index 8e7ba55..b423a59 100755
--- a/amb_scripts/sys_scan.sh
+++ b/amb_scripts/sys_scan.sh
@@ -1,14 +1,33 @@
-#!/bin/bash
-#########################################################################
-# Version Info:
-# Version: 1.2
-# Date: 2014-06-24
-# Comments: add kernal command line checking for UART.
-#
-# Version: 1.1
-# Date: 2013-10-24
-# Comments: initial version for release.
-#########################################################################
+#!/bin/sh
+##
+## History:
+##
+## 2016/12/30 - [JianTang] Created file
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
 
 #########################################################################
 # Global Variables
@@ -24,31 +43,31 @@ cpu_usage() {
 
 process_mem_usage() {
     # $1 is the process name
-    proc_mem_usage=$(ps aux|grep $1|grep -v "grep $1"|awk '{print $6}'|awk 'BEGIN {sum1=0} {sum1+=$1} END {print sum1/1024}')
-    printf "\tProcess <$1> memory usage: $proc_mem_usage M\n"
+    proc_mem_usage=$(ps aux|grep "$1"|grep -v "grep $1"|awk '{print $6}'|awk 'BEGIN {sum1=0} {sum1+=$1} END {print sum1/1024}')
+    printf "\tProcess <$1> memory usage: %s M\n" "$proc_mem_usage"
 }
 
 sys_free_mem() {
     free_mem=$(free -m|awk '/Mem/{print $4}')
-    printf "\tSystem free memory: $free_mem M\n"
+    printf "\tSystem free memory: %s M\n" "$free_mem"
 }
 
 root_disk_usage() {
     disk_usage=$(df|sed -n '/\/$/p'|awk '{print $5}'|sed 's/%//')
-    if [ $disk_usage -ge 90 ]; then
-        printf "\t[WARNING]:Root Mount Point Usage: $disk_usage >= 90%\n"
+    if [ "$disk_usage" -ge 90 ]; then
+        printf "\t[WARNING]:Root Mount Point Usage: %s >= 90%\n" "$disk_usage"
     else
-        printf "\tRoot Mount Disk usage: $disk_usage %%\n"
+        printf "\tRoot Mount Disk usage: %s %%\n" "$disk_usage"
     fi
 }
 
 audio_performance() {
     if [ -e "/proc/ambarella/performace" ]; then
         audio_hz=$(grep Audio /proc/ambarella/performance|awk -F: '{print $2}'|awk '{print $1}')
-        printf "\tAudio Performance: $audio_hz HZ\n"
+        printf "\tAudio Performance: %s HZ\n" "$audio_hz"
     elif [ -e "/proc/ambarella/clock" ]; then
         audio_hz=$(grep audio /proc/ambarella/clock|awk -F: '{print $2}'|awk '{print $1}')
-        printf "\tAudio Performance: $audio_hz HZ\n"
+        printf "\tAudio Performance: %s HZ\n" "$audio_hz"
     else
         printf "\t[WARNING]:Can't find clock file\n"
     fi
@@ -59,23 +78,23 @@ audio_performance() {
 passwd_scanner() {
     passwd_file=$1"/etc/passwd"
     printf "Scanning User Password File: ./etc/passwd ...\n"
-    scan_file_right $passwd_file "-rw-r--r--"
-    scan_plus_in_file $passwd_file
-    scan_empty_passwd $passwd_file
-    scan_zero_uid $passwd_file
+    scan_file_right "$passwd_file" "-rw-r--r--"
+    scan_plus_in_file "$passwd_file"
+    scan_empty_passwd "$passwd_file"
+    scan_zero_uid "$passwd_file"
     echo
 }
 
 login_pass_scanner() {
     printf "Scanning Login Password File: ./etc/login.defs ...\n"
     lg_ps=$1"/etc/login.defs"
-    check_pass_len $lg_ps
-    check_pass_aging $lg_ps
+    check_pass_len "$lg_ps"
+    check_pass_aging "$lg_ps"
     echo
 }
 
 check_pass_len() {
-    pass_len=$(grep ^PASS_MIN_LEN $1|awk '{print $2}')
+    pass_len=$(grep ^PASS_MIN_LEN "$1"|awk '{print $2}')
     if [ "$pass_len" = "" ]; then
         print_unsafe "PASS_MIN_LEN is not specified\n"
     elif [ "$pass_len" -lt 6 ]; then
@@ -86,7 +105,7 @@ check_pass_len() {
 }
 
 check_pass_aging() {
-    pass_aging=$(grep ^PASS_MAX_DAYS $1|awk '{ if ($1=="PASS_MAX_DAYS") {print $2} }')
+    pass_aging=$(grep ^PASS_MAX_DAYS "$1"|awk '{ if ($1="PASS_MAX_DAYS") {print $2} }')
     if [ "$pass_aging" = "" -o "$pass_aging" = "99999" ]; then
         print_unsafe "User password no aging set\n"
     else
@@ -97,24 +116,24 @@ check_pass_aging() {
 shadow_scanner() {
     shadow_file=$1"/etc/shadow"
     printf "Scanning File: ./etc/shadow ...\n"
-    scan_file_right $shadow_file "-rw-----"
-    scan_plus_in_file $shadow_file
-    scan_empty_passwd $shadow_file
+    scan_file_right "$shadow_file" "-rw-----"
+    scan_plus_in_file "$shadow_file"
+    scan_empty_passwd "$shadow_file"
     echo
 }
 
 group_scanner() {
     group_file=$1"/etc/group"
     printf "Scanning Group File: ./etc/group ...\n"
-    uniq_str=$(cat $group_file|grep -v '^#'|grep -v '^$'|awk -F: '{print $3}'|sort|uniq -d|tr -d '\n\r')
+    uniq_str=$(grep -v '^#' "$group_file" |grep -v '^$'|awk -F: '{print $3}'|sort|uniq -d|tr -d '\n\r')
     if [ "$uniq_str" = "" ]; then
         print_safe "Non unique groud ID\n"
     else
         print_unsafe "Unique groud ID ($uniq_str) in group file\n"
     fi
 
-    root_group=$(grep "^root" $group_file)
-    root_group_user=$(echo $root_group|awk -F: '{print $4}')
+    root_group=$(grep "^root" "$group_file")
+    root_group_user=$(echo "$root_group" |awk -F: '{print $4}')
     if [ -z "$root_group_user" ]
     then
         print_safe "NO user found in root group\n"
@@ -135,14 +154,14 @@ service_scanner() {
     printf "HTTP Service\n"
     check_service "httpd"
     if [ $? -eq 1 ]; then
-        check_https_safty $1
+        check_https_safty "$1"
     fi
 
     printf "FTP Service\n"
     check_service "ftp"
 
     printf "SSH Service\n"
-    check_ssh_service $1
+    check_ssh_service "$1"
     echo
 }
 
@@ -151,7 +170,7 @@ network_fs_scanner() {
     printf "Scanning Network Shared Filesystem ...\n"
     # Checking NFS
     if [ -e "$1/etc/exports" ]; then
-        shared_folder=$(grep ^/ $1/etc/exports|awk '{print $1}')
+        shared_folder=$(grep ^/ "$1"/etc/exports|awk '{print $1}')
         if [ -n "$shared_folder" ]; then
             print_unsafe "folder:($shared_folder) will be shared in NFS\n"
         else
@@ -174,11 +193,11 @@ mount_fs_scanner() {
     printf "Scanning Mount Point Config File /etc/fstab ...\n"
     msg_str=""
     fstab_file=$1"/etc/fstab"
-    if [ -n "$(grep \"nfs\b\" $fstab_file)" ]; then
+    if grep -q \"nfs\b\" "$fstab_file"; then
         msg_str="False"
         print_unsafe "NFS filesystem will be mounted\n"
     fi
-    if [ -n "$(grep \"smbfs\b\" $fstab_file)" ]; then
+    if grep -q \"smbfs\b\" "$fstab_file"; then
         msg_str="False"
         print_unsafe "Samba filesystem will be mounted\n"
     fi
@@ -193,15 +212,15 @@ mount_fs_scanner() {
 kernel_cmdline_scan() {
     printf "Scanning Kernel Boot Command Line ...\n"
     # If not parameter, then it's running on board.
-    if [ "$1" == "" ]; then
-        if [ "$(grep console=ttyS0 /proc/cmdline)" == "" ]; then
+    if [ "$1" = "" ]; then
+        if [ "$(grep console=ttyS0 /proc/cmdline)" = "" ]; then
             print_safe "UART is disabled in kernel cmdline\n"
         else
             print_unsafe "console=ttyS0 should be removed or replaced by console=tty0\n"
         fi
     else
         kernel_cf=$1"/home/.config"
-        if [ -z "$(grep "^AMBOOT_DEV_CMDLINE=\"console=ttyS0" $kernel_cf)" ]; then
+        if ! grep -q "^AMBOOT_DEV_CMDLINE=\"console=ttyS0" "$kernel_cf"; then
             print_safe "UART is disabled in kernel cmdline\n"
         else
             print_unsafe "console=ttyS0 should be removed or replaced by console=tty0\n"
@@ -217,7 +236,7 @@ kernel_config_scanner() {
         print_safe "config.gz is disabled\n"
     fi
     if [ "$(cat /proc/sys/fs/suid_dumpable)" -eq "1" ]; then
-        if [ "$(grep unlimited /etc/profile)" ]; then
+        if grep -q unlimited /etc/profile; then
             print_unsafe "Core dump is enabled\n"
         else
             print_unsafe "SUID programs core dump is enabled\n"
@@ -232,63 +251,63 @@ kernel_config_scanner() {
 # On Board Scan functions
 port_scanner() {
     printf "Scanning LISTEN Port ...\n"
-    old_IFS=IFS
+#    old_IFS=IFS
     IFS="
 "
     for oneline in $(netstat -ntpl 2>&-|grep LISTEN|grep -v 127\.0\.)
     do
-        PORT_STR=$PORT_STR$per_line$(echo $oneline|awk '{print "Program:<"$NF"> listen port:\e[31m"$4"\033[0m"}')"\n"
+        PORT_STR=$PORT_STR$per_line$(echo "$oneline"|awk '{print "Program:<"$NF"> listen port:\e[31m"$4"\033[0m"}')"\n"
     done
-    printf $PORT_STR
+    printf "%s" "$PORT_STR"
     IFS=old_IFS
     echo
 
 }
 
 check_ssh_service() {
-    if [ -z "$(ls $1/etc/init.d/|grep sshd)" ]; then
+    if ! ls "$1"/etc/init.d/|grep sshd; then
         print_safe "Service (SSH) service not enabled\n"
         return
     fi
 
     printf "Service (SSH) will be run while booting\n"
     ssh_conf=$1"/etc/sshd_config"
-    if [ -z "$(grep \"^PermitEmptyPasswords\ no\" $ssh_conf)" ]; then
+    if ! grep -q \"^PermitEmptyPasswords\ no\" "$ssh_conf"; then
         print_unsafe "<SSH>Empty password is permitted\n"
     fi
 
-    if [ -z "$(grep \"^PermitRootLogin\ no\" $ssh_conf)" ]; then
+    if ! grep -q \"^PermitRootLogin\ no\" "$ssh_conf"; then
         print_unsafe "<SSH>Root user is allowed to remote login\n"
     fi
 
-    if [ -z "$(grep \"^Protocol\ 2\" $ssh_conf)" ]; then
+    if ! grep -q \"^Protocol\ 2\" "$ssh_conf"; then
         print_unsafe "<SSH>Protocol 1 is used as default, suggest 2.\n"
     fi
 
-    if [ -z "$(grep ^LoginGraceTime $ssh_conf)" ]; then
+    if ! grep -q ^LoginGraceTime "$ssh_conf"; then
         print_unsafe "<SSH>LoginGraceTime suggested to enable\n"
     fi
 
-    if [ -z "$(grep ^MaxAuthTries $ssh_conf)" ]; then
+    if ! grep -q ^MaxAuthTries "$ssh_conf"; then
         print_unsafe "<SSH>MaxAuthTries suggested to enable\n"
     fi
 
-    if [ -z "$(grep ^ClientAliveInterval $ssh_conf)" ]; then
+    if ! grep -q ^ClientAliveInterval "$ssh_conf"; then
         print_unsafe "<SSH>ClientAliveInterval suggested to enable\n"
     fi
 
-    if [ -z "$(grep ^ClientAliveCountMax $ssh_conf)" ]; then
+    if ! grep -q ^ClientAliveCountMax "$ssh_conf"; then
         print_unsafe "<SSH>ClientAliveCountMax suggested to enable\n"
     fi
 
-    if [ -z "$(grep \"^IgnoreRhosts\ yes\" $ssh_conf)" ]; then
+    if ! grep -q \"^IgnoreRhosts\ yes\" "$ssh_conf"; then
         print_unsafe "<SSH>IgnoreRhosts suggested to enable\n"
     fi
 }
 
 
 check_service_file() {
-    if [ "$(ls $systemd_sys_dir$1* 2>&-)" == "" ]; then
+    if [ "$(ls "$systemd_sys_dir""$1"* 2>&-)" = "" ]; then
         print_safe "Service ($1) not in systemd system\n"
         return
     fi
@@ -297,29 +316,28 @@ check_service_file() {
 }
 
 check_service() {
-    no_service="False"
+#    no_service="False"
     IFS_old=$IFS
     IFS="
 "
     #Using systemd instead of init.d
-    grep_str=$(grep "inittab is no longer used when using systemd" $inittab_file)
+    grep_str=$(grep "inittab is no longer used when using systemd" "$inittab_file")
     if [ "$grep_str" != "" ]; then
         #Running on ambarella developing board.
-        if [ -z "$(uname -a|grep Ambarella)" ]; then
-            check_service_file $1
+        if ! uname -a |grep -q Ambarella; then
+            check_service_file "$1"
             return 0
         fi
 
-        if [ "$(systemctl show $1*)" == "" ]; then
+        if [ "$(systemctl show "$1"*)" = "" ]; then
             print_safe "Service ($1) not in systemd system\n"
         else
             print_unsafe "Service ($1) will run in systemd system\n"
         fi
         return 0
     fi
-
-    for LINE in $(grep $1 $inittab_file); do
-        if [ -z "$(echo $LINE |awk -F# '{print $1}')" ]; then
+    grep "$1" "$inittab_file" | while read LINE; do
+        if [ -z "$(echo "$LINE" |awk -F# '{print $1}')" ]; then
             continue
         else
             print_unsafe "Service ($1) will RUN while booting\n"
@@ -334,7 +352,7 @@ check_service() {
 
 check_https_safty() {
     lighttpd_conf=$1"/etc/lighttpd.conf"
-    userfile=$(grep userfile $lighttpd_conf|awk -F\" '{print $2}')
+    userfile=$(grep userfile "$lighttpd_conf" |awk -F\" '{print $2}')
     if [ -z "$userfile" ]; then
         print_unsafe "Lighttpd user password file not specified\n"
         return
@@ -348,7 +366,7 @@ check_https_safty() {
 
 scan_file_right() {
     printf "0> File access right scanning\n"
-    file_str=$(ls -l $1)
+    file_str=$(ls -l "$1")
     file_mat=${file_str##"$2"}
     if [ "$file_str" = "$file_mat" ]; then
         print_unsafe "File in low safty access right.\n"
@@ -359,7 +377,7 @@ scan_file_right() {
 
 scan_plus_in_file() {
     printf "1> No '+' scanning\n"
-    match_str=$(grep ^+: $1)
+    match_str=$(grep ^+: "$1")
     if [ -z "$match_str" ]
     then
         print_safe "No '+' found.\n"
@@ -371,24 +389,24 @@ scan_plus_in_file() {
 scan_empty_passwd() {
     printf "2> Empty password scanning\n"
     found_empty_pwd="false"
-    cat $1|while read oneline
+    while read oneline
 do
-    passwd=$(echo $oneline| awk -F: '{print $2}')
+    passwd=$(echo "$oneline" | awk -F: '{print $2}')
     if [ -z "$passwd" ]
     then
-        user=$(echo $oneline|awk -F: '{print $1}')
+        user=$(echo "$oneline" |awk -F: '{print $1}')
         print_unsafe "user($user) password is empty\n"
         found_empty_pwd="true"
     fi
-done
-    if [ $found_empty_pwd == "false" ]; then
+done < "$1"
+    if [ "$found_empty_pwd" = "false" ]; then
         print_safe "No user with empty password in $1\n"
     fi
 }
 
 scan_zero_uid() {
     printf "3> No UID=0 scanning\n"
-    UID_user=$(awk -F: '($3==0){print $1}' $1)
+    UID_user=$(awk -F: '($3==0){print $1}' "$1")
     if [ "$UID_user" = "root" ]; then
         print_safe "Only root has UID=0\n"
     elif [ -z "$UID_user" ]; then
@@ -402,18 +420,18 @@ scan_zero_uid() {
 # General Functions
 print_safe() {
     OUTPUT_STR="[  \e[32mSafe\033[0m  ]: "$1
-    printf "$OUTPUT_STR"
+    printf "%s" "$OUTPUT_STR"
 }
 
 print_unsafe() {
     unsafe_str="[ \e[31mUnsafe\033[0m ]: "$1
     RESULT_STR=$RESULT_STR$unsafe_str
-    printf "$unsafe_str"
+    printf "%s" "$unsafe_str"
 }
 
 help_opts() {
     printf "SYNOPSIS\n"
-    printf "\t$1 [-p FAKE_ROOT_PATH]|[-h]\n"
+    printf "%s\n" "\t$1 [-p FAKE_ROOT_PATH]|[-h]"
     printf "OPTIONs:\n"
     printf "\t -P FAKE_ROOT_PATH :check files under fake root path.\n"
     printf "\t -h :show this help info.\n\n"
@@ -424,28 +442,28 @@ parse_opts() {
     -p)
         if [ -z "$2" ]; then
             printf "Parameter error for option -p\n"
-            help_opts $0
+            help_opts "$0"
             exit 1
         fi
         return 1
         ;;
     -h)
-        help_opts $0
+        help_opts "$0"
         return 0
         ;;
     *)
         printf "Option Error.\n"
-        help_opts $0
+        help_opts "$0"
         exit 1
         ;;
     esac
 }
 
 check_run_on_board() {
-    if [ -z "$(uname -a|grep Ambarella)" ]; then
-        printf "$1: Not running script on board Now.\n"
+    if ! uname -a |grep -q Ambarella; then
+        printf "%s\n" "$1: Not running script on board Now."
         printf "Please specify the FAKE ROOT path by option '-p'\n\n"
-        help_opts $1
+        help_opts "$1"
         exit 1
     fi
 }
@@ -460,13 +478,13 @@ sys_res_scanning() {
 }
 
 fake_root_scanning() {
-    passwd_scanner $1
-    shadow_scanner $1
-    group_scanner $1
-    service_scanner $1
-    network_fs_scanner $1
-    mount_fs_scanner $1
-    kernel_cmdline_scan $1
+    passwd_scanner "$1"
+    shadow_scanner "$1"
+    group_scanner "$1"
+    service_scanner "$1"
+    network_fs_scanner "$1"
+    mount_fs_scanner "$1"
+    kernel_cmdline_scan "$1"
 }
 
 on_board_scanning() {
@@ -481,30 +499,30 @@ on_board_scanning() {
 print_summary() {
     printf "=======================================================================\n"
     printf "Summary :\n"
-    printf "$RESULT_STR\n"
+    printf "%s\n" "$RESULT_STR"
     if [ "$PORT_STR" != "" ]; then
         printf "Listening Ports:\n"
-        printf "$PORT_STR"
+        printf "%s" "$PORT_STR"
     fi
     echo
 }
 
 ###################### Main Function ############################
 if [ $# -gt 2 ]; then
-    printf "$0: Wrong parameters!\n"
-    help_opts $0
+    printf "%s\n" "$0: Wrong parameters!"
+    help_opts "$0"
     exit 1
 fi
 echo
 if [ $# -eq 0 ]; then
-    check_run_on_board $0
+    check_run_on_board "$0"
     #If no parameter, suspect running script on board.
     on_board_scanning
 else
     # Check on fake root fs.
-    parse_opts $@
+    parse_opts "$@"
     if [ $? -eq 1 ]; then
-        fake_root_scanning $2
+        fake_root_scanning "$2"
     fi
 fi
 
diff --git a/amb_scripts/wifi_auto.sh b/amb_scripts/wifi_auto.sh
index 52e8887..26cbcfd 100644
--- a/amb_scripts/wifi_auto.sh
+++ b/amb_scripts/wifi_auto.sh
@@ -1,10 +1,34 @@
 #!/bin/sh
-##########################
-# History:
-#	2015/04/28 - [Tao Wu] modify file
-#
-# Copyright (C) 2004-2015, Ambarella, Inc.
-##########################
+##
+## History:
+##	2015/04/28 - [Tao Wu] modify file
+##
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
+
 
 DIR_CONFIG=/tmp/config
 WPA_CONFIG=$DIR_CONFIG/wpa_supplicant.conf
@@ -26,9 +50,9 @@ else
 	done
 	echo "Cooee Done"
 
-	SSID=`cat ${COOEE_CONFIG} | grep ssid | cut -c 6-`
-	PASSWORD=`cat ${COOEE_CONFIG} | grep password | cut -c 10-`
+	SSID=$(grep ssid ${COOEE_CONFIG} | cut -c 6-)
+	PASSWORD=$(grep password ${COOEE_CONFIG} | cut -c 10-)
 	echo "Cooee: SSID=${SSID}, PASSWORD=${PASSWORD}"
-	wifi_setup.sh sta nl80211 ${SSID} ${PASSWORD}
+	wifi_setup.sh sta nl80211 "${SSID}" "${PASSWORD}"
 fi
 ########################################
diff --git a/amb_scripts/wifi_setup.sh b/amb_scripts/wifi_setup.sh
index 6fb8a05..bb42216 100644
--- a/amb_scripts/wifi_setup.sh
+++ b/amb_scripts/wifi_setup.sh
@@ -1,41 +1,80 @@
 #!/bin/sh
 ##########################
 # History:
-#	2014/04/01 - [Tao Wu] modify file
+#	2014/04/01 - [Tao Wu] Create file
+#	2016/05/17 - [Tao Wu] Update file
 #
-# Copyright (C) 2004-2014, Ambarella, Inc.
-##########################
+# Copyright (c) 2016 Ambarella, Inc.
+#
+# This file and its contents ("Software") are protected by intellectual
+# property rights including, without limitation, U.S. and/or foreign
+# copyrights. This Software is also the confidential and proprietary
+# information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+# disclose, distribute, modify, or otherwise prepare derivative works of this
+# Software or any portion thereof except pursuant to a signed license agreement
+# or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+# In the absence of such an agreement, you agree to promptly notify and return
+# this Software to Ambarella, Inc.
+#
+# THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+# INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+# MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+# IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+# INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+# (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+# LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+# INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+# CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+# ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+# POSSIBILITY OF SUCH DAMAGE.
+#
+###############
+
+WIFI_SETUP_VERSION="1.3.6"
+
 mode=$1
 driver=$2
-ssid=$3
-passwd=$4
-encryption=$5
-channel=$6
 
+############# Configuration it ###############
+WOWLAN=1
 DEVICE=wlan0
-wpa_supplicant_version="unknown"
+DEVICE_AP=wlan1
+DEVICE_P2P=wlan1
 DIR_CONFIG=/tmp/config
-frequency=2412
+
+BG_CHECK_STA_STATUS=0
+
+############# Exit Error Number ###############
+ERRNO_OK=0
+ERRNO_PARAM=1
+ERRNO_ENV=2
+ERRNO_SSID_NOT_FOUND=3
+ERRNO_PASSWORD_WRONG=4
+
 ############# Broadcom WiFi module bcmdhd CONFIG ###############
 BCMDHD_CONFIG=$DIR_CONFIG/dhd.conf
 
 ############# WPA CONFIG ###############
 CTRL_INTERFACE=/var/run/wpa_supplicant
 CONFIG=$DIR_CONFIG/wpa_supplicant.conf
+HOST_CONFIG=$DIR_CONFIG/wpa_supplicant_ap.conf
 WPA_LOG=/var/log/wpa_supplicant.log
-NO_SCAN=1
-#the max times to kill app
-KILL_NUM_MAX=10
-#the max timies to connect AP
-CONNECT_NUM_MAX=100
 STA_ACTION=/usr/local/bin/sta_action.sh
 
-############# HOSTAP CONFIG ###############
-HOSTAP_CTRL_INTERFACE=/var/run/hostapd
-HOST_CONFIG=$DIR_CONFIG/hostapd.conf
-DEFAULT_CHANNEL=1
-HOST_MAX_STA=5
+## Used for wpa_supplicant's param
+WPA_EXT_PARAM=""
+## Used for connect ap without scan
+NO_SCAN=1
+## Used for sta auto connect to ap when ap down and up
+STA_AUTOCONNECTION=1
+## User for update wpa_supplicant config after save_config
+UPDATE_CONFIG_VALUE=1
+
+wpa_supplicant_version="unknown"
 
+DEFAULT_CHANNEL=1
+sta_channel=$DEFAULT_CHANNEL
+sta_frequency=$((DEFAULT_CHANNEL*5 + 2407))
 #############  DHCP Server ###############
 IP_CONFIG=$DIR_CONFIG/ip.conf
 LOCAL_IP=192.168.42.1
@@ -53,151 +92,236 @@ export P2P_CONNECT_PREFIX=amba
 #P2P_DEVICE_NAME=amba-1
 P2P_ACTION=/usr/local/bin/p2p_action.sh
 
-############### Module ID ################
-MODULE_ID=AR6003
-if [ -e /sys/module/bcmdhd ]; then
-	MODULE_ID=BCMDHD
-elif [ -e /sys/module/8189es ]; then
-	MODULE_ID=RTL8189ES
-fi
-
 ############### Function ################
 
-# usage
 usages()
 {
-	echo "usage: $0 [sta|ap|p2p] [wext|nl80211]  <SSID> <Password> [open|wpa] <Channel>"
+	echo "Version: ${WIFI_SETUP_VERSION}"
+	echo "This script used to Setup/Stop WiFi STA/AP/CON/P2P mode with wpa_supplicant"
+	echo "usage:                      $0 [sta|ap|wps|con|p2p] [wext|nl80211] <SSID> <Password|0> [open|wpa2|wpa|wpawpa2|wep|0] <Channel>"
+	echo ""
 	echo "Example:"
-	echo "Connect To AP: 		$0 sta nl80211 <SSID>"
-	echo "Connect To security AP: $0 sta nl80211 <SSID> <Password>"
-	echo "Setup AP[Open]: 	$0 ap nl80211 <SSID> 0 open <Channel>"
-	echo "Setup AP[WPA]: 		$0 ap nl80211 <SSID> <Password> wpa <Channel>"
-	echo "Setup P2P: 		$0 p2p nl80211 <SSID>"
-	echo "Stop all APP(STA, AP, P2P): 	$0 stop"
-	echo "Notice: If you setup AP mode, WPS is enable by default. #hostapd_cli -i<interface> [wps_pbc |wps_pin any <Pin Code> ]"
+	echo "Connect To AP[open]:        $0 sta nl80211 <SSID>"
+	echo "Connect To AP[encrypt]:     $0 sta nl80211 <SSID> <Password>"
+	echo "Connect To AP-BSSID[open]:  $0 sta nl80211 <BSSID>"
+	echo "Connect To Hidden[open]:    $0 sta nl80211 <SSID>     0      open"
+	echo "Connect To Hidden[encrypt]: $0 sta nl80211 <SSID> <Password> [wpa2|wpa|wpawpa2|wep]"
+	echo "Connect To AP[wps_pbc]:     $0 wps nl80211 <BSSID|any>     0       wps_pbc"
+	echo "Connect To AP[wps_pin]:     $0 wps nl80211 <BSSID|any> <Pincode|0> wps_pin"
+	echo "Setup AP[open]:             $0 ap  nl80211 <SSID>     0      open <Channel>"
+	echo "Setup AP[encrypt]:          $0 ap  nl80211 <SSID> <Password> [wpa2|wpa|wpawpa2]  <Channel>"
+	echo "Setup Concurrent:           $0 con nl80211 <STA-SSID> <Password|0> [open|wpa2|wpa|wpawpa2|wep|0] <AP-SSID> <Password|0> [open|wpa]"
+	echo "Setup P2P:                  $0 p2p nl80211 <SSID>"
+	echo "Stop STA/AP/CON/P2P mode:   $0 stop"
+	echo ""
+	echo "NOTICE: Using interface STA:[${DEVICE}], AP[${DEVICE_AP}], P2P[${DEVICE_P2P}] by default, change it if necessary."
+	echo "Configuration: WOWLAN, DEVICE/DEVICE_AP/DEVICE_P2P, DIR_CONFIG value in $0 ."
+
+	exit $ERRNO_OK
 }
 
-# check usage param
-check_param()
+check_driver()
 {
-	if [ ${mode} != "sta" ] && [ ${mode} != "ap" ] && [ ${mode} != "p2p" ] && [ ${mode} != "stop" ]; then
-		echo "Please Select Mode [sta|ap|p2p] or stop"
-		exit 1;
-	fi
-
-	if [ ${driver} != "wext" ] && [ ${driver} != "nl80211" ]; then
+	if [ "${driver}" != "wext" ] && [ "${driver}" != "nl80211" ]; then
 		echo "Please Select Driver [wext|nl80211]"
-		exit 1;
+		exit $ERRNO_PARAM
 	fi
+}
 
-	if [ ${mode} == "ap" ]; then
-		if [ ${encryption} != "open" ] && [ ${encryption} != "wpa" ]; then
-			echo "Please Select Encryption [open|wpa]"
-			exit 1;
-		fi
-		if [ ${#channel} -gt 0 ]; then
-			if [ ${channel} -gt 14 ] || [ ${channel}  -lt 1 ]; then
-				echo "Your Channel is wrong(1 ~ 13), using Channl ${DEFAULT_CHANNEL} by default."
-				channel=$DEFAULT_CHANNEL
-			fi
-		else
-			echo "Using Channl ${DEFAULT_CHANNEL} by default."
-			channel=$DEFAULT_CHANNEL
-		fi
+check_iface()
+{
+	iface=$1
+	if [ "$(ifconfig "$iface")" = "" ]; then
+		echo "Not Found Interface $iface"
+		exit $ERRNO_ENV
 	fi
 }
 
-# check wpa_supplicant version
 check_wpa_supplicant()
 {
-	wpa_version=`wpa_supplicant -v | head -n 1`
-	wpa_supplicant_version=${wpa_version##*wpa_supplicant}
-	wpa_supplicant_version=${wpa_supplicant_version:2}
+	if [ "$(which wpa_supplicant)" = "" ]; then
+		echo "Not Found wpa_supplicant"
+		exit $ERRNO_ENV
+	fi
+	wpa_version=$(wpa_supplicant -v | head -n 1)
+	wpa_supplicant_version=${wpa_version##*wpa_supplicant }
 	echo "wpa_supplicant version=${wpa_supplicant_version}"
 }
 
-# kill process
 kill_apps()
 {
+	#the max times to kill app
+	local KILL_NUM_MAX=10
+
 	for app in "$@"
 	do
-		kill_num=0
-		#echo "Kill ${app}"
-		while [ "$(pgrep ${app})" != "" ]
+		local kill_num=0
+		while [ "$(pgrep "${app}")" != "" ]
 		do
-			if [ $kill_num -eq $KILL_NUM_MAX ]; then
+			if [ $kill_num -ge $KILL_NUM_MAX ]; then
 				echo "Please try execute \"killall ${app}\" by yourself"
-				exit 1
+				exit $ERRNO_ENV
 			else
-				killall -9 ${app}
+				killall -9 "${app}"
+				sleep 1
 			fi
-			kill_num=$((kill_num+1));
+			kill_num=$((kill_num + 1));
 		done
 	done
 }
 
-# for bcmdhd roam
+stop_wifi_app()
+{
+	kill_apps udhcpc dnsmasq NetworkManager wpa_cli wpa_supplicant
+	if [ -x $STA_ACTION ]; then
+		kill_apps $STA_ACTION
+	fi
+	ifconfig ${DEVICE} down
+	ifconfig ${DEVICE_AP} down
+	ifconfig ${DEVICE_P2P} down
+}
+
+################ Driver #####################
+
+get_device_id()
+{
+	MODULE_ID=UNKNOWN
+	if [ -e /sys/module/bcmdhd ]; then
+		MODULE_ID=BCMDHD
+	elif [ -e /sys/module/8189es ]; then
+		MODULE_ID=RTL8189ES
+	fi
+}
+
 generate_bcmdhd_conf()
 {
-	echo "roam_cache_ssid=${ssid}" > ${BCMDHD_CONFIG}
-	echo "roam_cache_channel=${channel}" >> ${BCMDHD_CONFIG}
+	local local_ssid=$1
+	local local_channel=$2
+
+	if [ -f ${BCMDHD_CONFIG} ]; then
+		grep -v 'roam_cache_ssid' ${BCMDHD_CONFIG} | grep -v 'roam_cache_channel' > ${BCMDHD_CONFIG}.tmp
+		mv ${BCMDHD_CONFIG}.tmp ${BCMDHD_CONFIG}
+	fi
+	echo "roam_cache_ssid=${local_ssid}" >> ${BCMDHD_CONFIG}
+	echo "roam_cache_channel=${local_channel}" >> ${BCMDHD_CONFIG}
 }
 
 generate_driver_conf()
 {
-	if [ "${MODULE_ID}" == "BCMDHD" ]; then
-		generate_bcmdhd_conf
+	if [ "${MODULE_ID}" = "BCMDHD" ]; then
+		generate_bcmdhd_conf "$1" "$2"
 	fi
 }
 
-# wpa_supplicant scan
+################ STA #####################
+
+show_scan_result()
+{
+	echo "=============================================="
+	echo "${scan_result}"
+	echo "=============================================="
+}
+
 WPA_SCAN()
 {
-	wpa_supplicant -i${DEVICE} -D${driver} -C${CTRL_INTERFACE} -B
-	wpa_cli -p${CTRL_INTERFACE} -i${DEVICE} scan
-	sleep 3
-	scan_result=`wpa_cli -p${CTRL_INTERFACE} -i${DEVICE} scan_result`
+	#the max times to wait scan result
+	local SCAN_CHECK_MAX=10
+
+	local local_ssid=$1
+
+	wpa_supplicant -i${DEVICE} -D"${driver}" -C${CTRL_INTERFACE} -B
+	wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} scan
+	sleep 1
+
+	local scan_matched_num=0
+	local scan_check=0
+	local ssid_line_no=1
+
+	is_bssid=$(echo "${local_ssid}" | grep -E "[0-9a-f]{2}([-:])[0-9a-f]{2}(\\1[0-9a-f]{2}){4}$")
+	scan_result=""
+	scan_entry=""
+
+	while [ $scan_check -lt $SCAN_CHECK_MAX ]
+	do
+		scan_result=$(wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} scan_result)
+		if  [ "${is_bssid}" ]; then
+			scan_entry=$(echo "${scan_result}" | tr '\t' ' ' | grep -F "${local_ssid}")
+		else
+			ssid_line_no=$(echo "${scan_result}" |cut -f 5-| sed 's/\\\\/\\/g' | sed 's/\\\"/\"/g' | grep -n -x -F "${local_ssid}" |  cut -d ':' -f 1 )
+			scan_matched_num=$(echo "${ssid_line_no}" | wc -l)
+			ssid_line_no=$(echo "${ssid_line_no}" | head -n 1)
+			scan_entry=$(echo "${scan_result}" | tr '\t' ' ' | awk 'NR=="'${ssid_line_no}'" {print $0}' | sed 's/\\\\/\\/g' | sed 's/\\\"/\"/g')
+		fi
+
+		if [ "${scan_entry}" != "" ]; then
+			echo "Scan [${scan_check}] times and get entry [${scan_matched_num}]=${scan_entry}"
+			break
+		fi
+
+		scan_check=$((scan_check + 1))
+		sleep 1
+	done
 
 	kill_apps wpa_supplicant
 	rm -r ${CTRL_INTERFACE}
-	echo "=============================================="
-	echo "${scan_result}"
-	echo "=============================================="
+
+	if [ "${scan_entry}" = "" ]; then
+		show_scan_result
+		echo "Scan [${scan_check}] times and can not find SSID [${local_ssid}]"
+		exit $ERRNO_SSID_NOT_FOUND
+	fi
+	if [ "$scan_matched_num" -gt 1 ]; then
+		show_scan_result
+		echo "Found [${scan_matched_num}] AP with the same SSID [${local_ssid}]"
+	fi
 }
 
-# configurate wap_supplicant config
-generate_wpa_conf()
+generate_wpa_scan_conf()
 {
+	local local_ssid=$1
+	local local_passwd=$2
+
 	if [ -f ${CONFIG} ]; then
 		## Use the saved config, Do not need generate new config except failed to connect.
-		return ;
+		return
 	fi
 	mkdir -p $DIR_CONFIG
-	WPA_SCAN
-	scan_entry=`echo "${scan_result}" | tr '\t' ' ' | grep " ${ssid}$" | tail -n 1`
 
-	if [ "${scan_entry}" == "" ]; then
-		echo "failed to detect SSID [${ssid}], please try to get close to the AP"
-		exit 1
+	WPA_SCAN "${local_ssid}"
+
+	sta_frequency=$(echo "${scan_entry}" | awk '{print $2}')
+	if [ "$sta_frequency" -gt 2484 ]; then
+		sta_channel=$(((sta_frequency-5000)/5))
+	else
+		sta_channel=$(((sta_frequency-2407)/5))
 	fi
 
+	if  [ "${is_bssid}" ]; then
+		echo "STA-BSSID=${local_ssid}, Frequency=${sta_frequency}, Channel=${sta_channel}"
+	else
+		echo "STA-SSID=${local_ssid}, Frequency=${sta_frequency}, Channel=${sta_channel}"
+	fi
 	echo "ctrl_interface=${CTRL_INTERFACE}" > ${CONFIG}
+	echo "update_config=${UPDATE_CONFIG_VALUE}" >> ${CONFIG}
+
+	## This for WiFi suspend/resume, otherwise wpa will send disconnect ctl when suspend
+	if [ $WOWLAN -eq 1 ]; then
+		echo "wowlan_triggers=any" >> ${CONFIG}
+	fi
+
 	echo "network={" >> ${CONFIG}
-	echo "ssid=\"${ssid}\"" >> ${CONFIG}
 
-	frequency=`echo "${scan_entry}" |awk '{print $2}'`
-	if [ $frequency -gt 2484 ]; then
-		channel=$((($frequency-5000)/5))
+	if  [ "${is_bssid}" ]; then
+		echo "bssid=${local_ssid}" >> ${CONFIG}
 	else
-		channel=$((($frequency-2407)/5))
+		echo "ssid=\"${local_ssid}\"" >> ${CONFIG}
 	fi
-	#echo "Frequency=${frequency}, Channel=${channel}"
 
-	WEP=`echo "${scan_entry}" | grep WEP`
-	WPA=`echo "${scan_entry}" | grep WPA`
-	WPA2=`echo "${scan_entry}" | grep WPA2`
-	CCMP=`echo "${scan_entry}" | grep CCMP`
-	TKIP=`echo "${scan_entry}" | grep TKIP`
+	WEP=$(echo "${scan_entry}" | grep WEP)
+	WPA=$(echo "${scan_entry}" | grep WPA)
+	WPA2=$(echo "${scan_entry}" | grep WPA2)
+	CCMP=$(echo "${scan_entry}" | grep CCMP)
+	TKIP=$(echo "${scan_entry}" | grep TKIP)
 
 	if [ "${WPA}" != "" ]; then
 		#WPA2-PSK-CCMP	(11n requirement)
@@ -222,17 +346,33 @@ generate_wpa_conf()
 		else
 			echo "pairwise=TKIP" >> ${CONFIG}
 		fi
-		echo "psk=\"${passwd}\"" >> ${CONFIG}
+		local len_passwd=${#local_passwd}
+		if [ "$len_passwd" -eq 64 ]; then
+			echo "passphrase length is 64, using hex type"
+			echo "psk=${local_passwd}" >> ${CONFIG}
+		elif [ "$len_passwd" -ge 8 ] && [ "$len_passwd" -le 63 ]; then
+			echo "psk=\"${local_passwd}\"" >> ${CONFIG}
+		else
+			echo "Invalid passphrase length ${len_passwd} (expected: 8..63 or 64 hex)"
+			rm -rf ${CONFIG}
+			exit $ERRNO_PARAM
+		fi
 	fi
 
-	if [ "${WEP}" != "" ] && [ "${WPA}" == "" ]; then
-		echo "key_mgmt=NONE" >> ${CONFIG}
-	    echo "wep_key0=${passwd}" >> ${CONFIG}
-	    echo "wep_tx_keyidx=0" >> ${CONFIG}
+	if [ "${WEP}" != "" ] && [ "${WPA}" = "" ]; then
+		{
+			echo "key_mgmt=NONE"
+			echo "wep_key0=${local_passwd}"
+			echo "wep_tx_keyidx=0"
+		} >> ${CONFIG}
 	fi
 
-	if [ "${WEP}" == "" ] && [ "${WPA}" == "" ]; then
+	if [ "${WEP}" = "" ] && [ "${WPA}" = "" ]; then
 		echo "key_mgmt=NONE" >> ${CONFIG}
+	elif [ "${local_passwd}" = "" ]; then
+		echo "Please input password for encrypt AP"
+		rm -rf ${CONFIG}
+		exit $ERRNO_PARAM
 	fi
 
 	if [ $NO_SCAN -eq 1 ]; then
@@ -241,21 +381,128 @@ generate_wpa_conf()
 
 	echo "}" >> ${CONFIG}
 
-	generate_driver_conf
+	generate_driver_conf "${local_ssid}" ${sta_channel}
 }
 
-# start wpa_supplicant
-start_wpa_supplicant()
+generate_wpa_hidden_conf()
+{
+	local local_ssid=$1
+	local local_passwd=$2
+	local local_encrypt=$3
+
+	if [ -f ${CONFIG} ]; then
+		## Use the saved config, Do not need generate new config except failed to connect.
+		return
+	fi
+	mkdir -p $DIR_CONFIG
+
+	is_bssid=$(echo "${local_ssid}" | grep -E "[0-9a-f]{2}([-:])[0-9a-f]{2}(\\1[0-9a-f]{2}){4}$")
+	if  [ "${is_bssid}" ]; then
+		echo "Hidden STA-BSSID=${local_ssid}, Encryption=${local_encrypt}"
+	else
+		echo "Hidden STA-SSID=${local_ssid}, Encryption=${local_encrypt}"
+	fi
+
+	echo "ctrl_interface=${CTRL_INTERFACE}" > ${CONFIG}
+	echo "ap_scan=2" >> ${CONFIG}
+	echo "update_config=${UPDATE_CONFIG_VALUE}" >> ${CONFIG}
+
+	## This for WiFi suspend/resume, otherwise wpa will send disconnect ctl when suspend
+	if [ $WOWLAN -eq 1 ]; then
+		echo "wowlan_triggers=any" >> ${CONFIG}
+	fi
+
+	echo "network={" >> ${CONFIG}
+
+	if  [ "${is_bssid}" ]; then
+		echo "bssid=${local_ssid}" >> ${CONFIG}
+	else
+		echo "ssid=\"${local_ssid}\"" >> ${CONFIG}
+	fi
+
+	if [ "${local_encrypt}" != "open" ]; then
+		local len_passwd=${#local_passwd}
+		local local_passwd_value=""
+
+		if [ "$len_passwd" -eq 64 ]; then
+			echo "passphrase length is 64, using hex type"
+			local_passwd_value="${local_passwd}"
+		elif [ "$len_passwd" -ge 8 ] && [ "$len_passwd" -le 63 ]; then
+			local_passwd_value="\"${local_passwd}\""
+		else
+			echo "Invalid passphrase length ${len_passwd} (expected: 8..63 or 64 hex)"
+			rm -rf ${CONFIG}
+			exit $ERRNO_PARAM
+		fi
+	fi
+
+	case ${local_encrypt} in
+		open)
+			echo "key_mgmt=NONE">> ${CONFIG}
+			;;
+		wpa2)
+			echo "key_mgmt=WPA-PSK">> ${CONFIG}
+			echo "proto=WPA2" >> ${CONFIG}
+			echo "pairwise=CCMP" >> ${CONFIG}
+			echo "psk=${local_passwd_value}" >> ${CONFIG}
+			;;
+		wpa)
+			echo "key_mgmt=WPA-PSK">> ${CONFIG}
+			echo "proto=WPA" >> ${CONFIG}
+			echo "pairwise=TKIP" >> ${CONFIG}
+			echo "psk=${local_passwd_value}" >> ${CONFIG}
+			;;
+		wpawpa2)
+			echo "key_mgmt=WPA-PSK">> ${CONFIG}
+			echo "proto=WPA2" >> ${CONFIG}
+			echo "pairwise=CCMP TKIP" >> ${CONFIG}
+			echo "group=TKIP" >> ${CONFIG}
+			echo "psk=${local_passwd_value}" >> ${CONFIG}
+			;;
+		wep)
+			echo "key_mgmt=NONE" >> ${CONFIG}
+			echo "wep_key0=${local_passwd}" >> ${CONFIG}
+			echo "wep_tx_keyidx=0" >> ${CONFIG}
+			;;
+		*)
+			echo "Please select hidden SSID encryption [open|wpa2|wpa|wpawpa2|wep]"
+			rm -rf ${CONFIG}
+			exit $ERRNO_PARAM
+			;;
+	esac
+
+	if [ $NO_SCAN -eq 1 ]; then
+		echo "disabled=1" >> ${CONFIG}
+	fi
+
+	echo "}" >> ${CONFIG}
+}
+
+generate_wpa_sta_conf()
+{
+	local local_is_hidden=$3
+	if [ "${local_is_hidden}" ] && [ "${local_is_hidden}" != "0" ]; then
+		generate_wpa_hidden_conf "$1" "$2" "$3"
+	else
+		generate_wpa_scan_conf "$1" "$2"
+	fi
+}
+
+start_wpa_supplicant_sta()
 {
 	ifconfig ${DEVICE} up
-	if [ ${wpa_supplicant_version} == "0.7.3" ]; then
-		CMD="wpa_supplicant -i${DEVICE} -D${driver} -c${CONFIG} -B"
+	if [ "${wpa_supplicant_version}" = "0.7.3" ]; then
+		CMD="wpa_supplicant -i${DEVICE} -D${driver} -c${CONFIG} -B ${WPA_EXT_PARAM}"
 	else
-		CMD="wpa_supplicant -i${DEVICE} -D${driver} -c${CONFIG} -f${WPA_LOG} -d -t -B"
+		CMD="wpa_supplicant -i${DEVICE} -D${driver} -c${CONFIG} -f${WPA_LOG} -B ${WPA_EXT_PARAM}"
 	fi
 	echo "CMD=${CMD}"
 	$CMD
-	wpa_cli -p${CTRL_INTERFACE} -i ${DEVICE} select_network 0
+
+	wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} select_network 0
+	if [ $STA_AUTOCONNECTION -eq 1 ]; then
+		wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} sta_autoconnect 1
+	fi
 }
 
 generate_dns_conf()
@@ -266,189 +513,398 @@ generate_dns_conf()
 	done
 }
 
+generate_ip_conf()
+{
 # Generate ip.conf
 #ip_addr:192.168.1.28
 #Bcast:192.168.1.255
 #Mask:255.255.255.0
 #Gateway:192.168.1.1
-generate_ip_conf()
-{
 	echo "$2"
 	echo "ip_$2" > $IP_CONFIG
 	echo "$3"
 	echo "$3" >> $IP_CONFIG
 	echo "$4"
 	echo "$4" >> $IP_CONFIG
-	gw=`route -n |grep ${DEVICE} |awk 'NR==1{print $2}'`
+	gw=$(route -n |grep ${DEVICE} |awk 'NR==1{print $2}')
 	echo "Gateway:$gw" >> $IP_CONFIG
 }
 
-# Get IP Address, 1. DHCP 2. Static IP
 get_ip_address()
 {
+# Get IP Address, 1. DHCP 2. Static IP
 	if [ -f $IP_CONFIG ]; then
-		LOCAL_IP=`cat ${IP_CONFIG} | grep ip_addr`
+		LOCAL_IP=$(grep ip_addr ${IP_CONFIG})
 		LOCAL_IP=${LOCAL_IP##*:}
-		BCAST=`cat ${IP_CONFIG} | grep Bcast`
+		BCAST=$(grep Bcast ${IP_CONFIG})
 		BCAST=${BCAST##*:}
-		MASK=`cat ${IP_CONFIG} | grep Mask`
+		MASK=$(grep Mask ${IP_CONFIG})
 		MASK=${MASK##*:}
-		GATEWAY=`cat ${IP_CONFIG} | grep Gateway`
+		GATEWAY=$(grep Gateway ${IP_CONFIG})
 		GATEWAY=${GATEWAY##*:}
 		echo "Static IP: $LOCAL_IP "
 		echo "Broad Cast: $BCAST "
 		echo "Net Mask: $MASK "
 		echo "Gate Way: $GATEWAY "
-		ifconfig ${DEVICE} ${LOCAL_IP} broadcast ${BCAST} netmask ${MASK}
-		route add default gw ${GATEWAY} ${DEVICE}
+		ifconfig ${DEVICE} "${LOCAL_IP}" broadcast "${BCAST}" netmask "${MASK}"
+		route add default gw "${GATEWAY}" ${DEVICE}
 	else
-		dns_server=`udhcpc -i${DEVICE} 2>&1 |grep dns|awk '{print $3}'`
-		#generate_dns_conf $dns_server
-		LOCAL_IP_CONF=`ifconfig ${DEVICE} | grep "inet addr" | cut -c 11-`
-		generate_ip_conf ${LOCAL_IP_CONF}
+		dns_server=$(udhcpc -i${DEVICE} -A 1 -b 2>&1 |grep dns|awk '{print $3}')
+		generate_dns_conf "${dns_server}"
+		local_ip_config=$(ifconfig ${DEVICE} | grep "inet addr" | cut -c 11-)
+		generate_ip_conf ${local_ip_config}
 	fi
 }
 
-# check wpa status
 wpa_cli_sta_check_status()
 {
-	connect_num=0
-	connect_sleep_num=$(($CONNECT_NUM_MAX/2))
-	until [ $connect_num -gt $CONNECT_NUM_MAX ]
+	## the max times to check wpa status
+	local CONNECT_NUM_MAX=80
+	local CHECK_INTERVAL=0.5
+
+	local connect_num=0
+	local connect_sleep_num=$((CONNECT_NUM_MAX/2))
+
+	# OK                        : SCANNING -> 4WAY_HAND -> COMPLETED
+	# Password Mismatch: SCANNING -> 4WAY_HAND -> DISCONNEC
+	local WPA_STATUS_CMD=""
+	local WPA_STATUS=""
+	local WPA_STATUS_DID_AUTH=0
+
+	while [ $connect_num -lt $CONNECT_NUM_MAX ]
 	do
-		WPA_STATUS_CMD=`wpa_cli -p${CTRL_INTERFACE} -i${DEVICE} status`
-		WPA_STATUS=${WPA_STATUS_CMD##*wpa_state=}
-		WPA_STATUS=${WPA_STATUS:0:9}
-		if [ "$WPA_STATUS" == "COMPLETED" ]; then
-			if [ "$(pgrep wpa_supplicant)" == "" ]; then
-				echo ">>>wpa_supplicant isn't running<<<"
-				exit 1
+		WPA_STATUS_CMD=$(wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} status | grep wpa_state)
+		WPA_STATUS=${WPA_STATUS_CMD#*wpa_state=}
+		# echo "current wpa_status=${WPA_STATUS}"
+
+		if [ "${WPA_STATUS}" = "COMPLETED" ]; then
+			if [  "$(pgrep wpa_supplicant)" = "" ]; then
+				echo "wpa_supplicant is not running"
+				exit $ERRNO_ENV
 			fi
-			echo "Check times [${connect_num}], wpa_supplicant status=${WPA_STATUS}"
+
+			echo "Check time [${connect_num}/${CONNECT_NUM_MAX} x ${CHECK_INTERVAL}], wpa_status=${WPA_STATUS}"
 			get_ip_address
 			echo ">>>wifi_setup OK<<<"
-			exit 0
+			exit $ERRNO_OK
+		fi
+
+		# If status change from authenticating to scan, then password is incorrect
+		if [ ${WPA_STATUS_DID_AUTH} -eq 0 ]; then
+			if [ "${WPA_STATUS}" = "4WAY_HANDSHAKE" ] || [ "${WPA_STATUS}" = "GROUP_HANDSHAKE" ]; then
+				echo "authenticating wpa_status=${WPA_STATUS}"
+				WPA_STATUS_DID_AUTH=1
+			fi
+		else
+			if [ "${WPA_STATUS}" = "SCANNING" ] || [ "${WPA_STATUS}" = "DISCONNECTED" ]; then
+				echo "Status change from authenticating to ${WPA_STATUS}, password is incorrect"
+				break
+			fi
 		fi
-		connect_num=$((connect_num+1));
+
+		connect_num=$((connect_num + 1));
 		if [ $connect_num -gt $connect_sleep_num ]; then
-			sleep 1
+			printf '.'
+			sleep $CHECK_INTERVAL
 		fi
 	done
 
 	kill_apps wpa_supplicant
-	echo ">>>wifi_setup failed, password may be incorrect or ap not in range<<<"
-	exit 1
+	echo "wifi_setup failed"
+	exit $ERRNO_PASSWORD_WRONG
 }
 
-# stat wpa_cli  server to listen evernt
 wpa_cli_sta_action()
 {
+# stat wpa_cli  server to listen evernt
 	wpa_cli -i${DEVICE} -a${STA_ACTION} -B
 }
 
 wpa_cli_sta()
 {
-	if [ -x $STA_ACTION ]; then
+	if [ $BG_CHECK_STA_STATUS -eq 1 ] && [ -x $STA_ACTION ]; then
 		wpa_cli_sta_action
 	else
 		wpa_cli_sta_check_status
 	fi
 }
+
+################  WPS ( PBC and PinCode ) #####################
+
+generate_wpa_wps_conf()
+{
+	if [ -f ${CONFIG} ]; then
+		## Use the saved config, Do not need generate new config except failed to connect.
+		return
+	fi
+
+	mkdir -p $DIR_CONFIG
+
+	echo "ctrl_interface=${CTRL_INTERFACE}" > ${CONFIG}
+	echo "update_config=${UPDATE_CONFIG_VALUE}" >> ${CONFIG}
+}
+
+start_wpa_supplicant_sta_wps()
+{
+	local local_wps_method=$1
+	local local_wps_bssid=$2
+	local local_wps_pincode=$3
+
+	if [ "${local_wps_method}" != "wps_pbc" ] && [ "${local_wps_method}" != "wps_pin" ]; then
+		echo "Unknown WPS method, should select [wps_pbc|wps_pin]"
+		exit $ERRNO_PARAM
+	fi
+
+	is_bssid=$(echo "${local_wps_bssid}" | grep -E "[0-9a-f]{2}([-:])[0-9a-f]{2}(\\1[0-9a-f]{2}){4}$")
+	if [ "${local_wps_bssid}" != "any" ] && [ ! "${is_bssid}" ]; then
+		echo "Invalid param, should input [<BSSID>|any]"
+		exit $ERRNO_PARAM
+	fi
+
+	if [ "${local_wps_pincode}" -eq 0 ]; then
+		local_wps_pincode=""
+	else
+		local len_pincode=${#local_wps_pincode}
+		if [ $len_pincode -gt 8 ] || [ $len_pincode -lt 4 ]; then
+			echo "Invalid WPS Pincode length ${local_wps_pincode} (expected: 4..8)"
+			exit $ERRNO_PARAM
+		fi
+	fi
+
+	echo "WPS-BSSID=${local_wps_bssid}, method=${local_wps_method}"
+
+	ifconfig ${DEVICE} up
+	CMD="wpa_supplicant -i${DEVICE} -D${driver} -c${CONFIG} -f${WPA_LOG} -B ${WPA_EXT_PARAM}"
+	echo "CMD=${CMD}"
+	$CMD
+
+	ret_cmd=$(wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} "${local_wps_method}" "${local_wps_bssid}" ${local_wps_pincode})
+	if [ "${local_wps_method}" = "wps_pin" ]; then
+		echo "Pincode[${ret_cmd}]"
+	fi
+
+	if [ $STA_AUTOCONNECTION -eq 1 ]; then
+		wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} sta_autoconnect 1
+	fi
+}
 ################  AP #####################
 
-generate_hostapd_conf()
+channel_to_frequency()
 {
+	local local_channel=$1
+	## return gobal value sta_frequency and sta_channel
+
+	if [ "${local_channel}" ]; then
+		if [ "${local_channel}" -gt 196 ] || [ "${local_channel}" -lt 1 ]; then
+			echo "Your Channel is wrong (1 ~ 196), using Channel ${DEFAULT_CHANNEL} by default."
+			local_channel=$DEFAULT_CHANNEL
+		fi
+	else
+		echo "Using Channel ${DEFAULT_CHANNEL} by default."
+		local_channel=$DEFAULT_CHANNEL
+	fi
+
+	sta_channel=$local_channel
+	if [ "$local_channel" -gt 14 ]; then
+		sta_frequency=$((local_channel*5 + 5000))
+	else
+		sta_frequency=$((local_channel*5 + 2407))
+	fi
+}
+
+generate_wpa_ap_conf()
+{
+	local	local_ssid=$1
+	local	local_passwd=$2
+	local	local_encrypt=$3
+	local	local_frequency=$4
+
 	if [ -f ${HOST_CONFIG} ]; then
 		## Use the saved config, Do not need generate new config except failed to connect.
-		return ;
+		return
 	fi
+
 	mkdir -p $DIR_CONFIG
-	#generate hostapd.conf
-	echo "interface=wlan0" > ${HOST_CONFIG}
-	echo "ctrl_interface=${HOSTAP_CTRL_INTERFACE}" >> ${HOST_CONFIG}
-	echo "beacon_int=100" >> ${HOST_CONFIG}
-#	echo "dtim_period=1" >> ${HOST_CONFIG}
-	echo "preamble=0" >> ${HOST_CONFIG}
-	#WPS support
-	echo "wps_state=2" >> ${HOST_CONFIG}
-	echo "eap_server=1" >> ${HOST_CONFIG}
-	echo "ap_pin=12345670" >> ${HOST_CONFIG}
-	echo "config_methods=label display push_button keypad ethernet" >> ${HOST_CONFIG}
-	echo "wps_pin_requests=/var/run/hostapd.pin-req" >> ${HOST_CONFIG}
-	#general
-	echo "ssid=${ssid}" >> ${HOST_CONFIG}
-	echo "max_num_sta=${HOST_MAX_STA}" >> ${HOST_CONFIG}
-	echo "channel=${channel}" >> ${HOST_CONFIG}
-
-	case ${encryption} in
+	echo "AP-SSID=${local_ssid}, Encryption=${local_encrypt}, Frequence=${local_frequency}"
+
+	echo "ctrl_interface=${CTRL_INTERFACE}" > ${HOST_CONFIG}
+	echo "ap_scan=2" >> ${HOST_CONFIG}
+
+	## This for WiFi suspend/resume
+	if [ $WOWLAN -eq 1 ]; then
+		echo "wowlan_triggers=any" >> ${HOST_CONFIG}
+	fi
+
+	{
+		echo "network={"
+		echo "ssid=\"${local_ssid}\""
+		echo "mode=2"
+		echo "frequency=${local_frequency}"
+	} >> ${HOST_CONFIG}
+
+	if [ "${local_encrypt}" != "open" ]; then
+		local len_passwd=${#local_passwd}
+		local local_passwd_value=""
+
+		if [ "$len_passwd" -eq 64 ]; then
+			echo "passphrase length is 64, using hex type"
+			local_passwd_value="${local_passwd}"
+		elif [ "$len_passwd" -ge 8 ] && [ "$len_passwd" -le 63 ]; then
+			local_passwd_value="\"${local_passwd}\""
+		else
+			echo "Invalid passphrase length ${len_passwd} (expected: 8..63 or 64 hex)"
+			rm -rf ${HOST_CONFIG}
+			exit $ERRNO_PARAM
+		fi
+	fi
+
+	case ${local_encrypt} in
 		open)
+			echo "key_mgmt=NONE" >> ${HOST_CONFIG}
+			;;
+		wpa2)
+			echo "key_mgmt=WPA-PSK" >> ${HOST_CONFIG}
+			echo "proto=WPA2" >> ${HOST_CONFIG}
+			echo "pairwise=CCMP" >> ${HOST_CONFIG}
+			echo "psk=${local_passwd_value}" >> ${HOST_CONFIG}
 			;;
 		wpa)
-			echo "wpa=2" >> ${HOST_CONFIG}
-			echo "wpa_pairwise=CCMP" >> ${HOST_CONFIG}
-			echo "wpa_passphrase=${passwd}" >> ${HOST_CONFIG}
-			echo "wpa_key_mgmt=WPA-PSK" >> ${HOST_CONFIG}
+			echo "key_mgmt=WPA-PSK" >> ${HOST_CONFIG}
+			echo "proto=WPA" >> ${HOST_CONFIG}
+			echo "pairwise=TKIP" >> ${HOST_CONFIG}
+			echo "psk=${local_passwd_value}" >> ${HOST_CONFIG}
+			;;
+		wpawpa2)
+			echo "key_mgmt=WPA-PSK" >> ${HOST_CONFIG}
+			echo "proto=WPA2" >> ${HOST_CONFIG}
+			echo "pairwise=CCMP TKIP" >> ${HOST_CONFIG}
+			echo "group=TKIP" >> ${HOST_CONFIG}
+			echo "psk=${local_passwd_value}" >> ${HOST_CONFIG}
 			;;
 		*)
+			echo "Please select AP encryption [open|wpa2|wpa|wpawpa2]"
+			rm -rf ${HOST_CONFIG}
+			exit $ERRNO_PARAM
 			;;
 	esac
 
-	#Realtek rtl8189es
-	if [ ${MODULE_ID} == "RTL8189ES" ]; then
-		echo "driver=nl80211" >> ${HOST_CONFIG}
-		echo "hw_mode=g" >> ${HOST_CONFIG}
-		echo "ieee80211n=1" >> ${HOST_CONFIG}
-		echo "ht_capab=[SHORT-GI-20][SHORT-GI-40][HT40]" >> ${HOST_CONFIG}
-		#echo "wme_enabled=1" >> ${HOST_CONFIG}
-		#echo "wpa_group_rekey=86400" >> ${HOST_CONFIG}
-	fi
+	echo "}" >> ${HOST_CONFIG}
 }
 
-start_hostapd_ap()
+start_dhcp_server()
+{
+## Start DHCP Server ##
+	mkdir -p /var/lib/misc
+	mkdir -p /etc/dnsmasq.d
+	dnsmasq -i${DEVICE_AP} --no-daemon --no-resolv --no-poll --dhcp-range=${DHCP_IP_START},${DHCP_IP_END},1h &
+}
+
+start_wpa_supplicant_ap()
 {
 ## Setup interface and set IP,gateway##
-	ifconfig ${DEVICE} up
-	ifconfig ${DEVICE} ${LOCAL_IP}
-	route add default netmask ${LOCAL_NETMASK} gw ${LOCAL_IP}
-## Start Hostapd ##
-	CMD="hostapd ${HOST_CONFIG} -B"
+	ifconfig ${DEVICE_AP} "${LOCAL_IP}" up
+	route add default netmask ${LOCAL_NETMASK} gw "${LOCAL_IP}"
+	CMD="wpa_supplicant -i${DEVICE_AP} -D${driver} -c${HOST_CONFIG} -f${WPA_LOG} -B ${WPA_EXT_PARAM}"
 	echo "CMD=${CMD}"
 	$CMD
 
-## Start DHCP Server ##
-	mkdir -p /var/lib/misc
-	dnsmasq --no-daemon --no-resolv --no-poll --dhcp-range=${DHCP_IP_START},${DHCP_IP_END},1h &
+	start_dhcp_server
 	echo "HostAP Setup Finished."
 }
 
+################  Concurrent #####################
+
+start_wpa_supplicant_concurrent()
+{
+	ifconfig ${DEVICE} up
+	ifconfig ${DEVICE_AP} "${LOCAL_IP}" up
+	route add default netmask ${LOCAL_NETMASK} gw "${LOCAL_IP}"
+	CMD="wpa_supplicant -i${DEVICE} -D${driver} -c${CONFIG} -N -i${DEVICE_AP} -D${driver} -c${HOST_CONFIG} -f${WPA_LOG} -B ${WPA_EXT_PARAM}"
+	echo "CMD=${CMD}"
+	$CMD
+
+	wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} select_network 0
+	if [ $STA_AUTOCONNECTION -eq 1 ]; then
+		wpa_cli -i${DEVICE} -p${CTRL_INTERFACE} sta_autoconnect 1
+	fi
+	start_dhcp_server
+	echo "Concurrent Setup Finished."
+}
+
+start_bcmdhd_concurrent_ap()
+{
+	local	local_ssid=$1
+	local	local_passwd=$2
+	local	local_encrypt=$3
+	local	local_channel=$4
+
+	if [ "$(which dhd_helper)" = "" ]; then
+		echo "Not Found dhd_helper tools"
+		exit $ERRNO_ENV
+	fi
+
+	case ${local_encrypt} in
+		open)
+			CMD="dhd_helper iface ${DEVICE} ssid "${local_ssid}" hidden n chan ${local_channel} amode open emode none "
+			;;
+		wpa)
+			local len_passwd=${#local_passwd}
+			if [ "$len_passwd" -lt 8 ] || [ "$len_passwd" -gt 64 ]; then
+				echo "Invalid passphrase length ${len_passwd} (expected: 8..63 or 64 hex)"
+				exit $ERRNO_PARAM
+			fi
+			CMD="dhd_helper iface ${DEVICE} ssid "${local_ssid}" chan ${local_channel} amode wpapsk emode tkip key "${local_passwd}" "
+			;;
+		*)
+			echo "Please select AP encryption [open|wpa]"
+			exit $ERRNO_PARAM
+			;;
+	esac
+
+	ifconfig ${DEVICE} up
+	echo "CMD=${CMD}"
+	$CMD
+
+	## Change AP interface to wl0.1 when use broadcom Wifi
+	DEVICE_AP=wl0.1
+	ifconfig ${DEVICE_AP} "${LOCAL_IP}" up
+	route add default netmask ${LOCAL_NETMASK} gw "${LOCAL_IP}"
+	start_dhcp_server
+}
 ################  WiFi Direct #####################
 
 generate_wpa_p2p_conf()
 {
+	local local_ssid=$1
+
 	if [ -f ${P2P_CONFIG} ]; then
 		## Use the saved config, Do not need generate new config except failed to connect.
-		return ;
+		return
 	fi
 	mkdir -p $DIR_CONFIG
-	device_name=${ssid}
-	if [ "${device_name}" == "" ]; then
-		postmac=`ifconfig ${DEVICE} | grep HWaddr | awk '{print $NF}' | sed 's/://g' | cut -c 6- | tr 'A-Z' 'a-z'`
-		device_name=amba-${postmac}
+	local local_device_name=${local_ssid}
+	if [ "${local_device_name}" = "" ]; then
+		local_postmac=$(ifconfig ${DEVICE_P2P} | grep HWaddr | awk '{print $NF}' | sed 's/://g' | cut -c 6- | tr '[:upper:]' '[:lower:]')
+		local_device_name=amba-${local_postmac}
 	fi
 
-	echo "device_name=${device_name}" > ${P2P_CONFIG}
-	echo "ctrl_interface=${CTRL_INTERFACE}" >> ${P2P_CONFIG}
-	echo "device_type=10-0050F204-5" >> ${P2P_CONFIG}
-	echo "config_methods=display push_button keypad" >> ${P2P_CONFIG}
+	echo "P2P Device Name=${local_device_name}"
+	echo "device_name=${local_device_name}" > ${P2P_CONFIG}
+	{
+		echo "ctrl_interface=${CTRL_INTERFACE}"
+		echo "device_type=10-0050F204-5"
+		echo "config_methods=display push_button keypad"
+	} >> ${P2P_CONFIG}
 }
 
 start_wpa_supplicant_p2p()
 {
-	CMD="wpa_supplicant -i${DEVICE} -c${P2P_CONFIG} -D${driver} -f${WPA_LOG} -B"
+	CMD="wpa_supplicant -i${DEVICE_P2P} -c${P2P_CONFIG} -D${driver} -f${WPA_LOG} -B ${WPA_EXT_PARAM}"
 	echo "CMD=${CMD}"
 	$CMD
+
 	if [ -x ${P2P_ACTION} ]; then
-		wpa_cli -p${CTRL_INTERFACE} -i${DEVICE} -a${P2P_ACTION}
+		wpa_cli -p${CTRL_INTERFACE} -i${DEVICE_P2P} -a${P2P_ACTION}
 	else
 		echo "Not exist ${P2P_ACTION} file"
 	fi
@@ -456,52 +912,100 @@ start_wpa_supplicant_p2p()
 	wpa_cli -p${CTRL_INTERFACE} p2p_find
 }
 
-stop_wifi_app()
-{
-	kill_apps NetworkManager wpa_supplicant hostapd dnsmasq udhcpc
-}
-
 clear_config()
 {
 	rm -rf ${CONFIG}
 	rm -rf ${HOST_CONFIG}
 	rm -rf ${P2P_CONFIG}
 	rm -rf ${IP_CONFIG}
+
+	rm -rf ${WPA_LOG}
 }
+
 ################   Main  ###################
 
-## Usage
-if [ $# -lt 1 ]; then
+## Show usage when no parameter
+if [ $# -eq 0 ]; then
 	usages
-	exit 1
 fi
 
-## Stop WiFi
-if [ $# -eq 1 ] && [ ${mode} == "stop" ]; then
-	stop_wifi_app
-	ifconfig ${DEVICE} down
-	exit 0
+## Check driver of wext or nl80211
+if [ $# -gt 1 ]; then
+	check_driver
 fi
 
-## Start WiFi
+## Setup new config before clear old one
 if [ $# -gt 2 ]; then
-	check_param
 	clear_config
 fi
 
-if [ ${mode} == "sta" ]; then
-	generate_wpa_conf
-	start_wpa_supplicant
-	wpa_cli_sta
-elif [ ${mode} == "ap" ]; then
-	freq=$(($channel*5 +2407))
-	generate_hostapd_conf
-	start_hostapd_ap
-elif [ ${mode} == "p2p" ]; then
-	generate_wpa_p2p_conf
-	start_wpa_supplicant_p2p
-else
-	usage
-fi
-
-########################################
\ No newline at end of file
+echo "Version: ${WIFI_SETUP_VERSION}"
+check_wpa_supplicant
+get_device_id
+
+case ${mode} in
+	"stop")
+		stop_wifi_app
+		;;
+	sta)
+		sta_ssid=$3
+		sta_passwd=$4
+		sta_encrypt=$5
+		check_iface "${DEVICE}"
+		generate_wpa_sta_conf "${sta_ssid}" "${sta_passwd}" "${sta_encrypt}"
+		start_wpa_supplicant_sta
+		wpa_cli_sta
+		;;
+	wps)
+		wps_bssid=$3
+		wps_pincode=$4
+		wps_method=$5
+		check_iface "${DEVICE}"
+		generate_wpa_wps_conf
+		start_wpa_supplicant_sta_wps "${wps_method}" "${wps_bssid}" "${wps_pincode}"
+		wpa_cli_sta
+		;;
+	ap)
+		ap_ssid=$3
+		ap_passwd=$4
+		ap_encrypt=$5
+		ap_channel=$6
+		check_iface "${DEVICE_AP}"
+		channel_to_frequency "${ap_channel}"
+		generate_wpa_ap_conf "${ap_ssid}" "${ap_passwd}" "${ap_encrypt}" "${sta_frequency}"
+		start_wpa_supplicant_ap
+		;;
+	con)
+		sta_ssid=$3
+		sta_passwd=$4
+		sta_encrypt=$5
+		ap_ssid=$6
+		ap_passwd=$7
+		ap_encrypt=$8
+		check_iface "${DEVICE}"
+		check_iface "${DEVICE_AP}"
+		if [ "${MODULE_ID}" = "BCMDHD" ]; then
+			## In Broadcom Wifi, AP channel will swith to the same channel as STA.
+			generate_wpa_sta_conf "${sta_ssid}" "${sta_passwd}" "${sta_encrypt}"
+			start_bcmdhd_concurrent_ap "${ap_ssid}" "${ap_passwd}" "${ap_encrypt}" ${sta_channel}
+			start_wpa_supplicant_sta
+			wpa_cli_sta
+		else
+			## AP Use the same Channel as STA
+			generate_wpa_sta_conf "${sta_ssid}" "${sta_passwd}" "${sta_encrypt}"
+			generate_wpa_ap_conf "${ap_ssid}" "${ap_passwd}" "${ap_encrypt}" ${sta_frequency}
+			start_wpa_supplicant_concurrent
+			wpa_cli_sta
+		fi
+		;;
+	p2p)
+		ap_ssid=$3
+		check_iface "${DEVICE_P2P}"
+		generate_wpa_p2p_conf "${ap_ssid}"
+		start_wpa_supplicant_p2p
+		;;
+	*)
+		echo "Please Select Mode [sta|ap|wps|con|p2p] or stop"
+		exit $ERRNO_PARAM
+esac
+########################################
diff --git a/dng_tool/AmbaConfig b/dng_tool/AmbaConfig
index 43908e2..095add8 100644
--- a/dng_tool/AmbaConfig
+++ b/dng_tool/AmbaConfig
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/01/10 - [Louis Sun] Create
 ##
-## Copyright (C) 2004-2014, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 
diff --git a/dng_tool/dng_format.h b/dng_tool/dng_format.h
index 11712e9..a2420f9 100644
--- a/dng_tool/dng_format.h
+++ b/dng_tool/dng_format.h
@@ -1,3 +1,34 @@
+/* dng_format.h
+ *
+ * History:
+ *	2014/01/10 - [Louis Sun] create it
+ *
+ * Copyright (c) 2016 Ambarella, Inc.
+ *
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #ifndef __DNG_FORMAT_H__
 #define __DNG_FORMAT_H__
 
diff --git a/dng_tool/make.inc b/dng_tool/make.inc
index 40a13b5..f7a4fe5 100644
--- a/dng_tool/make.inc
+++ b/dng_tool/make.inc
@@ -4,12 +4,29 @@
 ## History:
 ##    2013/4/25 - [Louis Sun] Created file
 ##
-## Copyright (C) 2012-2016, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 ifeq ($(BUILD_AMBAREALLA_APP_UTILITY_DNG_TOOL), y)
diff --git a/dng_tool/raw2dng.c b/dng_tool/raw2dng.c
index c174978..95e4c5c 100644
--- a/dng_tool/raw2dng.c
+++ b/dng_tool/raw2dng.c
@@ -13,14 +13,33 @@
  *	2014/01/10 - [Louis Sun] create it
  *
  *
- * Copyright (C) 2007-2016, Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
+ *
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
  *
  */
+
 #include <stdio.h>
 #include <string.h>
 #include <stdlib.h>
diff --git a/dsp_tool/AmbaConfig b/dsp_tool/AmbaConfig
index 264fc73..e1c717f 100644
--- a/dsp_tool/AmbaConfig
+++ b/dsp_tool/AmbaConfig
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/08/04 - [Jian Tang] Create
 ##
-## Copyright (C) 2012-2016, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 
@@ -33,6 +50,12 @@ config BUILD_AMBARELLA_APP_UTILITY_DSPLOG
 	help
 		Build DSP log capture / parse utility
 
+config BUILD_AMBARELLA_APP_UTILITY_FB_DSPFW_GEN
+	bool "Build generate fastboot ucode fw utility"
+	default n
+	help
+		Build generate fastboot ucode fw utility, used to replace ucode in fastboot.
+
 config BUILD_AMBARELLA_APP_UTILITY_GEN_FASTBOOT_UCODE
 	depends on (CONFIG_ARCH_S2L)
 	bool "Build gen fast boot ucode utility"
diff --git a/dsp_tool/arch_s2l/dsplog_utils.c b/dsp_tool/arch_s2l/dsplog_utils.c
index 78d90f3..4246518 100644
--- a/dsp_tool/arch_s2l/dsplog_utils.c
+++ b/dsp_tool/arch_s2l/dsplog_utils.c
@@ -1,18 +1,36 @@
 /*
- * dsplog_utils.c   (for S2L )
+ * dsplog_utils.c (for S2L)
  *
  * History:
  *	2014/09/10 - [Jian Tang] created file
  *
- * Copyright (C) 2007-2016, Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
  *
  */
 
+
 #include "../dsplog_cap.h"
 
 #define DSPLOG_MEM_PHY_ADDR  0x80000
@@ -28,6 +46,19 @@
 #define UCODE_MDXF_OFFSET   0x600000
 #define UCODE_MEMD_OFFSET   0x300000
 
+typedef struct idsp_printf_s {
+	u32	seq_num;		/**< Sequence number */
+	u8	dsp_core;
+	u8	thread_id;
+	u16	reserved;
+	u32	format_addr;	/**< Address (offset) to find '%s' arg */
+	u32	arg1;		/**< 1st var. arg */
+	u32	arg2;		/**< 2nd var. arg */
+	u32	arg3;		/**< 3rd var. arg */
+	u32	arg4;		/**< 4th var. arg */
+	u32	arg5;		/**< 5th var. arg */
+} idsp_printf_t;
+
 static int do_dsp_setup_log(int iav_fd, u8 module, u8 level, u8 thread)
 {
 	if (ioctl(iav_fd, IAV_IOC_SET_DSP_LOG,
@@ -117,7 +148,7 @@ int get_thread_bitmask(char * bitmask_str)
 int dsplog_setup(int iav_fd, dsplog_debug_obj *debug)
 {
 	int i;
-	for (i =0 ; i< debug->module_id; i++) {
+	for (i = 0 ; i < debug->module_id; i++) {
 		if (do_dsp_setup_log(iav_fd, debug->modules[i], debug->debug_level,
 			debug->thread_bitmask) < 0) {
 			printf("dsplog setup failed \n");
@@ -139,3 +170,29 @@ void extra_usage(char *itself)
 	printf("  #%s -i /tmp/dsplog1.bin -f /tmp/dsplog.txt \n\n", itself);
 }
 
+int print_log(idsp_printf_base_t *arg, u8 * pcode,
+	u8 * pmdxf, u8 * pmemd,  FILE *  write_file,
+	dsplog_memory_block *dsplog_mem)
+{
+	char *fmt;
+	u8 *ptr;
+	u32 offset;
+	idsp_printf_t *record = (idsp_printf_t *)arg;
+
+	if (record->format_addr == 0)
+		return -1;
+	switch (record->dsp_core) {
+	case 0: ptr = pcode; offset = dsplog_mem->core_offset; break;
+	case 1: ptr = pmdxf; offset = dsplog_mem->mdxf_offset; break;
+	case 2: ptr = pmemd; offset = dsplog_mem->memd_offset; break;
+	default:
+		fprintf(stderr, "dsp_core = %d\n", record->dsp_core);
+		return -1;
+	}
+	fmt = (char*)(ptr + (record->format_addr - offset));
+	fprintf(write_file, "[core:%d:%d] ", record->thread_id, record->seq_num);
+	fprintf(write_file, fmt, record->arg1, record->arg2,
+		record->arg3, record->arg4, record->arg5);
+	return 0;
+}
+
diff --git a/dsp_tool/arch_s2l/gen_fastboot_ucode.c b/dsp_tool/arch_s2l/gen_fastboot_ucode.c
index 9fb3b6b..4908626 100644
--- a/dsp_tool/arch_s2l/gen_fastboot_ucode.c
+++ b/dsp_tool/arch_s2l/gen_fastboot_ucode.c
@@ -1,34 +1,36 @@
 /**
-
+ * gen_fastboot_ucode.c (for S2L)
  *
  * History:
  *	2014/10/22 - [Tao Wu] created file
  *
- * Copyright (C) 2007-2016, Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
-
- * README:
- * 1: Replace idspcfg.bin on default_binary.bin
- * Prepare idsp_dump_bin_0.bin(idspcfg.bin)  and default_binary.bin on local directory
+ * Copyright (c) 2016 Ambarella, Inc.
+ *
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
  *
- * Input:
- * idsp_dump_bin_0.bin(idspcfg.bin) is generate by "test_ituner -D 0"
- * default_binary.bin is from ucode release
- * OutPut:
- * default_binary_out.bin is generated binary
-**************************************
- * 2: Add default_mctf.bin
- * Prepare idsp_dump_bin_100.bin on local directory
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
  *
- * Input:
- * idsp_dump_bin_100.bin : is generate by "test_ituner -D 100"
- * OutPut:
- * default_mctf.bin is generated binary
-**/
+ */
+
 
 #include <unistd.h>
 #include <sys/types.h>
diff --git a/dsp_tool/arch_s2l/make.inc b/dsp_tool/arch_s2l/make.inc
index 91d8181..28e1021 100644
--- a/dsp_tool/arch_s2l/make.inc
+++ b/dsp_tool/arch_s2l/make.inc
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/08/04 - [Jian Tang] Created file
 ##
-## Copyright (C) 2014-2018, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 
diff --git a/dsp_tool/dsplog_cap.c b/dsp_tool/dsplog_cap.c
index ab3e57f..59d3243 100644
--- a/dsp_tool/dsplog_cap.c
+++ b/dsp_tool/dsplog_cap.c
@@ -5,15 +5,33 @@
  *	2012/05/05 - [Jian Tang] created file
  * 	2013/09/26 - [Louis Sun] improve it to prevent data loss
  *
- * Copyright (C) 2012-2016, Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
  *
  */
 
+
 #include "dsplog_cap.h"
 
 static dsplog_memory_block dsplog_mem;
@@ -55,7 +73,6 @@ static dsplog_debug_obj dsplog_debug = {
 	.pinpong_filesize_limit = DEFAULT_PINPONG_FILE_SIZE,
 };
 
-
 static sem_t exit_main_sem;
 
 static struct option long_options[] = {
@@ -74,13 +91,14 @@ static struct option long_options[] = {
 	{"version",	NO_ARG,        0,   'w'},  // when file1 has reached the size, go to truncate and write file2, and when file2 reaches the size, go back to truncate and write to file1
 	{"verify",		HAS_ARG,          0,   'y'},  // when file1 has reached the size, go to truncate and write file2, and when file2 reaches the size, go back to truncate and write to file1
 	{"add",		NO_ARG,         0,    'a'},     //"Add or Set" operation to debug mask.  when specified, it's Add.   else it's set
+	{"caponly",		NO_ARG,         0,    's'},     //not set level and bitmask
 	{0, 0, 0, 0}
 };
 
-static const char *short_options = "b:m:l:r:o:i:td:cf:p:vwy:a";
+static const char *short_options = "b:m:l:r:o:i:td:cf:p:vwy:as";
 
 static const struct hint_s hint[] = {
-	{"string", "\tcommon, vcap, vout, encoder, decoder,  idsp, memd, api, perf, all"},
+	{"string", "\tvcap, vout, encoder, decoder, idsp, api, all"},
 	{"0~4", "\tdebug level 0: OFF, 1: FORCE, 2: NORMAL, 3: VERBOSE, 4: DEBUG."},
 	{"0~255", "\tDSP thread bitmask, decimal or hex (start with 0x), set bit to 0 to enable"},
 	{"filename", "\tfilename of dsplog binary to capture(output)"},
@@ -95,6 +113,7 @@ static const struct hint_s hint[] = {
 	{"", "\t\tshow dsplog_cap tool version"},
 	{"filename", "\tuse dsp log mem buffer to verify captured log file (DSP should have halted)"},
 	{"",  "\t\tif specified, current bitmask is added to, but not set.  (else it's set by default)"},
+	{"",  "\t\tif specified, capture only, do not set debug level and bitmask"},
 };
 
 static void show_quit(void)
@@ -108,20 +127,22 @@ static void usage(void)
 	int i;
 	char *itself = "dsplog_cap";
 	printf("\n\n############################################################\n");
-	printf("%s ver %s,  it supports A5s / A7L / iOne / S2 / S2L.  usage:\n\n",
+	printf("%s ver %s,  it supports A5s / A7L / iOne / S2 / S2L / S3L / S5.  usage:\n\n",
 		itself, DSPLOG_VERSION_STRING);
 	for (i = 0; i < sizeof(long_options) / sizeof(long_options[0]) - 1; i++) {
-		if (isalpha(long_options[i].val))
+		if (isalpha(long_options[i].val)) {
 			printf("-%c ", long_options[i].val);
-		else
+		} else {
 			printf("   ");
+		}
 		printf("--%s", long_options[i].name);
-		if (hint[i].arg[0] != 0)
+		if (hint[i].arg[0] != 0) {
 			printf(" [%s]", hint[i].arg);
+		}
 		printf("\t%s\n", hint[i].str);
 	}
 	printf("\n");
-       extra_usage(itself);
+	extra_usage(itself);
 }
 
 static int get_ucode_version(char * buffer, int max_len)
@@ -161,15 +182,16 @@ static int init_param(int argc, char **argv)
 	int thread_mask;
 
 	opterr = 0;
-	while ((ch = getopt_long(argc, argv, short_options, long_options, &option_index)) != -1) {
+	while ((ch = getopt_long(argc, argv, short_options,
+					long_options, &option_index)) != -1) {
 		switch (ch) {
 		case 'm':
-			if ((module_id=get_dsp_module_id(optarg)) < 0) {
-				fprintf(stderr,"invalid dsp module id \n");
+			if ((module_id = get_dsp_module_id(optarg)) < 0) {
+				fprintf(stderr,"Invalid dsp module id.\n");
 				return -1;
 			} else {
-				if (dsplog_debug.module_id >= 8) {
-					fprintf(stderr, "too many modules to debug \n");
+				if (dsplog_debug.module_id >= DSP_MODULE_TOTAL_NUM) {
+					fprintf(stderr, "Too many modules to debug.\n");
 					return -1;
 				}
 				dsplog_debug.modules[dsplog_debug.module_id] = module_id;
@@ -184,14 +206,14 @@ static int init_param(int argc, char **argv)
 				dsplog_debug.debug_level = value;
 				dsplog_debug.debug_level_flag = 1;
 			} else {
-				fprintf(stderr, "invalid debug level \n");
+				fprintf(stderr, "Invalid debug level.\n");
 				return -1;
 			}
 			break;
 
 		case 'r':
 			if ((thread_mask = get_thread_bitmask(optarg)) < 0) {
-				fprintf(stderr, "invalid thread bit mask \n");
+				fprintf(stderr, "Invalid thread bit mask.\n");
 				return -1;
 			} else {
 				dsplog_debug.thread_bitmask = thread_mask;
@@ -205,7 +227,7 @@ static int init_param(int argc, char **argv)
 				dsplog_debug.output[STR_LEN - 1] = '\0';
 				dsplog_debug.output_file_flag =1;
 			} else {
-				fprintf(stderr, "invalid output DSP log file name \n");
+				fprintf(stderr, "Invalid parse_out DSP log file name.\n");
 				return -1;
 			}
 			break;
@@ -216,7 +238,7 @@ static int init_param(int argc, char **argv)
 				dsplog_debug.parse_in[STR_LEN - 1] = '\0';
 				dsplog_debug.input_file_flag =1;
 			} else {
-				fprintf(stderr, "invalid parse_in DSP log file name \n");
+				fprintf(stderr, "Invalid parse_in DSP log file name.\n");
 				return -1;
 			}
 			break;
@@ -231,14 +253,14 @@ static int init_param(int argc, char **argv)
 			dsplog_debug.debug_bitmask[dsplog_debug.module_id_last] = bitmask;
 			break;
 
-			case 'd':
+		case 'd':
 			strncpy(dsplog_debug.ucode, optarg, STR_LEN);
 			dsplog_debug.ucode[STR_LEN - 1] = '\0';
 			break;
 
 		case 'c':
 			dsplog_debug.capture_current_flag = 1;
-		break;
+			break;
 
 		case 'f':
 			strncpy(dsplog_debug.parse_out, optarg, STR_LEN);
@@ -250,8 +272,8 @@ static int init_param(int argc, char **argv)
 			dsplog_debug.pinpong_filesize_limit = atoi(optarg);
 			if (dsplog_debug.pinpong_filesize_limit < (2 << 20)) {
 				dsplog_debug.pinpong_filesize_limit = DEFAULT_PINPONG_FILE_SIZE;
-				fprintf(stderr, "Use pinpong buffer with default size %d\n",
-					DEFAULT_PINPONG_FILE_SIZE);
+				fprintf(stderr, "Use pinpong buffer with default size %d MB.\n",
+					(DEFAULT_PINPONG_FILE_SIZE >> 20));
 			}
 			break;
 
@@ -272,12 +294,16 @@ static int init_param(int argc, char **argv)
 			dsplog_debug.operation_add[dsplog_debug.module_id_last] = 1;
 			break;
 
+		case 's':
+			dsplog_debug.capture_only_flag = 1;
+			break;
+
 		default:
 			break;
 		}
 	}
 
-      //check the options
+	//check the options
 	if (dsplog_debug.capture_current_flag ||
 		dsplog_debug.show_ucode_flag ||
 		dsplog_debug.show_version_flag ||
@@ -287,9 +313,10 @@ static int init_param(int argc, char **argv)
 
 	if ((dsplog_debug.input_file_flag) && (dsplog_debug.output_file_flag)) {
 		fprintf(stderr, "Cannot enable dsplog capture (output) and dsplog "
-			"parse (parse_in) at same time! \n");
+			"parse (parse_in) at same time!\n");
 		return -1;
-	} else if ((!dsplog_debug.input_file_flag) && (!dsplog_debug.output_file_flag)) {
+	} else if ((!dsplog_debug.input_file_flag) &&
+			(!dsplog_debug.output_file_flag)) {
 		fprintf(stderr,"Please specify cmd to either capture or parse!\n");
 		return -1;
 	}
@@ -363,13 +390,14 @@ int dsplog_get_transfer_fd(int method, char * output_filename,  int dsplog_port)
 		if (dsplog_debug.transfer_fd >=0) {
 			return dsplog_debug.transfer_fd;
 		}
-		if ((transfer_fd = amba_transfer_open(output_filename, method, dsplog_port)) < 0) {
-			fprintf(stderr, "create file for transfer failed %s \n", output_filename);
+		if ((transfer_fd = amba_transfer_open(output_filename,
+						method, dsplog_port)) < 0) {
+			fprintf(stderr, "Create file for transfer failed %s.\n",
+				output_filename);
 			return -1;
 		}
 		dsplog_debug.transfer_fd = transfer_fd;
 		dsplog_debug.transfer_method = method;
-		return transfer_fd;
 	} else {
 		if (dsplog_debug.transfer_fd >=0) {
 			//now it's pinpong mode.
@@ -390,7 +418,8 @@ int dsplog_get_transfer_fd(int method, char * output_filename,  int dsplog_port)
 			sprintf(filename, "%s.2", output_filename);
 		}
 
-		if ((transfer_fd = amba_transfer_open(filename, method, dsplog_port)) < 0) {
+		if ((transfer_fd = amba_transfer_open(filename,
+							method, dsplog_port)) < 0) {
 			fprintf(stderr, "create file for transfer failed %s \n", filename);
 			return -1;
 		} else {
@@ -400,8 +429,8 @@ int dsplog_get_transfer_fd(int method, char * output_filename,  int dsplog_port)
 
 		//reset to new file with size
 		dsplog_debug.pinpong_filesize_now = 0;
-		return transfer_fd;
 	}
+	return transfer_fd;
 }
 
 
@@ -426,7 +455,7 @@ int dsplog_capture(int dsplog_drv_fd, char * log_buffer,
 	}
 
 	while (1) {
-		transfer_fd = dsplog_get_transfer_fd(method,  output_filename, dsplog_port);
+		transfer_fd = dsplog_get_transfer_fd(method, output_filename, dsplog_port);
 		if (!transfer_fd) {
 			fprintf(stderr, "dsplog_get_transfer_fd failed for %s \n ", output_filename);
 			return -1;
@@ -472,7 +501,7 @@ int dsplog_capture(int dsplog_drv_fd, char * log_buffer,
 int dsplog_capture_stop(int dsplog_drv_fd)
 {
 	//start capture
-	if (ioctl(dsplog_drv_fd,  AMBA_IOC_DSPLOG_STOP_CAPTURE ) < 0) {
+	if (ioctl(dsplog_drv_fd, AMBA_IOC_DSPLOG_STOP_CAPTURE) < 0) {
 		perror("AMBA_IOC_DSPLOG_STOP_CAPUTRE");
 		return -1;
 	} else {
@@ -505,7 +534,7 @@ u8 *mmap_ucode_bin(char *dir, char *name)
 		}
 		sprintf(filename, "%s/%s", dir, name);
 		if ((fp = fopen(filename, "r")) == NULL) {
-			fprintf(stderr, "cannot open ucode bin file [%s].\n", filename);
+			fprintf(stderr, "Cannot open ucode bin file [%s].\n", filename);
 			perror(filename);
 			mem = NULL;
 			break;
@@ -519,7 +548,7 @@ u8 *mmap_ucode_bin(char *dir, char *name)
 		fsize = ftell(fp);
 
 		mem = (u8 *)mmap(NULL, fsize, PROT_READ, MAP_SHARED, fileno(fp), 0);
-		if ((int)mem == -1) {
+		if ((intptr_t)mem == -1) {
 			perror("mmap");
 			mem = NULL;
 			break;
@@ -529,35 +558,13 @@ u8 *mmap_ucode_bin(char *dir, char *name)
 	return mem;
 }
 
-int print_log(idsp_printf_t *record, u8 * pcode,
-	u8 * pmdxf, u8 * pmemd,  FILE *  write_file)
-{
-	char *fmt;
-	u8 *ptr;
-	u32 offset;
-	if (record->format_addr == 0)
-		return -1;
-	switch (record->dsp_core) {
-	case 0: ptr = pcode; offset = dsplog_mem.core_offset; break;
-	case 1: ptr = pmdxf; offset = dsplog_mem.mdxf_offset; break;
-	case 2: ptr = pmemd; offset = dsplog_mem.memd_offset; break;
-	default:
-		fprintf(stderr, "dsp_core = %d\n", record->dsp_core);
-		return -1;
-	}
-	fmt = (char*)(ptr + (record->format_addr - offset));
-	fprintf(write_file, "[core:%d:%d] ", record->thread_id, record->seq_num);
-	fprintf(write_file, fmt, record->arg1, record->arg2,
-		record->arg3, record->arg4, record->arg5);
-	return 0;
-}
-
 static int dsplog_parse(char * log_filename, u8 * pcode,
 	u8 * pmdxf, u8 * pmemd,  char * output_text_file)
 {
 	FILE * parse_in = NULL;
 	FILE * parse_out = NULL;
-	idsp_printf_t record;
+	idsp_printf_base_t record;
+	u8 is_first_record = 1;
 	int first = 0;
 	int last = 0;
 	int total = 0;
@@ -565,13 +572,13 @@ static int dsplog_parse(char * log_filename, u8 * pcode,
 
 	do {
 		if ((parse_in = fopen(log_filename, "rb")) == NULL) {
-			fprintf(stderr, "cannot open dsplog file %s to parse, "
-				"please use '-i' option to specify \n", log_filename);
+			fprintf(stderr, "Cannot open dsplog file %s to parse, "
+				"please use '-i' option to specify.\n", log_filename);
 			break;
 		}
 		if ((parse_out = fopen(output_text_file, "wb")) == NULL) {
-			fprintf(stderr, "cannot open dsplog parse text file %s to write, "
-				"please use '-f' option to specify\n", output_text_file);
+			fprintf(stderr, "Cannot open dsplog parse text file %s to write, "
+				"please use '-f' option to specify.\n", output_text_file);
 			break;
 		}
 	} while (0);
@@ -588,17 +595,16 @@ static int dsplog_parse(char * log_filename, u8 * pcode,
 	fprintf(stderr, "You may press Ctrl+C to quit parsing.\n");
 	while (1) {
 		int rval;
-		if ((rval = fread(&record, sizeof(record), 1, parse_in)) != 1) {
+		if ((rval = fread(&record, IDSP_LOG_SIZE, 1, parse_in)) != 1) {
 			break;
 		}
-		if (first == 0) {
+		if (is_first_record) {
 			first = record.seq_num;
-			last = first - 1;
+			is_first_record = 0;
 		}
-		print_log(&record, pcode, pmdxf, pmemd, parse_out);
+		print_log(&record, pcode, pmdxf, pmemd, parse_out, &dsplog_mem);
 
 		total++;
-		++last;
 		last = record.seq_num;
 		if ((total % 1000) == 0) {
 			fprintf(stderr, "\r%d", total);
@@ -607,15 +613,15 @@ static int dsplog_parse(char * log_filename, u8 * pcode,
 	}
 
 	fprintf(stderr, "\r");
-	fprintf(stderr, "first record: %d\n", first);
-	fprintf(stderr, "total record: %d\n", total);
-	fprintf(stderr, "last record: %d\n", last);
+	fprintf(stderr, " first record : %d\n", first);
+	fprintf(stderr, "  last record : %d\n", last);
+	fprintf(stderr, "total records : %d\n", total);
 
 	loss = (last - first + 1) - total;
 	if ((loss < 0) && (loss + total == 0)) {
 		fprintf(stderr, "this is a LOGMEM ring buf direct dump\n");
 	} else {
-		fprintf(stderr, "lost records: %d\n", loss);
+		fprintf(stderr, " lost records : %d\n", loss);
 	}
 
 	if (parse_in) {
@@ -678,14 +684,15 @@ static void * dsp_log_capture_sig_thread_func(void * context)
 	case SIGTERM:
 		// send exit event to MainLoop
 		if (dsplog_debug.work_mode == 0) {
-			//  fprintf(stderr, "signal captured in sig thread!tell main process to exit\n");
+//			fprintf(stderr, "signal captured in sig thread!tell main process to exit\n");
 			sem_post(&exit_main_sem);
 		} else {
 			fprintf(stderr, "dsplog_cap: parse mode force quit. \n");
 			exit(1);
 		}
 		break;
-	default:         /* should normally not happen */
+	default:
+		/* should normally not happen */
 		fprintf(stderr, "\nUnexpected signal caught in sig thread%d\n",
 			sig_caught);
 		break;
@@ -698,11 +705,18 @@ static void * dsp_log_capture_sig_thread_func(void * context)
  * is not boot yet, so that amba_debug can dump the dsplog buffer to verify. */
 static int verify_dsplog_file(char * bin_file)
 {
+	int ret = 0;
+
+#ifdef CONFIG_DSP_LOG_START_IAVMEM
+
+	fprintf(stderr, "Cannot run VERIFY function due to the non-fixed DSP log buffer start address.\n");
+	ret = -1;
+
+#else
 	FILE * fp;
 	int length;
-	int ret = 0;
 	u32 last_record_in_logfile;
-	idsp_printf_t   record;
+	idsp_printf_base_t record;
 	char cmdstr[256];
 	u32 log_entry_max;
 	int log_lines_diff;
@@ -717,14 +731,14 @@ static int verify_dsplog_file(char * bin_file)
 
 		fseek(fp, 0, SEEK_END);
 		length = ftell(fp);
-		if (length % sizeof(idsp_printf_t)) {
+		if (length % IDSP_LOG_SIZE) {
 			fprintf(stderr, "dsplog verify found file %s has size not multiple"
 				" of 32, should have data missing\n", bin_file);
 			ret = -1;
 			break;
 		}
-		fseek(fp, 0-sizeof(idsp_printf_t), SEEK_END);
-		if (fread(&record, 1, sizeof(idsp_printf_t), fp)!= sizeof(idsp_printf_t)) {
+		fseek(fp, 0-IDSP_LOG_SIZE, SEEK_END);
+		if (fread(&record, 1, IDSP_LOG_SIZE, fp) != IDSP_LOG_SIZE) {
 			fprintf(stderr, "dsplog verify read file error.\n");
 			ret = -1;
 			break;
@@ -748,13 +762,13 @@ static int verify_dsplog_file(char * bin_file)
 
 		fp = fopen("/tmp/.dsplogmem.bin", "r");
 		if (!fp) {
-			fprintf(stderr, "dsplog verify cannot open log mem file\n");
+			fprintf(stderr, "dsplog verify cannot open log mem file.\n");
 			ret = -1;
 			break;
 		}
 
 		log_entry_max = 0 ;
-		while(fread(&record, 1, sizeof(idsp_printf_t), fp)){
+		while (fread(&record, 1, IDSP_LOG_SIZE, fp)) {
 			if (record.seq_num > log_entry_max) {
 				log_entry_max = record.seq_num;
 			} else {
@@ -765,11 +779,11 @@ static int verify_dsplog_file(char * bin_file)
 		fp = NULL;
 		unlink("/tmp/.dsplogmem.bin");
 
-		fprintf(stderr, "log_entry_max = %d \n", log_entry_max);
+		fprintf(stderr, "log_entry_max = %d\n", log_entry_max);
 
 		log_lines_diff =  log_entry_max -  last_record_in_logfile;
 		if (last_record_in_logfile == log_entry_max) {
-			fprintf(stderr, "dsplog verify PERFECT! \n");
+			fprintf(stderr, "dsplog verify PERFECT!\n");
 		} else if (log_lines_diff < 10) {
 			fprintf(stderr, "dsplog verify result GOOD, only a few lines (%d)"
 				" of logs missing. \n", log_lines_diff );
@@ -783,6 +797,8 @@ static int verify_dsplog_file(char * bin_file)
 		fclose(fp);
 	}
 
+#endif
+
 	return ret;
 }
 
@@ -800,8 +816,7 @@ int main(int argc, char **argv)
 	dsplog_cap_t  log_cap;
 	int ret = 0;
 	int sem_created = 0;
-	//        fprintf(stderr, "dsplog main tid = %d \n", getpid());
-
+//	fprintf(stderr, "dsplog main tid = %d \n", getpid());
 
 #ifdef ENABLE_RT_SCHED
 	struct sched_param param;
@@ -821,7 +836,7 @@ int main(int argc, char **argv)
 		if (dsplog_debug.show_ucode_flag) {
 			char tmp_str[STR_LEN];
 			get_ucode_version(tmp_str, STR_LEN);
-			fprintf(stderr, "Current ucode version is %s \n", tmp_str);
+			fprintf(stderr, "Current ucode version is %s.\n", tmp_str);
 			ret = 0;
 			break;
 		}
@@ -832,7 +847,7 @@ int main(int argc, char **argv)
 		}
 
 		if (dsplog_debug.show_version_flag) {
-			fprintf(stderr,"dsplog tool version is %s \n",  DSPLOG_VERSION_STRING);
+			fprintf(stderr, "dsplog tool version is %s.\n", DSPLOG_VERSION_STRING);
 			ret = 0;
 			break;
 		}
@@ -846,21 +861,21 @@ int main(int argc, char **argv)
 				ret = -1;
 				break;
 			} else {
-				fprintf(stderr, "log got and save to  /tmp/dspmem_dump.bin, please check \n");
+				fprintf(stderr, "log got and save to /tmp/dspmem_dump.bin, "
+					"please check it.\n");
 				ret = 0;
 				break;
 			}
 		}
 
-	            /*********************************************************/
-		if (dsplog_debug.work_mode == DSPLOG_CAPTURE_MODE)  {
+		if (dsplog_debug.work_mode == DSPLOG_CAPTURE_MODE) {
 			//capture log mode
 			//block signals
 			block_signals();
 
 			//init sem
 			if(sem_init(&exit_main_sem, 0, 0) < 0) {
-				fprintf(stderr, "dsplog_cap: create sem for exit failed \n");
+				fprintf(stderr, "dsplog_cap: create sem for exit failed.\n");
 				ret =  -1;
 				break;
 			} else {
@@ -868,27 +883,31 @@ int main(int argc, char **argv)
 			}
 
 			//create sig thread
-			if (pthread_create(&sig_thread, NULL, dsp_log_capture_sig_thread_func, &log_cap)!=0) {
-				fprintf(stderr, "dsplog_cap: create sig thread failed \n");
+			if (pthread_create(&sig_thread, NULL,
+					dsp_log_capture_sig_thread_func, &log_cap)!=0) {
+				fprintf(stderr, "dsplog_cap: create sig thread failed.\n");
 				ret = -1;
 				break;
 			}
 
-			if ((iav_fd =  open("/dev/iav", O_RDWR, 0)) < 0) {
-				perror("/dev/iav");
-				ret = -1;
-				break;
-			}
+			if (!dsplog_debug.capture_only_flag) {
+				if ((iav_fd = open("/dev/iav", O_RDWR, 0)) < 0) {
+					perror("/dev/iav");
+					ret = -1;
+					break;
+				}
 
-			if (dsplog_setup(iav_fd, &dsplog_debug) < 0 ) {
-				fprintf(stderr, "dsplog_cap: dsplog_setup failed \n");
-				ret = -1;
-				break;
+				if (dsplog_setup(iav_fd, &dsplog_debug) < 0 ) {
+					fprintf(stderr, "dsplog_cap: dsplog_setup failed \n");
+					ret = -1;
+					break;
+				} else {
+					close(iav_fd);
+				}
 			} else {
-				close(iav_fd);
+				fprintf(stderr, "dsplog_cap: capture only mode, do not send 'set debug level and bitmask' \n");
 			}
 
-
 			//open dsplog driver
 			if ((dsp_log_drv_fd = open("/dev/dsplog", O_RDONLY, 0)) < 0) {
 				perror("cannot open /dev/dsplog");
@@ -965,14 +984,12 @@ int main(int argc, char **argv)
 				ret = -1;
 				break;
 			}
-
 			if  (!(pmdxf =  mmap_ucode_bin(dsplog_debug.ucode, dsplog_mem.mdxf_file))){
 				fprintf(stderr,"mmap ucode bin %s failed \n", dsplog_mem.mdxf_file);
 				ret = -1;
 				break;
 			}
-
-			if (dsplog_parse(dsplog_debug.parse_in, pcode, pmemd, pmdxf,
+			if (dsplog_parse(dsplog_debug.parse_in, pcode, pmdxf, pmemd,
 				dsplog_debug.parse_out) <  0) {
 				fprintf(stderr,"dsplog_cap: parse dsp log failed \n");
 				ret = -1;
@@ -982,12 +999,13 @@ int main(int argc, char **argv)
 
 	}while(0);
 
-
 	if (sem_created)
 		sem_destroy(&exit_main_sem);
 
-	if (dsp_log_buffer)
+	if (dsp_log_buffer) {
 		free (dsp_log_buffer);
+		dsp_log_buffer = NULL;
+	}
 
         return ret;
 }
diff --git a/dsp_tool/dsplog_cap.h b/dsp_tool/dsplog_cap.h
index cc05db5..89f8793 100644
--- a/dsp_tool/dsplog_cap.h
+++ b/dsp_tool/dsplog_cap.h
@@ -4,15 +4,33 @@
  * History:
  *	2014/09/05 - [Jian Tang] created file
  *
- * Copyright (C) 2014-2018, Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
  *
  */
 
+
 #ifndef __DSPLOG_CAP_H__
 #define __DSPLOG_CAP_H__
 
@@ -34,14 +52,15 @@
 #include <semaphore.h>
 #include <unistd.h>
 #include "amba_debug.h"
+#include <stdint.h>
 
 /* include platform related config file */
 #include <config.h>
-#if defined(CONFIG_ARCH_S2L) || defined(CONFIG_ARCH_S3)
+#if (defined(CONFIG_ARCH_S2) || defined(CONFIG_ARCH_S2E))
+#include "iav_drv.h"
+#else
 #include "iav_ioctl.h"
 #include "iav_ucode_ioctl.h"
-#else
-#include "iav_drv.h"
 #endif
 #include "dsplog_drv.h"
 #include "datatx_lib.h"  //use datax lib to transfer data
@@ -55,7 +74,7 @@
 #define	DSP_LOG_PORT			(2017)        /* use port 2017 for tcp transfer */
 #define	AMBA_DEBUG_DSP		(1 << 1)
 #define	MAX_LOG_READ_SIZE	(1 << 20)
-#define	DEFAULT_PINPONG_FILE_SIZE    (100 << 20)
+#define	DEFAULT_PINPONG_FILE_SIZE    (10 << 20)
 
 //#define	ENABLE_RT_SCHED
 
@@ -82,26 +101,20 @@ struct hint_s {
 	const char *str;
 };
 
-/* struct idsp_printf_s is compatible for all ARCH */
-typedef struct idsp_printf_s {
-	u32	seq_num;		/**< Sequence number */
-	u8	dsp_core;
-	u8	thread_id;
-	u16	reserved;
-	u32	format_addr;	/**< Address (offset) to find '%s' arg */
-	u32	arg1;		/**< 1st var. arg */
-	u32	arg2;		/**< 2nd var. arg */
-	u32	arg3;		/**< 3rd var. arg */
-	u32	arg4;		/**< 4th var. arg */
-	u32	arg5;		/**< 5th var. arg */
-} idsp_printf_t;
+typedef struct idsp_printf_base_s {
+	u32 seq_num; 		/**< Sequence number */
+	u32 reserved[7];
+} idsp_printf_base_t;
+
+#define IDSP_LOG_SIZE	(sizeof(idsp_printf_base_t))
 
 typedef struct dsplog_cap_s {
-	int		logdrv_fd;
 	char *	log_buffer;
-	int		datax_method;
 	char *	output_filename;
-	int		log_port;
+	int	logdrv_fd;
+	int	datax_method;
+	int	log_port;
+	int	reserved;
 } dsplog_cap_t;
 
 typedef struct {
@@ -114,6 +127,7 @@ typedef struct {
 	u32	core_offset;
 	u32	mdxf_offset;
 	u32	memd_offset;
+	u32	reserved;
 } dsplog_memory_block;
 
 typedef struct {
@@ -128,11 +142,6 @@ typedef struct {
 	u8	capture_current_flag;
 	u32	work_mode;
 
-	/* debug_level is supported on A5s / A7L / S2L */
-	u8	debug_level_flag;
-	u8	debug_level;
-	u8	module_id;
-	u8	module_id_last;
 	int	modules[DSP_MODULE_TOTAL_NUM];
 
 	u32	thread_bitmask_flag;
@@ -141,12 +150,22 @@ typedef struct {
 	/* debug_bitmask is only supported on iOne / S2 */
 	u32	debug_bitmask[DSP_MODULE_TOTAL_NUM];
 	u32	operation_add[DSP_MODULE_TOTAL_NUM];
+	/* debug_level is supported on A5s / A7L / S2L */
+	u8	debug_level_flag;
+	u8	debug_level;
+	u8	module_id;
+	u8	module_id_last;
 
 	u8	show_version_flag;
 	u8	show_ucode_flag;
 	u8	pinpong_flag;
 	u8	transfer_tcp_flag;
 
+	u8	capture_only_flag;
+	u8	reserved0;
+	u8	reserved1;
+	u8	reserved2;
+
 	/* file transfer method */
 	u32	transfer_method;
 	int	transfer_fd;
@@ -162,6 +181,9 @@ int get_dsp_bitmask(char *bitmask_str);
 int get_thread_bitmask(char *bitmask_str);
 int dsplog_setup(int fd_iav, dsplog_debug_obj *obj);
 void extra_usage(char *itself);
+int print_log(idsp_printf_base_t *record, u8 * pcode,
+	u8 * pmdxf, u8 * pmemd,  FILE *  write_file,
+	dsplog_memory_block *dsplog_mem);
 
 #endif	// __DSPLOG_CAP_H__
 
diff --git a/dsp_tool/load_ucode.c b/dsp_tool/load_ucode.c
index b568f7d..c5083ea 100644
--- a/dsp_tool/load_ucode.c
+++ b/dsp_tool/load_ucode.c
@@ -4,19 +4,39 @@
  * History:
  *	2012/01/25 - [Jian Tang] created file
  *
- * Copyright (C) 2012-2018, Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
+ *
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
  *
  */
 
+
 #include <unistd.h>
 #include <fcntl.h>
 #include <stdio.h>
 #include <string.h>
+#include <stdint.h>
 
 #include <sys/ioctl.h>
 #include <sys/mman.h>
@@ -25,11 +45,12 @@
 #include <basetypes.h>
 
 #include <config.h>
-#if (defined(CONFIG_ARCH_S2L) || defined(CONFIG_ARCH_S3) || defined(CONFIG_ARCH_S3L))
+
+#if (defined(CONFIG_ARCH_S2) || defined(CONFIG_ARCH_S2E))
+#include "iav_drv.h"
+#else
 #include "iav_ioctl.h"
 #include "iav_ucode_ioctl.h"
-#else
-#include "iav_drv.h"
 #endif
 
 int load_ucode(const char *ucode_path)
@@ -39,9 +60,9 @@ int load_ucode(const char *ucode_path)
 	FILE *fp = NULL;
 	ucode_load_info_t info;
 	ucode_version_t version;
-	u8 *ucode_mem;
+	u8 *ucode_mem = NULL, *addr = NULL;
 	char filename[256];
-	int file_length;
+	long file_length;
 
 	do {
 		if ((fd = open("/dev/ucode", O_RDWR, 0)) < 0) {
@@ -56,7 +77,7 @@ int load_ucode(const char *ucode_path)
 			break;
 		}
 
-		printf("map_size = 0x%x, nr_item = %d\n", (u32)info.map_size, info.nr_item);
+		printf("map_size = 0x%lx, nr_item = %lu\n", info.map_size, info.nr_item);
 		for (i = 0; i < info.nr_item; i++) {
 			printf("addr_offset = 0x%08x, ", (u32)info.items[i].addr_offset);
 			printf("filename = %s\n", info.items[i].filename);
@@ -64,15 +85,15 @@ int load_ucode(const char *ucode_path)
 
 		ucode_mem = (u8 *)mmap(NULL, info.map_size,
 			PROT_READ | PROT_WRITE, MAP_SHARED, fd, 0);
-		if ((int)ucode_mem == -1) {
+		if ((intptr_t)ucode_mem == -1) {
 			perror("mmap");
 			retv = -1;
 			break;
 		}
-		printf("mmap returns 0x%x\n", (unsigned)ucode_mem);
+		printf("mmap returns %p\n", ucode_mem);
 
 		for (i = 0; i < info.nr_item; i++) {
-			u8 *addr = ucode_mem + info.items[i].addr_offset;
+			addr = ucode_mem + info.items[i].addr_offset;
 			snprintf(filename, sizeof(filename), "%s/%s",
 				ucode_path, info.items[i].filename);
 
@@ -95,7 +116,7 @@ int load_ucode(const char *ucode_path)
 				break;
 			}
 
-			printf("addr = 0x%x, size = 0x%x\n", (u32)addr, file_length);
+			printf("addr = %p, size = 0x%lx\n", addr, file_length);
 
 			if (fread(addr, 1, file_length, fp) != file_length) {
 				perror("fread");
@@ -118,12 +139,47 @@ int load_ucode(const char *ucode_path)
 			break;
 		}
 
-		printf("===============================\n");
-		printf("u_code version = %d/%d/%d %d.%d\n",
+		printf("===============================================\n");
+		printf("ucode ");
+#if (defined(CONFIG_ARCH_S2) || defined(CONFIG_ARCH_S2E))
+		if (version.chip_version & 0x1) {
+			printf("(S2E)");
+		} else {
+			printf("(S2)");
+		}
+		if (version.chip_version & 0x2) {
+			printf("(S2 test)");
+		}
+#else
+		switch (version.chip_arch) {
+		case UCODE_ARCH_S2L:
+			printf("(S2L)");
+			break;
+		case UCODE_ARCH_S3L:
+			printf("(S3L)");
+			break;
+		case UCODE_ARCH_S5:
+			printf("(S5)");
+			break;
+		case UCODE_ARCH_S5L:
+			printf("(S5L)");
+			break;
+
+#if (defined(CONFIG_ARCH_CV1))
+		case UCODE_ARCH_CV1:
+			printf("(CV1)");
+			break;
+#endif
+
+		default:
+			printf("(Unknown: %d)", version.chip_arch);
+			break;
+		}
+#endif
+		printf(" version = %d/%d/%d %d.%d\n",
 			version.year, version.month, version.day,
 			version.edition_num, version.edition_ver);
-		printf("===============================\n");
-
+		printf("===============================================\n");
 		if (munmap(ucode_mem, info.map_size) < 0) {
 			perror("munmap");
 			retv = -1;
@@ -139,7 +195,6 @@ int load_ucode(const char *ucode_path)
 	return retv;
 }
 
-
 int main(int argc, char **argv)
 {
 	const char *ucode_path;
diff --git a/dsp_tool/make.inc b/dsp_tool/make.inc
index c91bec1..bd7cdb2 100644
--- a/dsp_tool/make.inc
+++ b/dsp_tool/make.inc
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/08/04 - [Jian Tang] Created file
 ##
-## Copyright (C) 2014-2018, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 ifeq ($(BUILD_AMBARELLA_APP_UTILITY_DSP), y)
@@ -23,7 +40,12 @@ ifeq ($(BUILD_AMBARELLA_APP_UTILITY_LOAD_UCODE), y)
 include $(CLEAR_VARS)
 
 LOCAL_TARGET	:= load_ucode
+ifeq ($(CONFIG_ARCH_H2), y)
+LOCAL_SRCS	:= $(LOCAL_PATH)/arch_$(AMBARELLA_ARCH)/load_ucode.c
+LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/kernel/private/lib/firmware_$(AMBARELLA_ARCH)
+else
 LOCAL_SRCS	:= $(LOCAL_PATH)/load_ucode.c
+endif
 
 include $(BUILD_APP)
 
@@ -41,15 +63,23 @@ endif	## BUILD_AMBARELLA_APP_UTILITY_LOAD_UCODE
 #################################
 
 ifeq ($(BUILD_AMBARELLA_APP_UTILITY_DSPLOG), y)
-
 include $(CLEAR_VARS)
 
-LOCAL_TARGET	:= dsplog_cap
+ifeq ($(CONFIG_ARCH_H2), y)
+
+LOCAL_SRCS	:= $(LOCAL_PATH)/arch_$(AMBARELLA_ARCH)/dsplog_cap.c  $(LOCAL_PATH)/arch_$(AMBARELLA_ARCH)/dsplog_utils.c
+LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/kernel/private/lib/firmware_$(AMBARELLA_ARCH)
+else
+
 LOCAL_SRCS	:= $(LOCAL_PATH)/dsplog_cap.c  $(LOCAL_PATH)/arch_$(AMBARELLA_ARCH)/dsplog_utils.c
-LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/packages/data_transfer
+LOCAL_CFLAGS    :=
+endif ####### CONFIG_ARCH_H2
+
+
+LOCAL_TARGET	:= dsplog_cap
+LOCAL_CFLAGS	+= -I$(AMB_TOPDIR)/packages/data_transfer
 LOCAL_LIBS	:= libdatatx.a
 LOCAL_LDFLAGS	:= -lpthread
-
 include $(BUILD_APP)
 
 .PHONY: $(LOCAL_TARGET)
@@ -65,6 +95,29 @@ endif	## BUILD_AMBARELLA_APP_UTILITY_DSPLOG
 
 #################################
 
+ifeq ($(BUILD_AMBARELLA_APP_UTILITY_FB_DSPFW_GEN), y)
+
+include $(CLEAR_VARS)
+
+LOCAL_TARGET	:= fb_dspfw_gen
+LOCAL_SRCS	:= $(LOCAL_PATH)/fb_dspfw_gen.c
+LOCAL_CFLAGS	:= -I$(AMB_TOPDIR)/amboot/include
+
+include $(BUILD_APP)
+
+.PHONY: $(LOCAL_TARGET)
+
+$(LOCAL_TARGET): $(LOCAL_MODULE)
+	@mkdir -p $(FAKEROOT_DIR)/usr/sbin
+	@cp -dpRf $< $(FAKEROOT_DIR)/usr/sbin
+	@echo "Build $@ Done."
+
+$(call add-target-into-build, $(LOCAL_TARGET))
+
+endif	## BUILD_AMBARELLA_APP_UTILITY_FB_DSPFW_GEN
+
+#################################
+
 include $(LOCAL_PATH)/arch_$(AMBARELLA_ARCH)/make.inc
 
 endif	## BUILD_AMBARELLA_APP_UTILITY_DSP
diff --git a/jpg_enc/AmbaConfig b/jpg_enc/AmbaConfig
index f40e5ec..ba74bff 100644
--- a/jpg_enc/AmbaConfig
+++ b/jpg_enc/AmbaConfig
@@ -2,25 +2,37 @@
 ## app/utility/jpg_enc/AmbaConfig
 ##
 ## History:
-##	2014/11/19 - [Shaohua Fan] Create
+##    2014/11/17 - [Shaohua Fan] Create
 ##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
-
-
-menuconfig BUILD_AMBARELLA_APP_UTILITY_JPG
+config BUILD_AMBARELLA_APP_UTILITY_JPG
 	bool "Build JPG utility"
 	select BUILD_AMBARELLA_DATATX_PACKAGE
 	select CONFIG_AMBARELLA_LIBJPEG_TURBO_SUPPORT
 	default n
 	help
 		Build JPG utility APP
-
-if BUILD_AMBARELLA_APP_UTILITY_JPG
-
-config BUILD_JPG_ENC
-	bool "Build jpg_enc"
-	default n
-	help
-		Build jpg_enc
-endif
diff --git a/jpg_enc/chrome_convert.S b/jpg_enc/chrome_convert.S
index a61e5eb..452084f 100644
--- a/jpg_enc/chrome_convert.S
+++ b/jpg_enc/chrome_convert.S
@@ -1,4 +1,35 @@
-/* Zhikan */
+/*
+ * jpg_enc.c
+ *
+ * History:
+ *	2014/11/17 - [Zhikan Yang] created file
+ *
+ *
+ * Copyright (c) 2016 Ambarella, Inc.
+ *
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
 
 .fpu neon
 #ifdef __thumb2__
diff --git a/jpg_enc/jpg_enc.c b/jpg_enc/jpg_enc.c
index 31b4294..1aaba4b 100644
--- a/jpg_enc/jpg_enc.c
+++ b/jpg_enc/jpg_enc.c
@@ -4,15 +4,34 @@
  * History:
  *	2014/11/17 - [Tao Wu] created file
  *
- * Copyright (C) 2007-2014, Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
+ *
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
  *
  */
 
+
 #include <unistd.h>
 #include <fcntl.h>
 #include <stdio.h>
diff --git a/jpg_enc/make.inc b/jpg_enc/make.inc
index cdce1b0..97a927e 100644
--- a/jpg_enc/make.inc
+++ b/jpg_enc/make.inc
@@ -1,7 +1,37 @@
 ##
+## app/jpg_enc/make.inc
 ##
+## History:
+##    2014/11/17 - [Shaohua Fan] Create
+##
+## Copyright (c) 2016 Ambarella, Inc.
+##
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
+##
+
 LOCAL_PATH	:= $(call my-dir)
 
+ifeq ($(BUILD_AMBARELLA_APP_UTILITY_JPG), y)
 ifeq ($(BUILD_AMBARELLA_DATATX_PACKAGE), y)
 ifeq ($(CONFIG_AMBARELLA_LIBJPEG_TURBO_SUPPORT), y)
 
@@ -27,5 +57,5 @@ $(LOCAL_TARGET): $(LOCAL_MODULE)
 $(call add-target-into-build, $(LOCAL_TARGET))
 endif
 endif
-
+endif
 
diff --git a/make.inc b/make.inc
index 2082d3f..90f2076 100644
--- a/make.inc
+++ b/make.inc
@@ -4,12 +4,29 @@
 ## History:
 ##    2012/06/25 - [Jian Tang] Created file
 ##
-## Copyright (C) 2012-2016, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 ifeq ($(BUILD_AMBAREALLA_APP_UTILITY), y)
diff --git a/mptool/AmbaConfig b/mptool/AmbaConfig
index 649a3e2..8018886 100644
--- a/mptool/AmbaConfig
+++ b/mptool/AmbaConfig
@@ -4,12 +4,29 @@
 ## History:
 ##    Mar 4, 2015 - [longli] Create
 ##
-## Copyright (C) 2008-2015, Ambarella Co, Ltd.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 config BUILD_AMBARELLA_ORYX_MPTOOL
diff --git a/mptool/include/am_mp_bad_pixel_calibration.h b/mptool/include/am_mp_bad_pixel_calibration.h
index e37b9a1..5b2c5e8 100644
--- a/mptool/include/am_mp_bad_pixel_calibration.h
+++ b/mptool/include/am_mp_bad_pixel_calibration.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_BAD_PIXEL_CALIBRATION_H_
 #define _AN_MP_BAD_PIXEL_CALIBRATION_H_
diff --git a/mptool/include/am_mp_button.h b/mptool/include/am_mp_button.h
index 5d69e05..4908cb2 100644
--- a/mptool/include/am_mp_button.h
+++ b/mptool/include/am_mp_button.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_BUTTON_H_
 #define _AM_MP_BUTTON_H_
diff --git a/mptool/include/am_mp_ircut.h b/mptool/include/am_mp_ircut.h
index f3c04c7..2667e63 100644
--- a/mptool/include/am_mp_ircut.h
+++ b/mptool/include/am_mp_ircut.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_IRCUT_H_
 #define _AM_MP_IRCUT_H_
diff --git a/mptool/include/am_mp_led.h b/mptool/include/am_mp_led.h
index ef059e6..ecb9268 100644
--- a/mptool/include/am_mp_led.h
+++ b/mptool/include/am_mp_led.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_LED_H_
 #define _AM_MP_LED_H_
diff --git a/mptool/include/am_mp_lens_focus.h b/mptool/include/am_mp_lens_focus.h
index d97d87d..463536a 100644
--- a/mptool/include/am_mp_lens_focus.h
+++ b/mptool/include/am_mp_lens_focus.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_LENS_FOCUS_H_
 #define _AM_MP_LENS_FOCUS_H_
diff --git a/mptool/include/am_mp_lens_shad_cal.h b/mptool/include/am_mp_lens_shad_cal.h
index 19aaa03..617516e 100644
--- a/mptool/include/am_mp_lens_shad_cal.h
+++ b/mptool/include/am_mp_lens_shad_cal.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_LENS_SHAD_CAL_H_
 #define _AM_MP_LENS_SHAD_CAL_H_
diff --git a/mptool/include/am_mp_light_sensor.h b/mptool/include/am_mp_light_sensor.h
index 140381d..2d8195b 100644
--- a/mptool/include/am_mp_light_sensor.h
+++ b/mptool/include/am_mp_light_sensor.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_LIGHT_SENSOR_H_
 #define _AM_MP_LIGHT_SENSOR_H_
diff --git a/mptool/include/am_mp_mac_addr.h b/mptool/include/am_mp_mac_addr.h
index fea7a74..0319245 100644
--- a/mptool/include/am_mp_mac_addr.h
+++ b/mptool/include/am_mp_mac_addr.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_MAC_ADDR_H_
 #define _AM_MP_MAC_ADDR_H_
diff --git a/mptool/include/am_mp_mic.h b/mptool/include/am_mp_mic.h
index 274e5bb..1aca07e 100644
--- a/mptool/include/am_mp_mic.h
+++ b/mptool/include/am_mp_mic.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_MIC_H_
 #define _AM_MP_MIC_H_
diff --git a/mptool/include/am_mp_sdcard.h b/mptool/include/am_mp_sdcard.h
index 6eda98a..0588a1a 100644
--- a/mptool/include/am_mp_sdcard.h
+++ b/mptool/include/am_mp_sdcard.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_SDCARD_H_
 #define _AM_MP_SDCARD_H_
diff --git a/mptool/include/am_mp_sensor.h b/mptool/include/am_mp_sensor.h
index a619993..01484e5 100644
--- a/mptool/include/am_mp_sensor.h
+++ b/mptool/include/am_mp_sensor.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_SENSOR_H_
 #define _AM_MP_SENSOR_H_
diff --git a/mptool/include/am_mp_server.h b/mptool/include/am_mp_server.h
index 836f126..67e4713 100644
--- a/mptool/include/am_mp_server.h
+++ b/mptool/include/am_mp_server.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_SERVER_H_
 #define _AM_MP_SERVER_H_
diff --git a/mptool/include/am_mp_speaker.h b/mptool/include/am_mp_speaker.h
index 087803b..3d0dff4 100644
--- a/mptool/include/am_mp_speaker.h
+++ b/mptool/include/am_mp_speaker.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_SPEAKER_H_
 #define _AM_MP_SPEAKER_H_
diff --git a/mptool/include/am_mp_wifi_stat.h b/mptool/include/am_mp_wifi_stat.h
index eed3365..1fdf8ea 100644
--- a/mptool/include/am_mp_wifi_stat.h
+++ b/mptool/include/am_mp_wifi_stat.h
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #ifndef _AM_MP_WIFI_STAT_H_
 #define _AM_MP_WIFI_STAT_H_
diff --git a/mptool/make.inc b/mptool/make.inc
index ed3ce0a..7f86fcb 100644
--- a/mptool/make.inc
+++ b/mptool/make.inc
@@ -4,12 +4,29 @@
 ## History:
 ##   2015-3-18 - [longli] created file
 ##
-## Copyright (C) 2008-2015, Ambarella Co, Ltd.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 ifeq ($(BUILD_AMBARELLA_ORYX_MPTOOL), y)
diff --git a/mptool/src/am_mp_bad_pixel_calibration.c b/mptool/src/am_mp_bad_pixel_calibration.c
index 3020148..c03e40f 100644
--- a/mptool/src/am_mp_bad_pixel_calibration.c
+++ b/mptool/src/am_mp_bad_pixel_calibration.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #include <stdio.h>
 #include <unistd.h>
 #include <stdlib.h>
diff --git a/mptool/src/am_mp_button.c b/mptool/src/am_mp_button.c
index 894b677..5245755 100644
--- a/mptool/src/am_mp_button.c
+++ b/mptool/src/am_mp_button.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <unistd.h>
diff --git a/mptool/src/am_mp_ircut.c b/mptool/src/am_mp_ircut.c
index e7d40e6..5166478 100644
--- a/mptool/src/am_mp_ircut.c
+++ b/mptool/src/am_mp_ircut.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 19, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <stdint.h>
diff --git a/mptool/src/am_mp_led.c b/mptool/src/am_mp_led.c
index d6a622b..48c94a9 100644
--- a/mptool/src/am_mp_led.c
+++ b/mptool/src/am_mp_led.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 20, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <unistd.h>
diff --git a/mptool/src/am_mp_lens_focus.c b/mptool/src/am_mp_lens_focus.c
index 56daaa3..db77b9c 100644
--- a/mptool/src/am_mp_lens_focus.c
+++ b/mptool/src/am_mp_lens_focus.c
@@ -4,14 +4,33 @@
  * History:
  *   May 11, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <unistd.h>
diff --git a/mptool/src/am_mp_lens_shad_cal.c b/mptool/src/am_mp_lens_shad_cal.c
index 213c0bc..330749c 100644
--- a/mptool/src/am_mp_lens_shad_cal.c
+++ b/mptool/src/am_mp_lens_shad_cal.c
@@ -4,14 +4,33 @@
  * History:
  *   May 12, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <stdint.h>
diff --git a/mptool/src/am_mp_light_sensor.c b/mptool/src/am_mp_light_sensor.c
index 0d98bc1..0aa5405 100644
--- a/mptool/src/am_mp_light_sensor.c
+++ b/mptool/src/am_mp_light_sensor.c
@@ -4,14 +4,33 @@
  * History:
  *   May 7, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #include <stdio.h>
 #include <stdint.h>
 #include <string.h>
diff --git a/mptool/src/am_mp_mac_addr.c b/mptool/src/am_mp_mac_addr.c
index 2e73960..0289681 100644
--- a/mptool/src/am_mp_mac_addr.c
+++ b/mptool/src/am_mp_mac_addr.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <stdlib.h>
diff --git a/mptool/src/am_mp_mic.c b/mptool/src/am_mp_mic.c
index 0cb341a..99fbd75 100644
--- a/mptool/src/am_mp_mic.c
+++ b/mptool/src/am_mp_mic.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 19, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #include <stdio.h>
 #include <unistd.h>
 #include <stdint.h>
diff --git a/mptool/src/am_mp_sdcard.c b/mptool/src/am_mp_sdcard.c
index b4c7bcf..ebbd8ef 100644
--- a/mptool/src/am_mp_sdcard.c
+++ b/mptool/src/am_mp_sdcard.c
@@ -4,14 +4,33 @@
  * History:
  *   Jun 17, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #include <stdio.h>
 #include <unistd.h>
 #include <stdlib.h>
diff --git a/mptool/src/am_mp_sensor.c b/mptool/src/am_mp_sensor.c
index 16c52be..e72e6a4 100644
--- a/mptool/src/am_mp_sensor.c
+++ b/mptool/src/am_mp_sensor.c
@@ -4,14 +4,33 @@
  * History:
  *   May 8, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <sys/types.h>
diff --git a/mptool/src/am_mp_server.c b/mptool/src/am_mp_server.c
index b02c215..ce32310 100644
--- a/mptool/src/am_mp_server.c
+++ b/mptool/src/am_mp_server.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 5, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #include <stdio.h>
 #include <stdint.h>
 #include <unistd.h>
diff --git a/mptool/src/am_mp_speaker.c b/mptool/src/am_mp_speaker.c
index 3323596..90e883b 100644
--- a/mptool/src/am_mp_speaker.c
+++ b/mptool/src/am_mp_speaker.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 18, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 #include <stdio.h>
 #include <stdint.h>
diff --git a/mptool/src/am_mp_wifi_stat.c b/mptool/src/am_mp_wifi_stat.c
index db7f398..bf71807 100644
--- a/mptool/src/am_mp_wifi_stat.c
+++ b/mptool/src/am_mp_wifi_stat.c
@@ -4,14 +4,33 @@
  * History:
  *   Mar 24, 2015 - [longli] created file
  *
- * Copyright (C) 2008-2015, Ambarella Co, Ltd.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- ******************************************************************************/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #include <stdio.h>
 #include <stdint.h>
 #include <unistd.h>
diff --git a/upgrade_partition/AmbaConfig b/upgrade_partition/AmbaConfig
index 1ea9157..bb43c80 100644
--- a/upgrade_partition/AmbaConfig
+++ b/upgrade_partition/AmbaConfig
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/06/03 - [Ken He] Created file
 ##
-## Copyright (C) 2014-2018, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 config BUILD_AMBAREALLA_APP_UTILITY_UPGRADE
@@ -35,4 +52,8 @@ config BUILD_UPGRADE_FOR_3_8
 	help
 		Build ambarella upgrade partition for 3.8
 
+config BUILD_UPGRADE_FOR_4_4
+	bool "Build for Kernel 4.4"
+	help
+		Build ambarella upgrade partition for 4.4
 endchoice
diff --git a/upgrade_partition/libfdt/fdt.c b/upgrade_partition/libfdt/fdt.c
index 0f08c08..7b41134 100644
--- a/upgrade_partition/libfdt/fdt.c
+++ b/upgrade_partition/libfdt/fdt.c
@@ -48,6 +48,7 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include "libfdt_env.h"
 
 #include "fdt.h"
diff --git a/upgrade_partition/libfdt/fdt.h b/upgrade_partition/libfdt/fdt.h
index 526aedb..7b5797f 100644
--- a/upgrade_partition/libfdt/fdt.h
+++ b/upgrade_partition/libfdt/fdt.h
@@ -52,6 +52,7 @@
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
+
 #ifndef __ASSEMBLY__
 
 struct fdt_header {
diff --git a/upgrade_partition/libfdt/fdt_empty_tree.c b/upgrade_partition/libfdt/fdt_empty_tree.c
index 26ab2d3..31f8d64 100644
--- a/upgrade_partition/libfdt/fdt_empty_tree.c
+++ b/upgrade_partition/libfdt/fdt_empty_tree.c
@@ -48,6 +48,7 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include "libfdt_env.h"
 
 #include "fdt.h"
diff --git a/upgrade_partition/libfdt/fdt_ro.c b/upgrade_partition/libfdt/fdt_ro.c
index 51dacf3..fbef882 100644
--- a/upgrade_partition/libfdt/fdt_ro.c
+++ b/upgrade_partition/libfdt/fdt_ro.c
@@ -48,6 +48,7 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include "libfdt_env.h"
 
 #include "fdt.h"
diff --git a/upgrade_partition/libfdt/fdt_rw.c b/upgrade_partition/libfdt/fdt_rw.c
index c1924bc..1099132 100644
--- a/upgrade_partition/libfdt/fdt_rw.c
+++ b/upgrade_partition/libfdt/fdt_rw.c
@@ -48,6 +48,7 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include "libfdt_env.h"
 
 #include "fdt.h"
diff --git a/upgrade_partition/libfdt/fdt_strerror.c b/upgrade_partition/libfdt/fdt_strerror.c
index d255254..c066715 100644
--- a/upgrade_partition/libfdt/fdt_strerror.c
+++ b/upgrade_partition/libfdt/fdt_strerror.c
@@ -48,6 +48,7 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include "libfdt_env.h"
 
 #include "fdt.h"
diff --git a/upgrade_partition/libfdt/fdt_sw.c b/upgrade_partition/libfdt/fdt_sw.c
index 42fd340..c8fbe97 100644
--- a/upgrade_partition/libfdt/fdt_sw.c
+++ b/upgrade_partition/libfdt/fdt_sw.c
@@ -48,6 +48,7 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include "libfdt_env.h"
 
 #include "fdt.h"
diff --git a/upgrade_partition/libfdt/fdt_wip.c b/upgrade_partition/libfdt/fdt_wip.c
index 5821396..f0edc7a 100644
--- a/upgrade_partition/libfdt/fdt_wip.c
+++ b/upgrade_partition/libfdt/fdt_wip.c
@@ -48,6 +48,7 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include "libfdt_env.h"
 
 #include "fdt.h"
diff --git a/upgrade_partition/libfdt/libfdt.h b/upgrade_partition/libfdt/libfdt.h
index a62c4af..7b26df0 100644
--- a/upgrade_partition/libfdt/libfdt.h
+++ b/upgrade_partition/libfdt/libfdt.h
@@ -51,6 +51,7 @@
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
 
+
 #include "libfdt_env.h"
 #include "fdt.h"
 
diff --git a/upgrade_partition/libfdt/libfdt_env.h b/upgrade_partition/libfdt/libfdt_env.h
index 14d97fd..e80a74d 100644
--- a/upgrade_partition/libfdt/libfdt_env.h
+++ b/upgrade_partition/libfdt/libfdt_env.h
@@ -51,11 +51,16 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include <linux/string.h>
 #include <basetypes.h>
 #include <ctype.h>
 
+#if __WORDSIZE == 64
+typedef unsigned long		uintptr_t;
+#else
 typedef unsigned int		uintptr_t;
+#endif
 
 /* conversion between little-endian and big-endian */
 #define uswap_16(x) \
diff --git a/upgrade_partition/libfdt/libfdt_internal.h b/upgrade_partition/libfdt/libfdt_internal.h
index 7724d25..67794ec 100644
--- a/upgrade_partition/libfdt/libfdt_internal.h
+++ b/upgrade_partition/libfdt/libfdt_internal.h
@@ -50,6 +50,7 @@
  *     OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,
  *     EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  */
+
 #include "fdt.h"
 
 #define FDT_ALIGN(x, a)		(((x) + (a) - 1) & ~((a) - 1))
diff --git a/upgrade_partition/make.inc b/upgrade_partition/make.inc
index 6398781..64eacaf 100644
--- a/upgrade_partition/make.inc
+++ b/upgrade_partition/make.inc
@@ -4,12 +4,29 @@
 ## History:
 ##    2014/06/03 - [Ken He] Created file
 ##
-## Copyright (C) 2014-2016, Ambarella, Inc.
+## Copyright (c) 2016 Ambarella, Inc.
 ##
-## All rights reserved. No Part of this file may be reproduced, stored
-## in a retrieval system, or transmitted, in any form, or by any means,
-## electronic, mechanical, photocopying, recording, or otherwise,
-## without the prior consent of Ambarella, Inc.
+## This file and its contents ("Software") are protected by intellectual
+## property rights including, without limitation, U.S. and/or foreign
+## copyrights. This Software is also the confidential and proprietary
+## information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+## disclose, distribute, modify, or otherwise prepare derivative works of this
+## Software or any portion thereof except pursuant to a signed license agreement
+## or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+## In the absence of such an agreement, you agree to promptly notify and return
+## this Software to Ambarella, Inc.
+##
+## THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+## INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+## MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+## IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+## INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+## (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+## LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+## INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+## CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+## ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+## POSSIBILITY OF SUCH DAMAGE.
 ##
 
 ifeq ($(BUILD_AMBAREALLA_APP_UTILITY_UPGRADE), y)
@@ -24,6 +41,10 @@ ifeq ($(BUILD_UPGRADE_FOR_3_10), y)
 LOCAL_SRCS		:= $(wildcard $(LOCAL_PATH)/libfdt/*.c)
 LOCAL_SRCS		+= $(LOCAL_PATH)/upgrade_partition.c
 endif
+ifeq ($(BUILD_UPGRADE_FOR_4_4), y)
+LOCAL_SRCS		:= $(wildcard $(LOCAL_PATH)/libfdt/*.c)
+LOCAL_SRCS		+= $(LOCAL_PATH)/upgrade_partition_v44.c
+endif
 ifeq ($(BUILD_UPGRADE_FOR_3_8), y)
 LOCAL_SRCS		:= $(LOCAL_PATH)/upgrade_partition_v38.c
 endif
diff --git a/upgrade_partition/upgrade_partition.c b/upgrade_partition/upgrade_partition.c
index 0bfa54a..6f8cd2a 100644
--- a/upgrade_partition/upgrade_partition.c
+++ b/upgrade_partition/upgrade_partition.c
@@ -4,14 +4,33 @@
  * History:
  *    2014/05/27 - [Ken He] created file
  *
- * Copyright (C) 2014-2018, Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- **/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 //usage:#define nandwrite_trivial_usage
 //usage:	"[OPTIONS] MTD-device"
@@ -40,6 +59,7 @@
 //usage:     "\n	-R, --rom               Update Ambarella AMBOOT ROM Partition"
 //usage:     "\n	-B, --bak               Update Ambarella AMBOOT BAK Partition"
 //usage:     "\n	-C, --cmd               Update Ambarella AMBOOT CMD line"
+//usage:     "\n	-c, --bootcmd           Update Ambarella AMBOOT Boot command"
 //usage:     "\n	-d, --fdt               Update Ambarella AMBOOT FDT"
 //usage:     "\n	-F hex, --flag=hex      Update Ambarella AMBOOT Partition load flag"
 //usage:     "\n	-S hex, --safe=hex      force AMBOOT boot form PTB, safe recovery"
@@ -49,81 +69,87 @@
 //usage:     "\n	-E MAC, --ethmac=MAC    Update Ambarella AMBOOT MAC"
 //usage:     "\n	-N sn, --sn=sn  Update Ambarella AMBOOT SN"
 
+#include <stdint.h>
 #include "upgrade_partition.h"
+#include "config.h"
 
 #define PROGRAM "upgrade_partition"
-#define VERSION "Revision: 1.310.08 "
-#define AMB_VERSION "Ambarella: 0-20150907 "
+#define VERSION "Revision: 1.310.10 "
+#define AMB_VERSION "Ambarella: 0-20151125 "
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+#define EMMC_SECTOR_SIZE 512
+#define NAME_LEN 128
+#endif
 
 static void *fdt_root = NULL;
 static int fdt_check_error = 0;
 
-const char *g_part_str[] = {"bst", "bld", "ptb", "spl", "pba",
-"pri", "sec", "bak", "rmd", "rom",
-"dsp", "lnx", "swp", "add", "adc",
-"raw", "stg2", "stg", "prf", "cal",
-"all"};
+const char *g_part_str[PART_MAX_WITH_RSV] = {"bst", "bld", "ptb", "spl", "pba",
+                                             "pri", "sec", "bak", "rmd", "rom",
+                                             "dsp", "lnx", "swp", "add", "adc",
+                                             "raw", "stg2", "stg", "prf", "cal",
+                                             "all"};
 
 const uint32_t crc32_tab[] = {
-        0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,
-        0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,
-        0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,
-        0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,
-        0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,
-        0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,
-        0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,
-        0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,
-        0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,
-        0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,
-        0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,
-        0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,
-        0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,
-        0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,
-        0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,
-        0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,
-        0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,
-        0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,
-        0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,
-        0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,
-        0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,
-        0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,
-        0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,
-        0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,
-        0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,
-        0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,
-        0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,
-        0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,
-        0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,
-        0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,
-        0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,
-        0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,
-        0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,
-        0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,
-        0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,
-        0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,
-        0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,
-        0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,
-        0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,
-        0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,
-        0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,
-        0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,
-        0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d
+                              0x00000000, 0x77073096, 0xee0e612c, 0x990951ba, 0x076dc419, 0x706af48f,
+                              0xe963a535, 0x9e6495a3, 0x0edb8832, 0x79dcb8a4, 0xe0d5e91e, 0x97d2d988,
+                              0x09b64c2b, 0x7eb17cbd, 0xe7b82d07, 0x90bf1d91, 0x1db71064, 0x6ab020f2,
+                              0xf3b97148, 0x84be41de, 0x1adad47d, 0x6ddde4eb, 0xf4d4b551, 0x83d385c7,
+                              0x136c9856, 0x646ba8c0, 0xfd62f97a, 0x8a65c9ec, 0x14015c4f, 0x63066cd9,
+                              0xfa0f3d63, 0x8d080df5, 0x3b6e20c8, 0x4c69105e, 0xd56041e4, 0xa2677172,
+                              0x3c03e4d1, 0x4b04d447, 0xd20d85fd, 0xa50ab56b, 0x35b5a8fa, 0x42b2986c,
+                              0xdbbbc9d6, 0xacbcf940, 0x32d86ce3, 0x45df5c75, 0xdcd60dcf, 0xabd13d59,
+                              0x26d930ac, 0x51de003a, 0xc8d75180, 0xbfd06116, 0x21b4f4b5, 0x56b3c423,
+                              0xcfba9599, 0xb8bda50f, 0x2802b89e, 0x5f058808, 0xc60cd9b2, 0xb10be924,
+                              0x2f6f7c87, 0x58684c11, 0xc1611dab, 0xb6662d3d, 0x76dc4190, 0x01db7106,
+                              0x98d220bc, 0xefd5102a, 0x71b18589, 0x06b6b51f, 0x9fbfe4a5, 0xe8b8d433,
+                              0x7807c9a2, 0x0f00f934, 0x9609a88e, 0xe10e9818, 0x7f6a0dbb, 0x086d3d2d,
+                              0x91646c97, 0xe6635c01, 0x6b6b51f4, 0x1c6c6162, 0x856530d8, 0xf262004e,
+                              0x6c0695ed, 0x1b01a57b, 0x8208f4c1, 0xf50fc457, 0x65b0d9c6, 0x12b7e950,
+                              0x8bbeb8ea, 0xfcb9887c, 0x62dd1ddf, 0x15da2d49, 0x8cd37cf3, 0xfbd44c65,
+                              0x4db26158, 0x3ab551ce, 0xa3bc0074, 0xd4bb30e2, 0x4adfa541, 0x3dd895d7,
+                              0xa4d1c46d, 0xd3d6f4fb, 0x4369e96a, 0x346ed9fc, 0xad678846, 0xda60b8d0,
+                              0x44042d73, 0x33031de5, 0xaa0a4c5f, 0xdd0d7cc9, 0x5005713c, 0x270241aa,
+                              0xbe0b1010, 0xc90c2086, 0x5768b525, 0x206f85b3, 0xb966d409, 0xce61e49f,
+                              0x5edef90e, 0x29d9c998, 0xb0d09822, 0xc7d7a8b4, 0x59b33d17, 0x2eb40d81,
+                              0xb7bd5c3b, 0xc0ba6cad, 0xedb88320, 0x9abfb3b6, 0x03b6e20c, 0x74b1d29a,
+                              0xead54739, 0x9dd277af, 0x04db2615, 0x73dc1683, 0xe3630b12, 0x94643b84,
+                              0x0d6d6a3e, 0x7a6a5aa8, 0xe40ecf0b, 0x9309ff9d, 0x0a00ae27, 0x7d079eb1,
+                              0xf00f9344, 0x8708a3d2, 0x1e01f268, 0x6906c2fe, 0xf762575d, 0x806567cb,
+                              0x196c3671, 0x6e6b06e7, 0xfed41b76, 0x89d32be0, 0x10da7a5a, 0x67dd4acc,
+                              0xf9b9df6f, 0x8ebeeff9, 0x17b7be43, 0x60b08ed5, 0xd6d6a3e8, 0xa1d1937e,
+                              0x38d8c2c4, 0x4fdff252, 0xd1bb67f1, 0xa6bc5767, 0x3fb506dd, 0x48b2364b,
+                              0xd80d2bda, 0xaf0a1b4c, 0x36034af6, 0x41047a60, 0xdf60efc3, 0xa867df55,
+                              0x316e8eef, 0x4669be79, 0xcb61b38c, 0xbc66831a, 0x256fd2a0, 0x5268e236,
+                              0xcc0c7795, 0xbb0b4703, 0x220216b9, 0x5505262f, 0xc5ba3bbe, 0xb2bd0b28,
+                              0x2bb45a92, 0x5cb36a04, 0xc2d7ffa7, 0xb5d0cf31, 0x2cd99e8b, 0x5bdeae1d,
+                              0x9b64c2b0, 0xec63f226, 0x756aa39c, 0x026d930a, 0x9c0906a9, 0xeb0e363f,
+                              0x72076785, 0x05005713, 0x95bf4a82, 0xe2b87a14, 0x7bb12bae, 0x0cb61b38,
+                              0x92d28e9b, 0xe5d5be0d, 0x7cdcefb7, 0x0bdbdf21, 0x86d3d2d4, 0xf1d4e242,
+                              0x68ddb3f8, 0x1fda836e, 0x81be16cd, 0xf6b9265b, 0x6fb077e1, 0x18b74777,
+                              0x88085ae6, 0xff0f6a70, 0x66063bca, 0x11010b5c, 0x8f659eff, 0xf862ae69,
+                              0x616bffd3, 0x166ccf45, 0xa00ae278, 0xd70dd2ee, 0x4e048354, 0x3903b3c2,
+                              0xa7672661, 0xd06016f7, 0x4969474d, 0x3e6e77db, 0xaed16a4a, 0xd9d65adc,
+                              0x40df0b66, 0x37d83bf0, 0xa9bcae53, 0xdebb9ec5, 0x47b2cf7f, 0x30b5ffe9,
+                              0xbdbdf21c, 0xcabac28a, 0x53b39330, 0x24b4a3a6, 0xbad03605, 0xcdd70693,
+                              0x54de5729, 0x23d967bf, 0xb3667a2e, 0xc4614ab8, 0x5d681b02, 0x2a6f2b94,
+                              0xb40bbe37, 0xc30c8ea1, 0x5a05df1b, 0x2d02ef8d
 };
 
 static uint32_t crc32_amba(const void *buf, unsigned int size)
 {
-        const uint8_t *p;
-        uint32_t crc;
+  const uint8_t *p;
+  uint32_t crc;
 
-        p = (const unsigned char*)buf;
-        crc = ~0U;
+  p = (const unsigned char*)buf;
+  crc = ~0U;
 
-        while (size > 0) {
-                crc = crc32_tab[(crc ^ *p++) & 0xff] ^ (crc >> 8);
-                size--;
-	}
+  while (size > 0) {
+    crc = crc32_tab[(crc ^ *p++) & 0xff] ^ (crc >> 8);
+    size--;
+  }
 
-      return crc ^ ~0U;
+  return crc ^ ~0U;
 }
 
 //static const uint32_t *crc32_table;
@@ -131,31 +157,31 @@ static uint32_t crc32_amba(const void *buf, unsigned int size)
 /* Return a 32-bit CRC of the contents of the buffer. */
 static inline uint32_t crc32(uint32_t val, const void *ss, int len)
 {
-	const unsigned char *s = ss;
-	while (--len >= 0)
-		val = crc32_tab[(val ^ *s++) & 0xff] ^ (val >> 8);
-	return val;
+  const unsigned char *s = ss;
+  while (--len >= 0)
+    val = crc32_tab[(val ^ *s++) & 0xff] ^ (val >> 8);
+  return val;
 }
 #if 0
 static uint32_t* crc32_filltable(uint32_t *crc_table, int endian)
 {
-	uint32_t polynomial = endian ? 0x04c11db7 : 0xedb88320;
-	uint32_t c;
-	int i, j;
-
-	for (i = 0; i < 256; i++) {
-		c = endian ? (i << 24) : i;
-		for (j = 8; j; j--) {
-			if (endian)
-				c = (c&0x80000000) ? ((c << 1) ^ polynomial) : (c << 1);
-			else
-				c = (c&1) ? ((c >> 1) ^ polynomial) : (c >> 1);
-		}
-		*crc_table++ = c;
-		printf("crc value is [%x] = [0x%08x] \n", i,c);
-	}
-
-	return crc_table - 256;
+  uint32_t polynomial = endian ? 0x04c11db7 : 0xedb88320;
+  uint32_t c;
+  int i, j;
+
+  for (i = 0; i < 256; i++) {
+    c = endian ? (i << 24) : i;
+    for (j = 8; j; j--) {
+      if (endian)
+        c = (c&0x80000000) ? ((c << 1) ^ polynomial) : (c << 1);
+      else
+        c = (c&1) ? ((c >> 1) ^ polynomial) : (c >> 1);
+    }
+    *crc_table++ = c;
+    printf("crc value is [%x] = [0x%08x] \n", i,c);
+  }
+
+  return crc_table - 256;
 }
 #endif
 /*-------------------------------------FDT API-----------------------------*/
@@ -163,451 +189,467 @@ static uint32_t* crc32_filltable(uint32_t *crc_table, int endian)
 
 char *strncpy_amba(char *dest, const char *src, unsigned int n)
 {
-	while (n > 0) {
-		n--;
+  while (n > 0) {
+    n--;
 
-		if ((*dest++ = *src++) == '\0')
-			break;
-	}
+    if ((*dest++ = *src++) == '\0')
+      break;
+  }
 
-	return dest;
+  return dest;
 }
 
 char *strfromargv(char *s, unsigned int slen, int argc, char **argv)
 {
-	int i;
-
-	if (argc == 0) {
-		*s = '\0';
-		return s;
-	}
-
-	for (i = 0; i < slen; i++)
-		s[i] = '\0';
-	for (i = 0; i < argc && slen > 0; i++) {
-		if (i != 0) {
-			s--;
-			*s = ' ';
-			s++;
-		}
-		s = strncpy_amba(s, argv[i], slen);
-		slen -= strlen(argv[i]);
-	}
-
-	return s;
+  int i;
+
+  if (argc == 0) {
+    *s = '\0';
+    return s;
+  }
+
+  for (i = 0; i < slen; i++)
+    s[i] = '\0';
+  for (i = 0; i < argc && slen > 0; i++) {
+    if (i != 0) {
+      s--;
+      *s = ' ';
+      s++;
+    }
+    s = strncpy_amba(s, argv[i], slen);
+    slen -= strlen(argv[i]);
+  }
+
+  return s;
 }
 
 static int cmd_fdt_print_prop(const void *fdt, int offset)
 {
-	const struct fdt_property *fdt_prop;
-	const char *pathp;
-	int len, i, p;
-	u32 *data;
-
-	fdt_prop = fdt_offset_ptr(fdt, offset, sizeof(*fdt_prop));
-	pathp = fdt_string(fdt, fdt32_to_cpu(fdt_prop->nameoff));
-	len = fdt32_to_cpu(fdt_prop->len);
-
-	if (len == 0) {
-		/* the property has no value */
-		printf("%s \n", pathp);
-	} else {
-		printf("%s = ", pathp);
-
-		p = 1;
-		for (i = 0; i < len - 1; i++) {
-			if (!isprint(fdt_prop->data[i])) {
-				p = 0;
-				break;
-			}
-		}
-
-		if (p) {
-			printf("%s \n",fdt_prop->data);
-		} else {
-			data = (u32 *)fdt_prop->data;
-			for (i = 0; i < len / 4; i++) {
-				printf("0x%x ",fdt32_to_cpu(data[i]));
-			}
-		}
-	}
-
-	return 0;
+  const struct fdt_property *fdt_prop;
+  const char *pathp;
+  int len, i, p;
+  u32 *data;
+
+  fdt_prop = fdt_offset_ptr(fdt, offset, sizeof(*fdt_prop));
+  pathp = fdt_string(fdt, fdt32_to_cpu(fdt_prop->nameoff));
+  len = fdt32_to_cpu(fdt_prop->len);
+
+  if (len == 0) {
+    /* the property has no value */
+    printf("%s \n", pathp);
+  } else {
+    printf("%s = ", pathp);
+
+    p = 1;
+    for (i = 0; i < len - 1; i++) {
+      if (!isprint(fdt_prop->data[i])) {
+        p = 0;
+        break;
+      }
+    }
+
+    if (p) {
+      printf("%s \n",fdt_prop->data);
+    } else {
+      data = (u32 *)fdt_prop->data;
+      for (i = 0; i < len / 4; i++) {
+        printf("0x%x ",fdt32_to_cpu(data[i]));
+      }
+    }
+  }
+
+  return 0;
 }
 
 static int cmd_fdt_getnode(const void *fdt, const char *path, int print_prop)
 {
-	int offset, nextoffset, level;
-	u32 tag;
-
-	offset = fdt_path_offset(fdt, path);
-	if (offset < 0) {
-		printf("libfdt fdt_path_offset() error: %s \n",fdt_strerror(offset));
-		return -1;
-	}
-
-	level = 0;
-	while(level >= 0) {
-		char buf[64];
-
-		tag = fdt_next_tag(fdt, offset, &nextoffset);
-
-		switch(tag) {
-		case FDT_BEGIN_NODE:
-			if (print_prop)
-				printf("\n");
-			fdt_get_path(fdt, offset, buf, sizeof(buf));
-			printf("%s \n", buf);
-
-			level++;
-			if (level >= MAX_LEVEL) {
-				printf("Man, too deep!\n");
-				return -1;
-			}
-			break;
-
-		case FDT_END_NODE:
-			level--;
-			if (level == 0)
-				level = -1;	/* exit the loop */
-			break;
-
-		case FDT_PROP:
-			if (print_prop)
-				cmd_fdt_print_prop(fdt, offset);
-			break;
-
-		case FDT_NOP:
-			printf("NOP tag\n");
-			break;
-
-		case FDT_END:
-			return 0;
-
-		default:
-			printf("Unknown tag 0x%x \n",tag);
-			return -1;
-		}
-		offset = nextoffset;
-	}
-
-	return 0;
+  int offset, nextoffset, level;
+  u32 tag;
+
+  offset = fdt_path_offset(fdt, path);
+  if (offset < 0) {
+    printf("libfdt fdt_path_offset() error: %s \n",fdt_strerror(offset));
+    return -1;
+  }
+
+  level = 0;
+  while(level >= 0) {
+    char buf[64];
+
+    tag = fdt_next_tag(fdt, offset, &nextoffset);
+
+    switch(tag) {
+      case FDT_BEGIN_NODE:
+        if (print_prop)
+          printf("\n");
+        fdt_get_path(fdt, offset, buf, sizeof(buf));
+        printf("%s \n", buf);
+
+        level++;
+        if (level >= MAX_LEVEL) {
+          printf("Man, too deep!\n");
+          return -1;
+        }
+        break;
+
+      case FDT_END_NODE:
+        level--;
+        if (level == 0)
+          level = -1;	/* exit the loop */
+        break;
+
+      case FDT_PROP:
+        if (print_prop)
+          cmd_fdt_print_prop(fdt, offset);
+        break;
+
+      case FDT_NOP:
+        printf("NOP tag\n");
+        break;
+
+      case FDT_END:
+        return 0;
+
+      default:
+        printf("Unknown tag 0x%x \n",tag);
+        return -1;
+    }
+    offset = nextoffset;
+  }
+
+  return 0;
 }
 
 static int fdt_update_cmdline(void *fdt, const char *cmdline)
 {
-	int ret_val = 0;
-	int offset;
-
-	offset = fdt_path_offset (fdt, "/chosen");
-	if (offset < 0) {
-		ret_val = offset;
-		goto fdt_update_chosen_exit;
-	}
-
-	if ((cmdline != NULL) && (cmdline[0] != '\0')) {
-		ret_val = fdt_setprop_string(fdt, offset, "bootargs", cmdline);
-		if (ret_val < 0) {
-			goto fdt_update_chosen_exit;
-		}
-	}
-
-fdt_update_chosen_exit:
-	return ret_val;
+  int ret_val = 0;
+  int offset;
+
+  offset = fdt_path_offset (fdt, "/chosen");
+  if (offset < 0) {
+    ret_val = offset;
+    goto fdt_update_chosen_exit;
+  }
+
+  if ((cmdline != NULL) && (cmdline[0] != '\0')) {
+    ret_val = fdt_setprop_string(fdt, offset, "bootargs", cmdline);
+    if (ret_val < 0) {
+      printf("fdt_setprop_string fail\n");
+      goto fdt_update_chosen_exit;
+    }
+  }
+
+  fdt_update_chosen_exit:
+  return ret_val;
 }
 
 static void display_version (void)
 {
-	printf(PROGRAM " " VERSION "" AMB_VERSION "\n"
-			"\n"
-			"Copyright (C) 2014 Ambarella \n"
-			"\n");
-	exit(0);
+  printf(PROGRAM " " VERSION "" AMB_VERSION "\n"
+         "\n"
+         "Copyright (C) 2014 Ambarella \n"
+         "\n");
+  exit(0);
 }
 
 static void display_flpart (const char *name, flpart_t *p_flpart)
 {
-	printf("%s:\n", name);
-	printf("crc32 \t= 0x%08x\n", p_flpart->crc32);
-	printf("ver_num = 0x%08x\n", p_flpart->ver_num);
-	printf("ver_date= 0x%08x\n", p_flpart->ver_date);
-	printf("img_len = 0x%08x\n", p_flpart->img_len);
-	printf("mem_addr= 0x%08x\n", p_flpart->mem_addr);
-	printf("flag \t= 0x%08x\n", p_flpart->flag);
-	printf("magic \t= 0x%08x\n", p_flpart->magic);
-	printf("\n");
+  printf("%s:\n", name);
+  printf("crc32 \t= 0x%08x\n", p_flpart->crc32);
+  printf("ver_num = 0x%08x\n", p_flpart->ver_num);
+  printf("ver_date= 0x%08x\n", p_flpart->ver_date);
+  printf("img_len = 0x%08x\n", p_flpart->img_len);
+  printf("mem_addr= 0x%08x\n", p_flpart->mem_addr);
+  printf("flag \t= 0x%08x\n", p_flpart->flag);
+  printf("magic \t= 0x%08x\n", p_flpart->magic);
+  printf("\n");
 }
 
 static void display_dev (fldev_t *p_dev)
 {
-	int i;
-	printf("sn		= %s\n", p_dev->sn);
-	printf("magic		= 0x%08x\n", p_dev->magic);
-	printf("usbdl_mode	= 0x%08x\n", p_dev->usbdl_mode);
-	printf("cmdline	= %s\n", p_dev->cmdline);
-	printf("force_ptb	= 0x%08x\n", p_dev->rsv[0]);
-//	printf("upgrade status = 0x%08x\n", p_dev->pba_boot_flag[1]);
-	printf("auto_boot 	= %d\n", p_dev->auto_boot);
-	printf("auto_dl 	= %d\n", p_dev->auto_dl);
-	printf("pri_file	= %s\n", p_dev->pri_file);
-	printf("pri_addr	= 0x%08x\n", p_dev->pri_addr);
-
-	for (i=0 ; i< ETH_INSTANCES ; i++)
-	{
-		printf("eth%d MAC	= %02x:%02x:%02x:%02x:%02x:%02x\n",i,
-			p_dev->eth[i].mac[0], p_dev->eth[i].mac[1],
-			p_dev->eth[i].mac[2], p_dev->eth[i].mac[3],
-			p_dev->eth[i].mac[4], p_dev->eth[i].mac[5]);
-		printf("Eth%d ip  	= %d.%d.%d.%d\n",i,
-			(p_dev->eth[i].ip) &0xff, (p_dev->eth[i].ip>>8) &0xff,
-			(p_dev->eth[i].ip>>16) &0xff, (p_dev->eth[i].ip>>24) &0xff);
-		printf("Eth%d mask	= %d.%d.%d.%d\n",i,
-			(p_dev->eth[i].mask) &0xff, (p_dev->eth[i].mask>>8) &0xff,
-			(p_dev->eth[i].mask>>16) &0xff, (p_dev->eth[i].mask>>24) &0xff);
-		printf("Eth%d gw  	= %d.%d.%d.%d\n",i,
-			(p_dev->eth[i].gw) &0xff, (p_dev->eth[i].gw>>8) &0xff,
-			(p_dev->eth[i].gw>>16) &0xff, (p_dev->eth[i].gw>>24) &0xff);
-	}
-	if (USE_WIFI)
-	{
-		for (i=0; i< USE_WIFI; i++)
-		{
-			printf("WIFI%d MAC	= %02x:%02x:%02x:%02x:%02x:%02x\n",i,
-				p_dev->wifi[i].mac[0], p_dev->wifi[i].mac[1],
-				p_dev->wifi[i].mac[2], p_dev->wifi[i].mac[3],
-				p_dev->wifi[i].mac[4], p_dev->wifi[i].mac[5]);
-			printf("WIFI%d ip	= %d.%d.%d.%d\n",i,
-				(p_dev->wifi[i].ip) &0xff,(p_dev->wifi[i].ip>>8) &0xff,
-				(p_dev->wifi[i].ip>>16) &0xff, (p_dev->wifi[i].ip>>24) &0xff);
-			printf("WIFI%d mask	= %d.%d.%d.%d\n",i,
-				(p_dev->wifi[i].mask) &0xff,(p_dev->wifi[i].mask>>8) &0xff,
-				(p_dev->wifi[i].mask>>16) &0xff, (p_dev->wifi[i].mask>>24) &0xff);
-			printf("WIFI%d gw	= %d.%d.%d.%d\n",i,
-				(p_dev->wifi[i].gw) &0xff,(p_dev->wifi[i].gw>>8) &0xff,
-				(p_dev->wifi[i].gw>>16) &0xff, (p_dev->wifi[i].gw>>24) &0xff);
-		}
-	}
-	printf("tftpd		= %d.%d.%d.%d\n",
-		( p_dev->tftpd) &0xff,(p_dev->tftpd>>8) &0xff,
-		(p_dev->tftpd>>16) &0xff, (p_dev->tftpd>>24) &0xff);
-	printf("\n");
+  int i;
+  printf("sn		= %s\n", p_dev->sn);
+  printf("magic		= 0x%08x\n", p_dev->magic);
+  printf("usbdl_mode	= 0x%08x\n", p_dev->usbdl_mode);
+  printf("cmdline	= %s\n", p_dev->cmdline);
+  printf("bootcmd	= %s\n", p_dev->bootcmd);
+  printf("force_ptb	= 0x%08x\n", p_dev->rsv[0]);
+  //	printf("upgrade status = 0x%08x\n", p_dev->pba_boot_flag[1]);
+  printf("auto_boot 	= %d\n", p_dev->auto_boot);
+  printf("auto_dl 	= %d\n", p_dev->auto_dl);
+  printf("pri_file	= %s\n", p_dev->pri_file);
+  printf("pri_addr	= 0x%08x\n", p_dev->pri_addr);
+
+  for (i=0 ; i< ETH_INSTANCES ; i++)
+  {
+    printf("eth%d MAC	= %02x:%02x:%02x:%02x:%02x:%02x\n",i,
+           p_dev->eth[i].mac[0], p_dev->eth[i].mac[1],
+           p_dev->eth[i].mac[2], p_dev->eth[i].mac[3],
+           p_dev->eth[i].mac[4], p_dev->eth[i].mac[5]);
+    printf("Eth%d ip  	= %d.%d.%d.%d\n",i,
+           (p_dev->eth[i].ip) &0xff, (p_dev->eth[i].ip>>8) &0xff,
+           (p_dev->eth[i].ip>>16) &0xff, (p_dev->eth[i].ip>>24) &0xff);
+    printf("Eth%d mask	= %d.%d.%d.%d\n",i,
+           (p_dev->eth[i].mask) &0xff, (p_dev->eth[i].mask>>8) &0xff,
+           (p_dev->eth[i].mask>>16) &0xff, (p_dev->eth[i].mask>>24) &0xff);
+    printf("Eth%d gw  	= %d.%d.%d.%d\n",i,
+           (p_dev->eth[i].gw) &0xff, (p_dev->eth[i].gw>>8) &0xff,
+           (p_dev->eth[i].gw>>16) &0xff, (p_dev->eth[i].gw>>24) &0xff);
+  }
+  if (USE_WIFI)
+  {
+    for (i=0; i< USE_WIFI; i++)
+    {
+      printf("WIFI%d MAC	= %02x:%02x:%02x:%02x:%02x:%02x\n",i,
+             p_dev->wifi[i].mac[0], p_dev->wifi[i].mac[1],
+             p_dev->wifi[i].mac[2], p_dev->wifi[i].mac[3],
+             p_dev->wifi[i].mac[4], p_dev->wifi[i].mac[5]);
+      printf("WIFI%d ip	= %d.%d.%d.%d\n",i,
+             (p_dev->wifi[i].ip) &0xff,(p_dev->wifi[i].ip>>8) &0xff,
+             (p_dev->wifi[i].ip>>16) &0xff, (p_dev->wifi[i].ip>>24) &0xff);
+      printf("WIFI%d mask	= %d.%d.%d.%d\n",i,
+             (p_dev->wifi[i].mask) &0xff,(p_dev->wifi[i].mask>>8) &0xff,
+             (p_dev->wifi[i].mask>>16) &0xff, (p_dev->wifi[i].mask>>24) &0xff);
+      printf("WIFI%d gw	= %d.%d.%d.%d\n",i,
+             (p_dev->wifi[i].gw) &0xff,(p_dev->wifi[i].gw>>8) &0xff,
+             (p_dev->wifi[i].gw>>16) &0xff, (p_dev->wifi[i].gw>>24) &0xff);
+    }
+  }
+  printf("tftpd		= %d.%d.%d.%d\n",
+         ( p_dev->tftpd) &0xff,(p_dev->tftpd>>8) &0xff,
+         (p_dev->tftpd>>16) &0xff, (p_dev->tftpd>>24) &0xff);
+  printf("\n");
 
 }
 
 static void display_fdt (const void *fdt)
 {
-	printf("magic \t= 0x%08X\n", fdt_magic(fdt));
-	printf("totalsize \t= 0x%08x\n", fdt_totalsize(fdt));
-	printf("version \t= 0x%08x\n", fdt_version(fdt));
-	printf("off_dt_struct \t= 0x%08x\n", fdt_off_dt_struct(fdt));
-	printf("off_dt_strings \t= 0x%08x\n", fdt_off_dt_strings(fdt));
-	printf("off_mem_rsvmap \t= 0x%08x\n", fdt_off_mem_rsvmap(fdt));
-	printf("last_comp_version \t= 0x%08x\n", fdt_last_comp_version(fdt));
-	printf("size_dt_struct \t= 0x%08x\n", fdt_size_dt_struct(fdt));
-	printf("FDT cmdline ");
-	cmd_fdt_getnode(fdt, "/chosen", 1);
-	printf("\n");
+  printf("magic \t= 0x%08X\n", fdt_magic(fdt));
+  printf("totalsize \t= 0x%08x\n", fdt_totalsize(fdt));
+  printf("version \t= 0x%08x\n", fdt_version(fdt));
+  printf("off_dt_struct \t= 0x%08x\n", fdt_off_dt_struct(fdt));
+  printf("off_dt_strings \t= 0x%08x\n", fdt_off_dt_strings(fdt));
+  printf("off_mem_rsvmap \t= 0x%08x\n", fdt_off_mem_rsvmap(fdt));
+  printf("last_comp_version \t= 0x%08x\n", fdt_last_comp_version(fdt));
+  printf("size_dt_struct \t= 0x%08x\n", fdt_size_dt_struct(fdt));
+  printf("FDT cmdline ");
+  cmd_fdt_getnode(fdt, "/chosen", 1);
+  printf("\n");
 }
 
 #define NANDWRITE_OPTIONS_BASE		0
 #define NETWORK_OPTION_BASE		20
 
 enum numeric_short_options {
-	HELP = NANDWRITE_OPTIONS_BASE,
-	VERSION_INFO,
-	AUTO_DOWNLOAD,
-	AUTO_BOOT,
-	PRI_ADDR,
-	PRI_FILE,
-	SHOW_INFO,
-	SHOW_FDT,
-
-	ETH0_IP = NETWORK_OPTION_BASE,
-	ETH0_MASK,
-	ETH0_GW,
-	TFTPD,
-	ETH1_MAC,
-	ETH1_IP,
-	ETH1_MASK,
-	ETH1_GW,
-	WIFI0_MAC,
-	WIFI0_IP,
-	WIFI0_MASK,
-	WIFI0_GW,
+  HELP = NANDWRITE_OPTIONS_BASE,
+  VERSION_INFO,
+  AUTO_DOWNLOAD,
+  AUTO_BOOT,
+  PRI_ADDR,
+  PRI_FILE,
+  SHOW_INFO,
+  SHOW_FDT,
+
+  ETH0_IP = NETWORK_OPTION_BASE,
+  ETH0_MASK,
+  ETH0_GW,
+  TFTPD,
+  ETH1_MAC,
+  ETH1_IP,
+  ETH1_MASK,
+  ETH1_GW,
+  WIFI0_MAC,
+  WIFI0_IP,
+  WIFI0_MASK,
+  WIFI0_GW,
 #if (USE_WIFI >= 2)
-	WIFI1_MAC,
-	WIFI1_IP,
-	WIFI1_MASK,
-	WIFI1_GW,
+  WIFI1_MAC,
+  WIFI1_IP,
+  WIFI1_MASK,
+  WIFI1_GW,
 #endif
-	USB_ETH0_MAC,
-	USB_ETH0_IP,
-	USB_ETH0_MASK,
-	USB_ETH0_GW,
-	USB_ETH1_MAC,
-	USB_ETH1_IP,
-	USB_ETH1_MASK,
-	USB_ETH1_GW,
+  USB_ETH0_MAC,
+  USB_ETH0_IP,
+  USB_ETH0_MASK,
+  USB_ETH0_GW,
+  USB_ETH1_MAC,
+  USB_ETH1_IP,
+  USB_ETH1_MASK,
+  USB_ETH1_GW,
 };
 
 //static const char *short_options = "b:fjopqs:ytdKMRBGHQIUWXYZC:F:L:S:D:V:E:N:B:P:";
-static const char *short_options = "b:fjopqs:ytdKMRBGA:HQIUWXYZC:F:L:S:D:V:E:N:B:P:";
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+static const char *short_options = "pqs:tdKMRBGA:HQIUWXYZC:c:F:L:S:D:V:E:N:B:P:";
+#else
+static const char *short_options = "b:fjopqs:ytd:KMRBGA:HQIUWXYZC:c:F:L:S:D:V:E:N:B:P:";
+#endif
 static struct option long_options[] = {
-	{"jffs2", no_argument, 0, 'j'},
-	{"yaffs", no_argument, 0, 'y'},
-	{"forcelegacy", no_argument, 0, 'f'},
-	{"oob", no_argument, 0, 'o'},
-	{"start", required_argument, 0, 's'},
-	{"pad", no_argument, 0, 'p'},
-	{"blockalign", required_argument, 0, 'b'},
-	{"quiet", no_argument, 0, 'q'},
-	{"skiphead", no_argument, 0, 't'},
-	{"help", no_argument, 0, HELP},
-	{"version", no_argument, 0, VERSION_INFO},
-	{"fdt", required_argument, 0, 'd'},
-
-	{"bld", no_argument, 0, 'G'},
-	{"ptb", required_argument, 0, 'A'},
-	{"spl", no_argument, 0, 'H'},
-	{"pba", no_argument, 0, 'Q'},
-	{"sec", no_argument, 0, 'I'},
-	{"dsp", no_argument, 0, 'U'},
-	{"lnx", no_argument, 0, 'W'},
-	{"swp", no_argument, 0, 'X'},
-	{"add", no_argument, 0, 'Y'},
-	{"adc", no_argument, 0, 'Z'},
-	{"pri", no_argument, 0, 'K'},
-	{"rmd", no_argument, 0, 'M'},
-	{"rom", no_argument, 0, 'R'},
-	{"bak", no_argument, 0, 'B'},
-
-	{"cmd", required_argument, 0, 'C'},
-	{"flag", required_argument, 0, 'F'},
-	{"safe", required_argument, 0, 'S'},
-	{"upgrade", required_argument, 0, 'P'},
-//	{"load", required_argument, 0, 'L'},
-
-	{"date", required_argument, 0, 'D'},
-	{"ver", required_argument, 0, 'V'},
-	{"ethmac", required_argument, 0, 'E'},
-	{"sn   ", required_argument, 0, 'N'},
-
-	{"auto_boot", required_argument, 0, AUTO_BOOT},
-	{"auto_dl", required_argument, 0, AUTO_DOWNLOAD},
-
-	{"pri_addr", required_argument, 0, PRI_ADDR},
-	{"pri_file", required_argument, 0, PRI_FILE},
-
-	{"lan_ip", required_argument, 0, ETH0_IP},
-	{"lan_mask", required_argument, 0, ETH0_MASK},
-	{"lan_gw", required_argument, 0, ETH0_GW},
-	{"tftpd  ", required_argument, 0, TFTPD},
-
-	{"eth1_mac", required_argument, 0, ETH1_MAC},
-	{"eth1_ip", required_argument, 0, ETH1_IP},
-	{"eth1_mask", required_argument, 0, ETH1_MASK},
-	{"eth1_gw", required_argument, 0, ETH1_GW},
-
-	{"wifi0_mac", required_argument, 0, WIFI0_MAC},
-	{"wifi0_ip", required_argument, 0, WIFI0_IP},
-	{"wifi0_mask", required_argument, 0, WIFI0_MASK},
-	{"wifi0_gw", required_argument, 0, WIFI0_GW},
+#ifndef CONFIG_BOOT_MEDIA_EMMC
+                                       {"jffs2", no_argument, 0, 'j'},
+                                       {"yaffs", no_argument, 0, 'y'},
+                                       {"forcelegacy", no_argument, 0, 'f'},
+                                       {"oob", no_argument, 0, 'o'},
+#endif
+                                       {"start", required_argument, 0, 's'},
+                                       {"pad", no_argument, 0, 'p'},
+#ifndef CONFIG_BOOT_MEDIA_EMMC
+                                       {"blockalign", required_argument, 0, 'b'},
+#endif
+                                       {"quiet", no_argument, 0, 'q'},
+                                       {"skiphead", no_argument, 0, 't'},
+                                       {"help", no_argument, 0, HELP},
+                                       {"version", no_argument, 0, VERSION_INFO},
+                                       {"fdt", required_argument, 0, 'd'},
+
+                                       {"bld", no_argument, 0, 'G'},
+                                       {"ptb", required_argument, 0, 'A'},
+                                       {"spl", no_argument, 0, 'H'},
+                                       {"pba", no_argument, 0, 'Q'},
+                                       {"sec", no_argument, 0, 'I'},
+                                       {"dsp", no_argument, 0, 'U'},
+                                       {"lnx", no_argument, 0, 'W'},
+                                       {"swp", no_argument, 0, 'X'},
+                                       {"add", no_argument, 0, 'Y'},
+                                       {"adc", no_argument, 0, 'Z'},
+                                       {"pri", no_argument, 0, 'K'},
+                                       {"rmd", no_argument, 0, 'M'},
+                                       {"rom", no_argument, 0, 'R'},
+                                       {"bak", no_argument, 0, 'B'},
+
+                                       {"cmd", required_argument, 0, 'C'},
+                                       {"bootcmd", required_argument, 0, 'c'},
+                                       {"flag", required_argument, 0, 'F'},
+                                       {"safe", required_argument, 0, 'S'},
+                                       {"upgrade", required_argument, 0, 'P'},
+                                       //	{"load", required_argument, 0, 'L'},
+
+                                       {"date", required_argument, 0, 'D'},
+                                       {"ver", required_argument, 0, 'V'},
+                                       {"ethmac", required_argument, 0, 'E'},
+                                       {"sn   ", required_argument, 0, 'N'},
+
+                                       {"auto_boot", required_argument, 0, AUTO_BOOT},
+                                       {"auto_dl", required_argument, 0, AUTO_DOWNLOAD},
+
+                                       {"pri_addr", required_argument, 0, PRI_ADDR},
+                                       {"pri_file", required_argument, 0, PRI_FILE},
+
+                                       {"lan_ip", required_argument, 0, ETH0_IP},
+                                       {"lan_mask", required_argument, 0, ETH0_MASK},
+                                       {"lan_gw", required_argument, 0, ETH0_GW},
+                                       {"tftpd  ", required_argument, 0, TFTPD},
+
+                                       {"eth1_mac", required_argument, 0, ETH1_MAC},
+                                       {"eth1_ip", required_argument, 0, ETH1_IP},
+                                       {"eth1_mask", required_argument, 0, ETH1_MASK},
+                                       {"eth1_gw", required_argument, 0, ETH1_GW},
+
+                                       {"wifi0_mac", required_argument, 0, WIFI0_MAC},
+                                       {"wifi0_ip", required_argument, 0, WIFI0_IP},
+                                       {"wifi0_mask", required_argument, 0, WIFI0_MASK},
+                                       {"wifi0_gw", required_argument, 0, WIFI0_GW},
 #if (USE_WIFI >= 2)
-	{"wifi1_mac", required_argument, 0, WIFI1_MAC},
-	{"wifi1_ip", required_argument, 0, WIFI1_IP},
-	{"wifi1_mask", required_argument, 0, WIFI1_MASK},
-	{"wifi1_gw", required_argument, 0, WIFI1_GW},
+                                       {"wifi1_mac", required_argument, 0, WIFI1_MAC},
+                                       {"wifi1_ip", required_argument, 0, WIFI1_IP},
+                                       {"wifi1_mask", required_argument, 0, WIFI1_MASK},
+                                       {"wifi1_gw", required_argument, 0, WIFI1_GW},
 #endif
-	{"show_info", no_argument, 0, SHOW_INFO},
-	{"show_fdt", no_argument, 0, SHOW_FDT},
-	{0, 0, 0, 0},
+                                       {"show_info", no_argument, 0, SHOW_INFO},
+                                       {"show_fdt", no_argument, 0, SHOW_FDT},
+                                       {0, 0, 0, 0},
 };
 
 struct hint_s {
-	const char *arg;
-	const char *str;
+    const char *arg;
+    const char *str;
 };
 
 static const struct hint_s hint[] = {
-	{"", "force jffs2 oob layout (legacy support)"},
-	{"", "force yaffs oob layout (legacy support)"},
-	{"", "force legacy support on autoplacement enabled mtd device"},
-	{"", "image contains oob data"},
-	{"", "set start address (default is 0)"},
-	{"", "pad to page size"},
-	{"blockalign=1|2|4", "set multiple of eraseblocks to align to"},
-	{"", "don't display progress messages"},
-	{"", "skip head when update if image have"},
-	{"", "display this help and exit"},
-	{"", "output version information and exit"},
-	{"", "Update Ambarella FDT"},
-	{"", "Update Ambarella AMBOOT BLD Partition"},
-	{"", "Update Ambarella AMBOOT PTB Partition"},
-	{"", "Update Ambarella AMBOOT SPL Partition"},
-	{"", "Update Ambarella AMBOOT PBA Partition"},
-	{"", "Update Ambarella AMBOOT SEC Partition "},
-	{"", "Update Ambarella AMBOOT DSP Partition "},
-	{"", "Update Ambarella AMBOOT LNX Partition "},
-	{"", "Update Ambarella AMBOOT SWP Partition "},
-	{"", "Update Ambarella AMBOOT ADD Partition "},
-	{"", "Update Ambarella AMBOOT ADC Partition "},
-	{"", "Update Ambarella AMBOOT PRI Partition "},
-	{"", "Update Ambarella AMBOOT RMD Partition "},
-	{"", "Update Ambarella AMBOOT ROM Partition "},
-	{"", "Update Ambarella AMBOOT BAK Partition "},
-	{"", "Update Ambarella AMBOOT CMD line "},
-	{"hex", "Update Ambarella AMBOOT Partition load flag "},
-	{"hex", "force AMBOOT boot form PTB, safe recovery "},
-	{"hex", "cloud camera upgrade stage flag "},
-//	{"hex", "Update Ambarella AMBOOT Partition load address "},
-	{"hex", "Update Ambarella AMBOOT Partition date "},
-	{"hex", "Update Ambarella AMBOOT Partition version "},
-	{"MAC", "Update Ambarella AMBOOT eth0 MAC "},
-	{"sn", "Update Ambarella AMBOOT SN "},
-	{"hex", "Update Ambarella AMBOOT load linux from nandflash or no "},
-	{"hex", "Update Ambarella AMBOOT load linux from network or no "},
-	{"str", "Update Ambarella updated file name(32bytes) "},
-	{"hex", "Update Ambarella AMBOOT pri_addr "},
-	{"ip", "Update Ambarella AMBOOT eth0 lan ip "},
-	{"ip", "Update Ambarella AMBOOT eth0 lan mask "},
-	{"ip", "Update Ambarella AMBOOT eth0 lan gw "},
-	{"ip", "Update Ambarella AMBOOT eth0 tftpd ip "},
-	{"MAC", "Update Ambarella AMBOOT eth1 MAC "},
-	{"ip", "Update Ambarella AMBOOT eth1 lan ip "},
-	{"ip", "Update Ambarella AMBOOT eth1 lan mask "},
-	{"ip", "Update Ambarella AMBOOT eth1 lan gw "},
-	{"MAC", "Update Ambarella AMBOOT wifi0 MAC "},
-	{"ip", "Update Ambarella AMBOOT wifi0 ip "},
-	{"ip", "Update Ambarella AMBOOT wifi0 mask"},
-	{"ip", "Update Ambarella AMBOOT wifi0 gw "},
+#ifndef CONFIG_BOOT_MEDIA_EMMC
+                                     {"", "force jffs2 oob layout (legacy support)"},
+                                     {"", "force yaffs oob layout (legacy support)"},
+                                     {"", "force legacy support on autoplacement enabled mtd device"},
+                                     {"", "image contains oob data"},
+#endif
+                                     {"", "set start address (default is 0)"},
+                                     {"", "pad to page size"},
+#ifndef CONFIG_BOOT_MEDIA_EMMC
+                                     {"blockalign=1|2|4", "set multiple of eraseblocks to align to"},
+#endif
+                                     {"", "don't display progress messages"},
+                                     {"", "skip head when update if image have"},
+                                     {"", "display this help and exit"},
+                                     {"", "output version information and exit"},
+                                     {"", "Update Ambarella FDT"},
+                                     {"", "Update Ambarella AMBOOT BLD Partition"},
+                                     {"", "Update Ambarella AMBOOT PTB Partition"},
+                                     {"", "Update Ambarella AMBOOT SPL Partition"},
+                                     {"", "Update Ambarella AMBOOT PBA Partition"},
+                                     {"", "Update Ambarella AMBOOT SEC Partition "},
+                                     {"", "Update Ambarella AMBOOT DSP Partition "},
+                                     {"", "Update Ambarella AMBOOT LNX Partition "},
+                                     {"", "Update Ambarella AMBOOT SWP Partition "},
+                                     {"", "Update Ambarella AMBOOT ADD Partition "},
+                                     {"", "Update Ambarella AMBOOT ADC Partition "},
+                                     {"", "Update Ambarella AMBOOT PRI Partition "},
+                                     {"", "Update Ambarella AMBOOT RMD Partition "},
+                                     {"", "Update Ambarella AMBOOT ROM Partition "},
+                                     {"", "Update Ambarella AMBOOT BAK Partition "},
+                                     {"", "Update Ambarella AMBOOT CMD line "},
+                                     {"", "Update Ambarella AMBOOT Boot command "},
+                                     {"hex", "Update Ambarella AMBOOT Partition load flag "},
+                                     {"hex", "force AMBOOT boot form PTB, safe recovery "},
+                                     {"hex", "cloud camera upgrade stage flag "},
+                                     //	{"hex", "Update Ambarella AMBOOT Partition load address "},
+                                     {"hex", "Update Ambarella AMBOOT Partition date "},
+                                     {"hex", "Update Ambarella AMBOOT Partition version "},
+                                     {"MAC", "Update Ambarella AMBOOT eth0 MAC "},
+                                     {"sn", "Update Ambarella AMBOOT SN "},
+                                     {"hex", "Update Ambarella AMBOOT load linux from nandflash or no "},
+                                     {"hex", "Update Ambarella AMBOOT load linux from network or no "},
+                                     {"str", "Update Ambarella updated file name(32bytes) "},
+                                     {"hex", "Update Ambarella AMBOOT pri_addr "},
+                                     {"ip", "Update Ambarella AMBOOT eth0 lan ip "},
+                                     {"ip", "Update Ambarella AMBOOT eth0 lan mask "},
+                                     {"ip", "Update Ambarella AMBOOT eth0 lan gw "},
+                                     {"ip", "Update Ambarella AMBOOT eth0 tftpd ip "},
+                                     {"MAC", "Update Ambarella AMBOOT eth1 MAC "},
+                                     {"ip", "Update Ambarella AMBOOT eth1 lan ip "},
+                                     {"ip", "Update Ambarella AMBOOT eth1 lan mask "},
+                                     {"ip", "Update Ambarella AMBOOT eth1 lan gw "},
+                                     {"MAC", "Update Ambarella AMBOOT wifi0 MAC "},
+                                     {"ip", "Update Ambarella AMBOOT wifi0 ip "},
+                                     {"ip", "Update Ambarella AMBOOT wifi0 mask"},
+                                     {"ip", "Update Ambarella AMBOOT wifi0 gw "},
 #if (USE_WIFI >= 2)
-	{"MAC", "Update Ambarella AMBOOT wifi1 MAC "},
-	{"ip", "Update Ambarella AMBOOT wifi1 ip "},
-	{"ip", "Update Ambarella AMBOOT wifi1 mask"},
-	{"ip", "Update Ambarella AMBOOT wifi1 gw "},
+                                     {"MAC", "Update Ambarella AMBOOT wifi1 MAC "},
+                                     {"ip", "Update Ambarella AMBOOT wifi1 ip "},
+                                     {"ip", "Update Ambarella AMBOOT wifi1 mask"},
+                                     {"ip", "Update Ambarella AMBOOT wifi1 gw "},
 #endif
-	{"",  "Show Ambarella AMBOOT information "},
-	{"",  "Show Ambarella AMBOOT FDT header information "},
+                                     {"",  "Show Ambarella AMBOOT information "},
+                                     {"",  "Show Ambarella AMBOOT FDT header information "},
 
 };
 
 static void usage(void)
 {
-	int i;
-	printf("Usage:upgrade_partition [OPTION] MTD_DEVICE INPUTFILE\n"
-			"Writes to the specified MTD device.\n"
-			"\n");
-	for (i = 0; i < sizeof(long_options) / sizeof(long_options[0]) - 1; i++) {
-		if (isalpha(long_options[i].val))
-			printf("-%c ", long_options[i].val);
-		else
-			printf("   ");
-		printf("--%s", long_options[i].name);
-		if (hint[i].arg[0] != 0)
-			printf(" [%s]", hint[i].arg);
-		printf("\t%s\n", hint[i].str);
-	}
-	printf("\n");
+  int i;
+  printf("Usage:upgrade_partition [OPTION] MTD_DEVICE INPUTFILE\n"
+      "Writes to the specified MTD device.\n"
+      "\n");
+  for (i = 0; i < sizeof(long_options) / sizeof(long_options[0]) - 1; i++) {
+    if (isalpha(long_options[i].val))
+      printf("-%c ", long_options[i].val);
+    else
+      printf("   ");
+    printf("--%s", long_options[i].name);
+    if (hint[i].arg[0] != 0)
+      printf(" [%s]", hint[i].arg);
+    printf("\t%s\n", hint[i].str);
+  }
+  printf("\n");
 }
 #if 1
 /**
@@ -615,91 +657,95 @@ static void usage(void)
  */
 static int str_to_hwaddr(const char *bufp, uint8_t *hwaddr)
 {
-	unsigned char *ptr;
-	int i, j;
-	unsigned char val;
-	unsigned char c;
-
-	ptr = hwaddr;
-	i = 0;
-	do {
-        j = val = 0;
-
-		/* We might get a semicolon here - not required. */
-		if (i && (*bufp == ':')) {
-			bufp++;
-		}
-
-		do {
-			c = *bufp;
-			if (((unsigned char)(c - '0')) <= 9) {
-				c -= '0';
-			} else if (((unsigned char)((c | 0x20) - 'a')) <= 5) {
-				c = (c | 0x20) - ('a' - 10);
-			} else if (j && (c == ':' || c == 0)) {
-				break;
-			} else {
-				return -1;
-			}
-			++bufp;
-			val <<= 4;
-			val += c;
-		} while (++j < 2);
-		*ptr++ = val;
-	} while (++i < MAC_SIZE);
-
-	return (int) (*bufp);   /* Error if we don't end at end of string. */
+  unsigned char *ptr;
+  int i, j;
+  unsigned char val;
+  unsigned char c;
+
+  ptr = hwaddr;
+  i = 0;
+  do {
+    j = val = 0;
+
+    /* We might get a semicolon here - not required. */
+    if (i && (*bufp == ':')) {
+      bufp++;
+    }
+
+    do {
+      c = *bufp;
+      if (((unsigned char)(c - '0')) <= 9) {
+        c -= '0';
+      } else if (((unsigned char)((c | 0x20) - 'a')) <= 5) {
+        c = (c | 0x20) - ('a' - 10);
+      } else if (j && (c == ':' || c == 0)) {
+        break;
+      } else {
+        return -1;
+      }
+      ++bufp;
+      val <<= 4;
+      val += c;
+    } while (++j < 2);
+    *ptr++ = val;
+  } while (++i < MAC_SIZE);
+
+  return (int) (*bufp);   /* Error if we don't end at end of string. */
 }
 
 static int str_to_ipaddr(const char *src, uint32_t *addr)
 {
-	int saw_digit, octets, ch;
-	unsigned char tmp[4], *tp;
-
-	saw_digit = 0;
-	octets = 0;
-	*(tp = tmp) = 0;
-	while ((ch = *src++) != '\0') {
-
-		if (ch >= '0' && ch <= '9') {
-			unsigned int new = *tp * 10 + (ch - '0');
-
-			if (new > 255)
-				return (0);
-			*tp = new;
-			if (! saw_digit) {
-				if (++octets > 4)
-					return (0);
-				saw_digit = 1;
-			}
-		} else if (ch == '.' && saw_digit) {
-			if (octets == 4)
-                                return (0);
-			*++tp = 0;
-			saw_digit = 0;
-		} else
-			return -1;
-        }
-	if (octets < 4)
-		return -2;
-	memcpy(addr, tmp, 4);
-
-	return 0;
+  int saw_digit, octets, ch;
+  unsigned char tmp[4], *tp;
+
+  saw_digit = 0;
+  octets = 0;
+  *(tp = tmp) = 0;
+  while ((ch = *src++) != '\0') {
+
+    if (ch >= '0' && ch <= '9') {
+      unsigned int new = *tp * 10 + (ch - '0');
+
+      if (new > 255)
+        return (0);
+      *tp = new;
+      if (! saw_digit) {
+        if (++octets > 4)
+          return (0);
+        saw_digit = 1;
+      }
+    } else if (ch == '.' && saw_digit) {
+      if (octets == 4)
+        return (0);
+      *++tp = 0;
+      saw_digit = 0;
+    } else
+      return -1;
+  }
+  if (octets < 4)
+    return -2;
+  memcpy(addr, tmp, 4);
+
+  return 0;
 }
 #endif
 static char     *mtd_device, *img;
 static int      mtdoffset = 0;
 static int      quiet = 0;
-static int      writeoob = 0;
 static int      skip_head = 0;
-static int      forcejffs2 = 0;
-static int      forceyaffs = 0;
-static int      forcelegacy = 0;
 static int      pad = 0;
 static int		update_fdt = 0;
 static int		show_fdt_flag = 0;
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+static char     ptb_device[1024] = "/dev/mmcblk0p3";   /*kernel v3.10 amboot ptb is the mtd2 */
+#else
+static int      writeoob = 0;
+static int      forcejffs2 = 0;
+static int      forceyaffs = 0;
+static int      forcelegacy = 0;
 static int      blockalign = 1; /*default to using 16K block size */
 static char     ptb_device[1024] = "/dev/mtd2";   /*kernel v3.10 amboot ptb is the mtd2 */
+#endif
 static int      ambarella_ptb = 0;
 static int      ambarella_bld = 0;
 static int      ambarella_spl = 0;
@@ -715,6 +761,7 @@ static int      ambarella_rmd = 0;
 static int      ambarella_rom = 0;
 static int      ambarella_bak = 0;
 static int      ambarella_cmd = 0;
+static int      ambarella_boot_command = 0;
 static uint32_t ambarella_flpart_flag = 0;
 //static uint32_t ambarella_flpart_mem_addr = 0;
 static uint32_t ambarella_flpart_version = 0;
@@ -722,6 +769,7 @@ static uint32_t ambarella_flpart_date = 0;
 static int      ambarella_force_ptb = 0;
 static int      ambarella_ptb_data = 0;
 static char     ambarella_cmdline[CMD_LINE_SIZE];
+static char		ambarella_bootcmd[BOOT_COMMAND_MAX];
 static int      ambarella_skip_img = 0;
 
 static int      ambarella_sn = 0;
@@ -806,355 +854,364 @@ static int      ambarella_upgrade_status_data = 0;
 
 static nand_update_global_t *ptr_update_G;
 
+#ifndef CONFIG_BOOT_MEDIA_EMMC
 static void init_nand_update_global(nand_update_global_t *pG)
 {
-	pG->none_oobinfo.useecc = MTD_NANDECC_OFF;
-	pG->autoplace_oobinfo.useecc = MTD_NANDECC_AUTOPLACE;
-
-	pG->jffs2_oobinfo.useecc = MTD_NANDECC_PLACE;
-	pG->jffs2_oobinfo.eccbytes = 6;
-	pG->jffs2_oobinfo.eccpos[0] = 0;
-	pG->jffs2_oobinfo.eccpos[1] = 1;
-	pG->jffs2_oobinfo.eccpos[2] = 2;
-	pG->jffs2_oobinfo.eccpos[3] = 3;
-	pG->jffs2_oobinfo.eccpos[4] = 6;
-	pG->jffs2_oobinfo.eccpos[5] = 7;
-
-	pG->yaffs_oobinfo.useecc = MTD_NANDECC_PLACE;
-	pG->yaffs_oobinfo.eccbytes = 6;
-	pG->yaffs_oobinfo.eccpos[0] = 8;
-	pG->yaffs_oobinfo.eccpos[1] = 9;
-	pG->yaffs_oobinfo.eccpos[2] = 10;
-	pG->yaffs_oobinfo.eccpos[3] = 13;
-	pG->yaffs_oobinfo.eccpos[4] = 14;
-	pG->yaffs_oobinfo.eccpos[5] = 15;
-
-	memset(pG->oobbuf, 0xff, sizeof(pG->oobbuf));
+  pG->none_oobinfo.useecc = MTD_NANDECC_OFF;
+  pG->autoplace_oobinfo.useecc = MTD_NANDECC_AUTOPLACE;
+
+  pG->jffs2_oobinfo.useecc = MTD_NANDECC_PLACE;
+  pG->jffs2_oobinfo.eccbytes = 6;
+  pG->jffs2_oobinfo.eccpos[0] = 0;
+  pG->jffs2_oobinfo.eccpos[1] = 1;
+  pG->jffs2_oobinfo.eccpos[2] = 2;
+  pG->jffs2_oobinfo.eccpos[3] = 3;
+  pG->jffs2_oobinfo.eccpos[4] = 6;
+  pG->jffs2_oobinfo.eccpos[5] = 7;
+
+  pG->yaffs_oobinfo.useecc = MTD_NANDECC_PLACE;
+  pG->yaffs_oobinfo.eccbytes = 6;
+  pG->yaffs_oobinfo.eccpos[0] = 8;
+  pG->yaffs_oobinfo.eccpos[1] = 9;
+  pG->yaffs_oobinfo.eccpos[2] = 10;
+  pG->yaffs_oobinfo.eccpos[3] = 13;
+  pG->yaffs_oobinfo.eccpos[4] = 14;
+  pG->yaffs_oobinfo.eccpos[5] = 15;
+
+  memset(pG->oobbuf, 0xff, sizeof(pG->oobbuf));
 
 }
-
+#endif
 static void process_options (int argc, char *argv[])
 {
-	int error = 0;
-	int ch;
-	int option_index = 0;
-	while ((ch = getopt_long(argc, argv, short_options, long_options, &option_index)) != -1) {
-		switch (ch) {
-			case HELP:
-				usage();
-				break;
-			case VERSION_INFO:
-				display_version();
-				break;
-			case AUTO_DOWNLOAD:
-				ambarella_auto_dl = 1;
-				ambarella_auto_dl_data=strtoul (optarg, NULL, 0);
-				ambarella_skip_img = 1;
-				break;
-			case AUTO_BOOT:
-				ambarella_auto_boot = 1;
-				ambarella_auto_boot_data=strtoul (optarg, NULL, 0);
-				ambarella_skip_img = 1;
-				break;
-			case PRI_ADDR:
-				ambarella_pri_addr = 1;
-				ambarella_pri_addr_data = strtoul (optarg, NULL, 0);
-				ambarella_skip_img = 1;
-				break;
-			case PRI_FILE:
-				ambarella_pri_file = 1;
-				strncpy(ambarella_pri_file_data, optarg, SN_SIZE);
-				ambarella_skip_img = 1;
-				break;
-			case ETH0_IP:
-				ambarella_lan_ip=1;
-				if (str_to_ipaddr(optarg,&ambarella_lan_ip_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case ETH0_MASK:
-				ambarella_lan_mask = 1;
-				if (str_to_ipaddr(optarg,&ambarella_lan_mask_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case ETH0_GW:
-				ambarella_lan_gw = 1;
-				if (str_to_ipaddr(optarg,&ambarella_lan_gw_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case TFTPD:
-				ambarella_tftpd = 1;
-				if (str_to_ipaddr(optarg,&ambarella_tftpd_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-
-			case ETH1_MAC:
-				if (str_to_hwaddr(optarg, ambarella_eth1_mac) != 0) {
-					perror ("hwaddr error!\n");
-					error = 1;
-				}
-				ambarella_eth1 = 1;
-				ambarella_skip_img = 1;
-				break;
-			case ETH1_IP:
-				ambarella_eth1_ip=1;
-				if (str_to_ipaddr(optarg,&ambarella_eth1_ip_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case ETH1_MASK:
-				ambarella_eth1_mask = 1;
-				if (str_to_ipaddr(optarg,&ambarella_eth1_mask_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case ETH1_GW:
-				ambarella_eth1_gw=1;
-				if (str_to_ipaddr(optarg,&ambarella_eth1_gw_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-
-			case WIFI0_MAC:
-				if (str_to_hwaddr(optarg, ambarella_wifi0_mac) != 0) {
-					perror ("hwaddr error!\n");
-					error = 1;
-				}
-				ambarella_wifi0 = 1;
-				ambarella_skip_img = 1;
-				break;
-			case WIFI0_IP:
-				ambarella_wifi0_ip = 1;
-				if (str_to_ipaddr(optarg,&ambarella_wifi0_ip_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case WIFI0_MASK:
-				ambarella_wifi0_mask = 1;
-				if (str_to_ipaddr(optarg,&ambarella_wifi0_mask_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case WIFI0_GW:
-				ambarella_wifi0_gw = 1;
-				if (str_to_ipaddr(optarg,&ambarella_wifi0_gw_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			#if (USE_WIFI >= 2)
-			case WIFI1_MAC:
-				if (str_to_hwaddr(optarg, ambarella_wifi1_mac) != 0) {
-					perror ("hwaddr error!\n");
-					error = 1;
-				}
-				ambarella_wifi1 = 1;
-				ambarella_skip_img = 1;
-				break;
-			case WIFI1_IP:
-				ambarella_wifi1_ip = 1;
-				if (str_to_ipaddr(optarg,&ambarella_wifi1_ip_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case WIFI1_MASK:
-				ambarella_wifi1_mask = 1;
-				if (str_to_ipaddr(optarg,&ambarella_wifi1_mask_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			case WIFI1_GW:
-				ambarella_wifi1_gw = 1;
-				if (str_to_ipaddr(optarg,&ambarella_wifi1_gw_data))
-				{
-					printf ("IP error \n");
-					return;
-				}
-				ambarella_skip_img = 1;
-				break;
-			#endif
-
-			case SHOW_INFO:
-				ambarella_show_info_flag = 1;
-				ambarella_skip_img = 1;
-				break;
-			case SHOW_FDT:
-				ambarella_show_info_flag = 1;
-				show_fdt_flag = 1;
-				ambarella_skip_img = 1;
-				break;
-			case 'q':
-				quiet = 1;
-				break;
-			case 'j':
-				forcejffs2 = 1;
-				break;
-			case 'y':
-				forceyaffs = 1;
-				break;
-			case 'f':
-				forcelegacy = 1;
-				break;
-			case 'o':
-				writeoob = 1;
-				break;
-			case 'p':
-				pad = 1;
-				break;
-			case 's':
-				mtdoffset = strtol (optarg, NULL, 0);
-				break;
-			case 'b':
-				blockalign = atoi (optarg);
-				break;
-			case 't':
-				skip_head = 1;
-				break;
-			case 'd':
-				update_fdt = 1;
-				img = argv[optind];
-				ambarella_skip_img = 1;
-				break;
-			case 'T':
-				strncpy(ptb_device, optarg, sizeof(ptb_device));
-				break;
-			case 'K':
-				ambarella_pri = 1;
-				break;
-			case 'M':
-				ambarella_rmd = 1;
-				break;
-			case 'R':
-				ambarella_rom = 1;
-				break;
-			case 'B':
-				ambarella_bak = 1;
-				break;
-			case 'A':
-				ambarella_ptb = 1;
-				break;
-			case 'G':
-				ambarella_bld = 1;
-				break;
-			case 'H':
-				ambarella_spl = 1;
-				break;
-			case 'Q':
-				ambarella_pba = 1;
-				break;
-			case 'I':
-				ambarella_sec = 1;
-				break;
-			case 'U':
-				ambarella_dsp = 1;
-				break;
-			case 'W':
-				ambarella_lnx = 1;
-				break;
-			case 'X':
-				ambarella_swp = 1;
-				break;
-			case 'Y':
-				ambarella_add = 1;
-				break;
-			case 'Z':
-				ambarella_adc = 1;
-				break;
-			case 'C':
-				ambarella_cmd = 1;
-					//strfromargv(ambarella_cmdline, sizeof(ambarella_cmdline), argc - 2, &argv[2]);
-					strncpy(ambarella_cmdline, optarg, CMD_LINE_SIZE);
-				ambarella_skip_img = 1;
-				break;
-			case 'F':
-				ambarella_flpart_flag = strtoul (optarg, NULL, 0);
-				break;
-			#if 0
-			case 'L':
-				ambarella_flpart_mem_addr = strtoul (optarg, NULL, 0);
-				break;
-			#endif
-			case 'V':
-				ambarella_flpart_version = strtoul (optarg, NULL, 0);
-				break;
-			case 'D':
-				ambarella_flpart_date = strtoul (optarg, NULL, 0);
-				break;
-			case 'S':
-				ambarella_force_ptb = 1;
-				ambarella_ptb_data = atoi (optarg);
-				ambarella_skip_img = 1;
-				break;
-			case 'E':
-				if (str_to_hwaddr(optarg, ambarella_eth_mac) != 0) {
-					perror ("hwaddr error!\n");
-					error = 1;
-				}
-				ambarella_eth = 1;
-				ambarella_skip_img = 1;
-				break;
-			case 'N':
-				strncpy(ambarella_sn_data, optarg, SN_SIZE);
-				ambarella_sn = 1;
-				ambarella_skip_img = 1;
-				break;
-			case 'P':
-				ambarella_set_upgrade_status = 1;
-				ambarella_upgrade_status_data = atoi (optarg);
-				ambarella_skip_img = 1;
-				break;
-			case '?':
-				error = 1;
-				break;
-		}
-	}
-
-	if ((((argc - optind) != 2) && (ambarella_skip_img != 1)) || error)
-		usage ();
-
-	if ((argc - optind) == 2) {
-		mtd_device = argv[optind++];
-		img = argv[optind];
-		ambarella_skip_img = 0;
-	}
+  int error = 0;
+  int ch;
+  int option_index = 0;
+  while ((ch = getopt_long(argc, argv, short_options, long_options, &option_index)) != -1) {
+    switch (ch) {
+      case HELP:
+        usage();
+        break;
+      case VERSION_INFO:
+        display_version();
+        break;
+      case AUTO_DOWNLOAD:
+        ambarella_auto_dl = 1;
+        ambarella_auto_dl_data=strtoul (optarg, NULL, 0);
+        ambarella_skip_img = 1;
+        break;
+      case AUTO_BOOT:
+        ambarella_auto_boot = 1;
+        ambarella_auto_boot_data=strtoul (optarg, NULL, 0);
+        ambarella_skip_img = 1;
+        break;
+      case PRI_ADDR:
+        ambarella_pri_addr = 1;
+        ambarella_pri_addr_data = strtoul (optarg, NULL, 0);
+        ambarella_skip_img = 1;
+        break;
+      case PRI_FILE:
+        ambarella_pri_file = 1;
+        strncpy(ambarella_pri_file_data, optarg, SN_SIZE);
+        ambarella_skip_img = 1;
+        break;
+      case ETH0_IP:
+        ambarella_lan_ip=1;
+        if (str_to_ipaddr(optarg,&ambarella_lan_ip_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case ETH0_MASK:
+        ambarella_lan_mask = 1;
+        if (str_to_ipaddr(optarg,&ambarella_lan_mask_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case ETH0_GW:
+        ambarella_lan_gw = 1;
+        if (str_to_ipaddr(optarg,&ambarella_lan_gw_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case TFTPD:
+        ambarella_tftpd = 1;
+        if (str_to_ipaddr(optarg,&ambarella_tftpd_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+
+      case ETH1_MAC:
+        if (str_to_hwaddr(optarg, ambarella_eth1_mac) != 0) {
+          perror ("hwaddr error!\n");
+          error = 1;
+        }
+        ambarella_eth1 = 1;
+        ambarella_skip_img = 1;
+        break;
+      case ETH1_IP:
+        ambarella_eth1_ip=1;
+        if (str_to_ipaddr(optarg,&ambarella_eth1_ip_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case ETH1_MASK:
+        ambarella_eth1_mask = 1;
+        if (str_to_ipaddr(optarg,&ambarella_eth1_mask_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case ETH1_GW:
+        ambarella_eth1_gw=1;
+        if (str_to_ipaddr(optarg,&ambarella_eth1_gw_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+
+      case WIFI0_MAC:
+        if (str_to_hwaddr(optarg, ambarella_wifi0_mac) != 0) {
+          perror ("hwaddr error!\n");
+          error = 1;
+        }
+        ambarella_wifi0 = 1;
+        ambarella_skip_img = 1;
+        break;
+      case WIFI0_IP:
+        ambarella_wifi0_ip = 1;
+        if (str_to_ipaddr(optarg,&ambarella_wifi0_ip_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case WIFI0_MASK:
+        ambarella_wifi0_mask = 1;
+        if (str_to_ipaddr(optarg,&ambarella_wifi0_mask_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case WIFI0_GW:
+        ambarella_wifi0_gw = 1;
+        if (str_to_ipaddr(optarg,&ambarella_wifi0_gw_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+#if (USE_WIFI >= 2)
+      case WIFI1_MAC:
+        if (str_to_hwaddr(optarg, ambarella_wifi1_mac) != 0) {
+          perror ("hwaddr error!\n");
+          error = 1;
+        }
+        ambarella_wifi1 = 1;
+        ambarella_skip_img = 1;
+        break;
+      case WIFI1_IP:
+        ambarella_wifi1_ip = 1;
+        if (str_to_ipaddr(optarg,&ambarella_wifi1_ip_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case WIFI1_MASK:
+        ambarella_wifi1_mask = 1;
+        if (str_to_ipaddr(optarg,&ambarella_wifi1_mask_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+      case WIFI1_GW:
+        ambarella_wifi1_gw = 1;
+        if (str_to_ipaddr(optarg,&ambarella_wifi1_gw_data))
+        {
+          printf ("IP error \n");
+          return;
+        }
+        ambarella_skip_img = 1;
+        break;
+#endif
+
+      case SHOW_INFO:
+        ambarella_show_info_flag = 1;
+        ambarella_skip_img = 1;
+        break;
+      case SHOW_FDT:
+        ambarella_show_info_flag = 1;
+        show_fdt_flag = 1;
+        ambarella_skip_img = 1;
+        break;
+      case 'q':
+        quiet = 1;
+        break;
+#ifndef CONFIG_BOOT_MEDIA_EMMC
+      case 'j':
+        forcejffs2 = 1;
+        break;
+      case 'y':
+        forceyaffs = 1;
+        break;
+      case 'f':
+        forcelegacy = 1;
+        break;
+      case 'o':
+        writeoob = 1;
+        break;
+      case 'b':
+        blockalign = atoi (optarg);
+        break;
+#endif
+      case 'p':
+        pad = 1;
+        break;
+      case 's':
+        mtdoffset = strtol (optarg, NULL, 0);
+        break;
+      case 't':
+        skip_head = 1;
+        break;
+      case 'd':
+        update_fdt = 1;
+        img = argv[optind];
+        ambarella_skip_img = 1;
+        break;
+      case 'T':
+        strncpy(ptb_device, optarg, sizeof(ptb_device));
+        break;
+      case 'K':
+        ambarella_pri = 1;
+        break;
+      case 'M':
+        ambarella_rmd = 1;
+        break;
+      case 'R':
+        ambarella_rom = 1;
+        break;
+      case 'B':
+        ambarella_bak = 1;
+        break;
+      case 'A':
+        ambarella_ptb = 1;
+        break;
+      case 'G':
+        ambarella_bld = 1;
+        break;
+      case 'H':
+        ambarella_spl = 1;
+        break;
+      case 'Q':
+        ambarella_pba = 1;
+        break;
+      case 'I':
+        ambarella_sec = 1;
+        break;
+      case 'U':
+        ambarella_dsp = 1;
+        break;
+      case 'W':
+        ambarella_lnx = 1;
+        break;
+      case 'X':
+        ambarella_swp = 1;
+        break;
+      case 'Y':
+        ambarella_add = 1;
+        break;
+      case 'Z':
+        ambarella_adc = 1;
+        break;
+      case 'C':
+        ambarella_cmd = 1;
+        //strfromargv(ambarella_cmdline, sizeof(ambarella_cmdline), argc - 2, &argv[2]);
+        strncpy(ambarella_cmdline, optarg, CMD_LINE_SIZE);
+        ambarella_skip_img = 1;
+        break;
+
+      case 'c':
+        ambarella_boot_command = 1;
+        strncpy(ambarella_bootcmd, optarg, BOOT_COMMAND_MAX);
+        ambarella_skip_img = 1;
+        break;
+      case 'F':
+        ambarella_flpart_flag = strtoul (optarg, NULL, 0);
+        break;
+#if 0
+      case 'L':
+        ambarella_flpart_mem_addr = strtoul (optarg, NULL, 0);
+        break;
+#endif
+      case 'V':
+        ambarella_flpart_version = strtoul (optarg, NULL, 0);
+        break;
+      case 'D':
+        ambarella_flpart_date = strtoul (optarg, NULL, 0);
+        break;
+      case 'S':
+        ambarella_force_ptb = 1;
+        ambarella_ptb_data = atoi (optarg);
+        ambarella_skip_img = 1;
+        break;
+      case 'E':
+        if (str_to_hwaddr(optarg, ambarella_eth_mac) != 0) {
+          perror ("hwaddr error!\n");
+          error = 1;
+        }
+        ambarella_eth = 1;
+        ambarella_skip_img = 1;
+        break;
+      case 'N':
+        strncpy(ambarella_sn_data, optarg, SN_SIZE);
+        ambarella_sn = 1;
+        ambarella_skip_img = 1;
+        break;
+      case 'P':
+        ambarella_set_upgrade_status = 1;
+        ambarella_upgrade_status_data = atoi (optarg);
+        ambarella_skip_img = 1;
+        break;
+      case '?':
+        error = 1;
+        break;
+    }
+  }
+
+  if ((((argc - optind) != 2) && (ambarella_skip_img != 1)) || error)
+    usage ();
+
+  if ((argc - optind) == 2) {
+    mtd_device = argv[optind++];
+    img = argv[optind];
+    ambarella_skip_img = 0;
+  }
 }
 
 /**
@@ -1163,9 +1220,9 @@ static void process_options (int argc, char *argv[])
 #if 0
 static void flprog_get_dev_param(flpart_table_t *table)
 {
-	table->dev.usbdl_mode = 0;
-	table->dev.auto_boot = 1;
-	memset(table->dev.cmdline, 0x0, sizeof(table->dev.cmdline));
+  table->dev.usbdl_mode = 0;
+  table->dev.auto_boot = 1;
+  memset(table->dev.cmdline, 0x0, sizeof(table->dev.cmdline));
 }
 #endif
 
@@ -1174,90 +1231,99 @@ static void flprog_get_dev_param(flpart_table_t *table)
  */
 static int flprog_get_part_table (uint8_t **ptb_buf)
 {
-	int ret, i, count;
-	int ptb_fd, ptb_offset;
-	struct mtd_info_user ptb_meminfo;
-	loff_t ptb_bad_offset;
-	flpart_table_t *table;
-
-	/* Open the PTB device */
-	if ((ptb_fd = open(ptb_device, O_RDONLY)) == -1) {
-		perror("open PTB");
-		exit(1);
-	}
-
-	/* Fill in MTD device capability structure */
-	if ((ret = ioctl(ptb_fd, MEMGETINFO, &ptb_meminfo)) != 0) {
-		perror("PTB MEMGETINFO");
-		goto closeall;
-	}
-
-	for (ptb_offset = 0; ptb_offset < ptb_meminfo.size; ptb_offset += ptb_meminfo.erasesize) {
-		ptb_bad_offset = ptb_offset;
-		if ((ret = ioctl(ptb_fd, MEMGETBADBLOCK, &ptb_bad_offset)) < 0) {
-			perror("ioctl(MEMGETBADBLOCK)");
-			goto closeall;
-		}
-
-		if (ret == 0)
-			break;
-
-		if (!quiet)
-			fprintf (stderr,
-			"Bad block at %x, from %x will be skipped\n",
-			(int)ptb_bad_offset, ptb_offset);
-	}
-	if (ptb_offset >= ptb_meminfo.size) {
-		fprintf(stderr, "Can't find good block in PTB.\n");
-		ret = -1;
-		goto closeall;
-	}
-
-	/* ptb_buf will be freed in flprog_set_part_table() */
-	*ptb_buf = malloc(ptb_meminfo.erasesize);
-	//memset(*ptb_buf, 0x0, ptb_meminfo.erasesize);
-
-	/* Read partition table.
-	 * Note: we need to read and save the entire block data, because the
-	 * entire block will be erased when write partition table back to flash.
-	 * BTW, flpart_meta_t is located in the same block as flpart_table_t
-	 */
-	count = ptb_meminfo.erasesize;
-	if (pread(ptb_fd, *ptb_buf, count, ptb_offset) != count) {
-		perror("pread PTB");
-		ret = -1;
-		free(*ptb_buf);
-		goto closeall;
-	}
-
-	if (update_fdt || show_fdt_flag || ambarella_cmd) {
-		/* dtb would be placed behind flpart_meta_t. */
-		fdt_root = (void *)(*ptb_buf + PTB_HEADER_SIZE + PTB_SIZE + PTB_META_SIZE);
-		if ((fdt_magic(fdt_root) == FDT_MAGIC) &&
-		(fdt_version(fdt_root) >= 17)) {
-			printf("fdt is in the PTB block \n");
-		} else {
-			perror("No FDT behind PTB");
-			fdt_check_error = 1;
-		}
-		if (show_fdt_flag && !fdt_check_error) {
-			display_fdt(fdt_root);
-		}
-	}
-
-	table = PTB_TABLE(*ptb_buf);
-	if (!quiet) {
-		 for(i = 0; i < PART_MAX_WITH_RSV; i++){
-			if( table->part[i].img_len!=0)
-				display_flpart(g_part_str[i], &(table->part[i]));
-		 }
-		 display_dev(&(table->dev));
-	}
-
-closeall:
-	close(ptb_fd);
-
-	return ret;
+  int ptb_fd = -1, ptb_offset = 0;
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+  int ret = 0, i = 0;
+  ssize_t count;
+#else
+  int ret, i, count;
+  struct mtd_info_user ptb_meminfo;
+  loff_t ptb_bad_offset;
+#endif
+  flpart_table_t *table;
+
+  /* Open the PTB device */
+  if ((ptb_fd = open(ptb_device, O_RDONLY)) == -1) {
+    perror("open PTB");
+    exit(1);
+  }
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+  /* ptb_buf will be freed in flprog_set_part_table() */
+  *ptb_buf = malloc(AMBOOT_PTB_BUF_SIZE);
+  count = AMBOOT_PTB_BUF_SIZE;
+#else
+  /* Fill in MTD device capability structure */
+  if ((ret = ioctl(ptb_fd, MEMGETINFO, &ptb_meminfo)) != 0) {
+    perror("PTB MEMGETINFO");
+    goto closeall;
+  }
+
+  for (ptb_offset = 0; ptb_offset < ptb_meminfo.size; ptb_offset += ptb_meminfo.erasesize) {
+    ptb_bad_offset = ptb_offset;
+    if ((ret = ioctl(ptb_fd, MEMGETBADBLOCK, &ptb_bad_offset)) < 0) {
+      perror("ioctl(MEMGETBADBLOCK)");
+      goto closeall;
+    }
+
+    if (ret == 0)
+      break;
+
+    if (!quiet)
+      fprintf (stderr,
+               "Bad block at %x, from %x will be skipped\n",
+               (int)ptb_bad_offset, ptb_offset);
+  }
+  if (ptb_offset >= ptb_meminfo.size) {
+    fprintf(stderr, "Can't find good block in PTB.\n");
+    ret = -1;
+    goto closeall;
+  }
+  /* ptb_buf will be freed in flprog_set_part_table() */
+  *ptb_buf = malloc(ptb_meminfo.erasesize);
+  count = ptb_meminfo.erasesize;
+#endif
+  //memset(*ptb_buf, 0x0, ptb_meminfo.erasesize);
+
+  /* Read partition table.
+   * Note: we need to read and save the entire block data, because the
+   * entire block will be erased when write partition table back to flash.
+   * BTW, flpart_meta_t is located in the same block as flpart_table_t
+   */
+  if (pread(ptb_fd, *ptb_buf, count, ptb_offset) != count) {
+    perror("pread PTB");
+    ret = -1;
+    free(*ptb_buf);
+    goto closeall;
+  }
+
+  if (update_fdt || show_fdt_flag || ambarella_cmd) {
+    /* dtb would be placed behind flpart_meta_t. */
+    fdt_root = (void *)(*ptb_buf + PTB_HEADER_SIZE + PTB_SIZE + PTB_META_SIZE);
+    if ((fdt_magic(fdt_root) == FDT_MAGIC) &&
+        (fdt_version(fdt_root) >= 17)) {
+      printf("fdt is in the PTB block \n");
+    } else {
+      perror("No FDT behind PTB");
+      fdt_check_error = 1;
+    }
+    if (show_fdt_flag && !fdt_check_error) {
+      display_fdt(fdt_root);
+    }
+  }
+
+  table = PTB_TABLE(*ptb_buf);
+  if (!quiet) {
+    for(i = 0; i < PART_MAX_WITH_RSV; i++){
+      if( table->part[i].img_len!=0)
+        display_flpart(g_part_str[i], &(table->part[i]));
+    }
+    display_dev(&(table->dev));
+  }
+
+  closeall:
+  close(ptb_fd);
+
+  return ret;
 }
 
 /**
@@ -1265,122 +1331,133 @@ closeall:
  */
 static int flprog_set_part_table(uint8_t **ptb_buf)
 {
-	int ret, i, count, ptb_fd, ptb_offset;
-	struct mtd_info_user ptb_meminfo;
-	loff_t ptb_bad_offset;
-	ptb_header_t *header;
-	u32 offs;
-	flpart_table_t *table = PTB_TABLE(*ptb_buf);
-	/* Open the PTB device */
-	if ((ptb_fd = open(ptb_device, O_RDWR)) == -1) {
-		perror("open PTB");
-		exit(1);
-	}
-
-	/* Fill in MTD device capability structure */
-	if ((ret = ioctl(ptb_fd, MEMGETINFO, &ptb_meminfo)) != 0) {
-		perror("PTB MEMGETINFO");
-		goto closeall;
-	}
-
-	if (PTB_SIZE > ptb_meminfo.erasesize) {
-		fprintf(stderr, "PTB can't fit into erasesize.\n");
-		ret = -1;
-		goto closeall;
-	}
-
-	for (ptb_offset = 0; ptb_offset < ptb_meminfo.size; ptb_offset += ptb_meminfo.erasesize) {
-		ptb_bad_offset = ptb_offset;
-		if ((ret = ioctl(ptb_fd, MEMGETBADBLOCK, &ptb_bad_offset)) < 0) {
-			perror("ioctl(MEMGETBADBLOCK)");
-			goto closeall;
-		}
-
-		if (ret == 0) {
-			/* This isn't a bad block, so erase it first */
-			erase_info_t erase;
-			erase.start = ptb_offset;
-			erase.length = ptb_meminfo.erasesize;
-			if ((ret = ioctl(ptb_fd, MEMERASE, &erase)) != 0) {
-				perror("PTB MEMERASE");
-				continue;
-			}
-			break;
-		}
-
-		if (!quiet)
-			fprintf (stderr,
-				"Bad block at %x, from %x will be skipped\n",
-				(int)ptb_bad_offset, ptb_offset);
-	}
-
-	if (ptb_offset >= ptb_meminfo.size) {
-		fprintf(stderr, "Can't find good block in PTB.\n");
-		ret = -1;
-		goto closeall;
-	}
-
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+  int ret = 0, i = 0, ptb_fd = -1;
+  size_t count;
+#else
+  int ret, i, count, ptb_fd;
+  struct mtd_info_user ptb_meminfo;
+  loff_t ptb_bad_offset;
+#endif
+  ptb_header_t *header;
+  u32 offs;
+  off_t ptb_offset = 0;
+  flpart_table_t *table = PTB_TABLE(*ptb_buf);
+  /* Open the PTB device */
+
+  if ((ptb_fd = open(ptb_device, O_RDWR)) == -1) {
+    perror("open PTB");
+    exit(1);
+  }
+#ifndef CONFIG_BOOT_MEDIA_EMMC
+  /* Fill in MTD device capability structure */
+  if ((ret = ioctl(ptb_fd, MEMGETINFO, &ptb_meminfo)) != 0) {
+    perror("PTB MEMGETINFO");
+    goto closeall;
+  }
+
+  if (PTB_SIZE > ptb_meminfo.erasesize) {
+    fprintf(stderr, "PTB can't fit into erasesize.\n");
+    ret = -1;
+    goto closeall;
+  }
+
+  for (ptb_offset = 0; ptb_offset < ptb_meminfo.size; ptb_offset += ptb_meminfo.erasesize) {
+    ptb_bad_offset = ptb_offset;
+    if ((ret = ioctl(ptb_fd, MEMGETBADBLOCK, &ptb_bad_offset)) < 0) {
+      perror("ioctl(MEMGETBADBLOCK)");
+      goto closeall;
+    }
+
+    if (ret == 0) {
+      /* This isn't a bad block, so erase it first */
+      erase_info_t erase;
+      erase.start = ptb_offset;
+      erase.length = ptb_meminfo.erasesize;
+      if ((ret = ioctl(ptb_fd, MEMERASE, &erase)) != 0) {
+        perror("PTB MEMERASE");
+        continue;
+      }
+      break;
+    }
+
+    if (!quiet)
+      fprintf (stderr,
+               "Bad block at %x, from %x will be skipped\n",
+               (uint32_t)ptb_bad_offset, (uint32_t)ptb_offset);
+  }
+
+  if (ptb_offset >= ptb_meminfo.size) {
+    fprintf(stderr, "Can't find good block in PTB.\n");
+    ret = -1;
+    goto closeall;
+  }
+#endif
 #if 0
-	if (table->dev.magic != FLPART_MAGIC) {
-		memset(&table->dev, 0x0, sizeof(table->dev));
-		flprog_get_dev_param(table);
-		table->dev.magic = FLPART_MAGIC;
-	}
-
-	for(i = 0; i < PART_MAX_WITH_RSV; i++){
-		if (table->part[i].img_len != 0 && table->part[i].magic != FLPART_MAGIC) {
-			memset(&table->part[i], 0x0, sizeof(table->part[i]));
-			table->part[i].magic = FLPART_MAGIC;
-		}
-	}
+  if (table->dev.magic != FLPART_MAGIC) {
+    memset(&table->dev, 0x0, sizeof(table->dev));
+    flprog_get_dev_param(table);
+    table->dev.magic = FLPART_MAGIC;
+  }
+
+  for(i = 0; i < PART_MAX_WITH_RSV; i++){
+    if (table->part[i].img_len != 0 && table->part[i].magic != FLPART_MAGIC) {
+      memset(&table->part[i], 0x0, sizeof(table->part[i]));
+      table->part[i].magic = FLPART_MAGIC;
+    }
+  }
 #else
-	if (table->dev.magic != FLPART_MAGIC) {
-		fprintf(stderr, "Invalid dev magic: 0x%08x(0x%08x)\n",
-			table->dev.magic, FLPART_MAGIC);
-		ret = -1;
-		goto closeall;
-	}
-
-	for(i = 0; i < PART_MAX_WITH_RSV; i++){
-		if (table->part[i].img_len != 0 && table->part[i].magic != FLPART_MAGIC) {
-			fprintf(stderr,
-				"Invalid partition table magic(%d): 0x%08x(0x%08x)\n",
-				i, table->part[i].magic, FLPART_MAGIC);
-			ret = -1;
-			goto closeall;
-		}
-	}
+  if (table->dev.magic != FLPART_MAGIC) {
+    fprintf(stderr, "Invalid dev magic: 0x%08x(0x%08x)\n",
+            table->dev.magic, FLPART_MAGIC);
+    ret = -1;
+    goto closeall;
+  }
+
+  for(i = 0; i < PART_MAX_WITH_RSV; i++){
+    if (table->part[i].img_len != 0 && table->part[i].magic != FLPART_MAGIC) {
+      fprintf(stderr,
+              "Invalid partition table magic(%d): 0x%08x(0x%08x)\n",
+              i, table->part[i].magic, FLPART_MAGIC);
+      ret = -1;
+      goto closeall;
+    }
+  }
 #endif
 
-	header = PTB_HEADER(*ptb_buf);
-	header->magic = PTB_HEADER_MAGIC;
-	header->version = PTB_HEADER_VERSION;
-	/* crc32 calculates all of the data in bld_ptb_buf, only except
-	 * for header->magic and header->crc32 itself */
-	offs = sizeof(uint32_t) * 2;
-	header->crc32 = crc32_amba(*ptb_buf + offs, AMBOOT_PTB_BUF_SIZE - offs);
-	printf("The header crc32 is 0x%08x \n",header->crc32);
-
-	count = ptb_meminfo.erasesize;
-	if (pwrite(ptb_fd, *ptb_buf, count, ptb_offset) != count) {
-		perror ("pwrite PTB");
-		ret = -1;
-		goto closeall;
-	}
-
-	if (!quiet) {
-		for(i = 0;i < PART_MAX_WITH_RSV; i++){
-			if( table->part[i].img_len!=0)
-				display_flpart(g_part_str[i], &table->part[i]);
-		}
-		display_dev(&table->dev);
-	}
-
-closeall:
-	free(*ptb_buf);
-	close(ptb_fd);
-
-	return ret;
+  header = PTB_HEADER(*ptb_buf);
+  header->magic = PTB_HEADER_MAGIC;
+  header->version = PTB_HEADER_VERSION;
+  /* crc32 calculates all of the data in bld_ptb_buf, only except
+   * for header->magic and header->crc32 itself */
+  offs = sizeof(uint32_t) * 2;
+  header->crc32 = crc32_amba(*ptb_buf + offs, AMBOOT_PTB_BUF_SIZE - offs);
+  printf("The header crc32 is 0x%08x \n",header->crc32);
+
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+  count = AMBOOT_PTB_BUF_SIZE;
+#else
+  count = ptb_meminfo.erasesize;
+#endif
+  if (pwrite(ptb_fd, *ptb_buf, count, ptb_offset) != count) {
+    perror ("pwrite PTB");
+    ret = -1;
+    goto closeall;
+  }
+
+  if (!quiet) {
+    for(i = 0;i < PART_MAX_WITH_RSV; i++){
+      if( table->part[i].img_len!=0)
+        display_flpart(g_part_str[i], &table->part[i]);
+    }
+    display_dev(&table->dev);
+  }
+
+  closeall:
+  free(*ptb_buf);
+  close(ptb_fd);
+
+  return ret;
 }
 
 
@@ -1389,578 +1466,738 @@ closeall:
  */
 int main(int argc, char **argv)
 {
-	int cnt, fd, ifd, pagelen, baderaseblock, blockstart = -1;
-	int ret, readlen, oobinfochanged = 0;
-	int image_crc = ~0U, image_length = 0, imglen = 0;
-	uint8_t *ptb_buf = NULL;
-	flpart_table_t *ptb_table;
-	struct nand_oobinfo old_oobinfo;
-	struct mtd_info_user meminfo;
-	struct mtd_oob_buf oob;
-	loff_t offs;
-	unsigned char readbuf[MAX_PAGE_SIZE];
-	unsigned char *preadbuf;
-	int file_offset = mtdoffset;
-	int buf_num = 0;
-	nand_update_file_header_t image_head;
-	uint8_t *fdt_buf = NULL;
-
-	if (argc < 2) {
-		usage();
-		return -1;
-	}
-
-	process_options(argc, argv);
-
-	if (ambarella_skip_img == 1)
-		goto ambarella_process;
-
-	/* Update the partition */
-	{
-		ptr_update_G = malloc(sizeof(nand_update_global_t));
-		if (!ptr_update_G) {
-			perror("can not malloc buffer for update global.\n");
-			exit(1);
-		}
-		init_nand_update_global(ptr_update_G);
-
-		if (pad && writeoob) {
-			fprintf(stderr, "Can't pad when oob data is present.\n");
-			exit(1);
-		}
-		//update_partition_with_img();
-		/* Open the device */
-		if ((fd = open(mtd_device, O_RDWR)) == -1) {
-			perror("open flash");
-			exit(1);
-		}
-
-		/* Fill in MTD device capability structure */
-		if (ioctl(fd, MEMGETINFO, &meminfo) != 0) {
-			perror("MEMGETINFO");
-			close(fd);
-			exit(1);
-		}
-
-		/* Set erasesize to specified number of blocks - to match jffs2
-		 * (virtual) block size */
-		meminfo.erasesize *= blockalign;
-
-		/* Make sure device page sizes are valid */
-		if (!(meminfo.oobsize == 16 && meminfo.writesize == 512) &&
-				!((meminfo.oobsize == 64 && meminfo.writesize == 2048) ||
-				(meminfo.oobsize == 128 && meminfo.writesize == 2048))) {
-			fprintf(stderr, "Unknown flash (not normal NAND)\n");
-			close(fd);
-			exit(1);
-		}
-
-		/*
-		 * force oob layout for jffs2 or yaffs ?
-		 * Legacy support
-		 */
-		if (forcejffs2 || forceyaffs) {
-			if (meminfo.oobsize == 8) {
-				if (forceyaffs) {
-					fprintf (stderr, "YAFSS cannot operate on 256 Byte page size");
-					goto restoreoob;
-				}
-				/* Adjust number of ecc bytes */
-				ptr_update_G->jffs2_oobinfo.eccbytes = 3;
-			}
-		}
-
-		oob.length = meminfo.oobsize;
-		oob.ptr = ptr_update_G->oobbuf;
-
-		/* Open the input file */
-		if ((ifd = open(img, O_RDONLY)) == -1) {
-			perror("open input file");
-			goto restoreoob;
-		}
-
-		// get image length
-		imglen = lseek(ifd, 0, SEEK_END);
-		lseek (ifd, 0, SEEK_SET);
-		if(skip_head)
-		{
-			if(read(ifd, &image_head, sizeof(nand_update_file_header_t)) != sizeof(nand_update_file_header_t))
-			{
-				perror ("File I/O error on input file");
-					goto closeall;
-			}
-			lseek(ifd, image_head.header_size, SEEK_SET);
-			imglen =image_head.payload_size;
-			file_offset +=image_head.header_size;
-		}
-		image_length = imglen;
-
-		pagelen = meminfo.writesize + ((writeoob == 1) ? meminfo.oobsize : 0);
-
-		// Check, if file is pagealigned
-		if ((!pad) && ((imglen % pagelen) != 0)) {
-			fprintf (stderr, "Input file is not page aligned\n");
-			goto closeall;
-		}
-
-		// Check, if length fits into device
-		if ( ((imglen / pagelen) * meminfo.writesize) > (meminfo.size - mtdoffset)) {
-			fprintf (stderr, "Image %d bytes, NAND page %d bytes, OOB area %u bytes, device size %u bytes\n",
-					imglen, pagelen, meminfo.writesize, meminfo.size);
-			perror ("Input file does not fit into device");
-			goto closeall;
-		}
-
-//		crc32_table = crc32_filltable(NULL, 0);
-
-		/* Get data from input and write to the device */
-		while (imglen && (mtdoffset < meminfo.size)) {
-			// new eraseblock , check for bad block(s)
-			// Stay in the loop to be sure if the mtdoffset changes because
-			// of a bad block, that the next block that will be written to
-			// is also checked. Thus avoiding errors if the block(s) after the
-			// skipped block(s) is also bad (number of blocks depending on
-			// the blockalign
-			while (blockstart != (mtdoffset & (~meminfo.erasesize + 1))) {
-				blockstart = mtdoffset & (~meminfo.erasesize + 1);
-				offs = blockstart;
-				baderaseblock = 0;
-				if (!quiet)
-					fprintf (stdout, "Writing data to block %x\n", blockstart);
-
-				/* Check all the blocks in an erase block for bad blocks */
-				do {
-					if ((ret = ioctl(fd, MEMGETBADBLOCK, &offs)) < 0) {
-						perror("ioctl(MEMGETBADBLOCK)");
-						goto closeall;
-					}
-					if (ret == 1) {
-						baderaseblock = 1;
-						if (!quiet)
-							fprintf (stderr, "Bad block at %x, %u block(s) "
-									"from %x will be skipped\n",
-									(int) offs, blockalign, blockstart);
-					}
-
-					if (baderaseblock) {
-						mtdoffset = blockstart + meminfo.erasesize;
-					}
-					offs +=  meminfo.erasesize / blockalign ;
-				} while ( offs < blockstart + meminfo.erasesize );
-
-			}
-
-			readlen = meminfo.writesize;
-			if (pad && (imglen < readlen))
-			{
-				readlen = imglen;
-				memset(ptr_update_G->writebuf + readlen, 0xff, meminfo.writesize - readlen);
-			}
-
-			/* Read Page Data from input file */
-			if ((cnt = pread(ifd, ptr_update_G->writebuf, readlen,file_offset)) != readlen) {
-				if (cnt == 0)	// EOF
-					break;
-				perror ("File I/O error on input file");
-				goto closeall;
-			}
-
-			image_crc = crc32(image_crc, ptr_update_G->writebuf, cnt);
-
-			if (writeoob) {
-				int i, start, len, filled;
-				/* Read OOB data from input file, exit on failure */
-				if ((cnt = pread(ifd, ptr_update_G->oobreadbuf, meminfo.oobsize,file_offset)) != meminfo.oobsize) {
-					perror ("File I/O error on input file");
-					goto closeall;
-				}
-				/*
-				 *  We use autoplacement and have the oobinfo with the autoplacement
-				 * information from the kernel available
-				 *
-				 * Modified to support out of order oobfree segments,
-				 * such as the layout used by diskonchip.c
-				 */
-				if (!oobinfochanged && (old_oobinfo.useecc == MTD_NANDECC_AUTOPLACE)) {
-					for (filled = 0, i = 0; old_oobinfo.oobfree[i][1] && (i < MTD_MAX_OOBFREE_ENTRIES); i++) {
-						/* Set the reserved bytes to 0xff */
-						start = old_oobinfo.oobfree[i][0];
-						len = old_oobinfo.oobfree[i][1];
-						memcpy(ptr_update_G->oobbuf + start,
-								ptr_update_G->oobreadbuf + filled,
-								len);
-						filled += len;
-					}
-				} else {
-					/* Set at least the ecc byte positions to 0xff */
-					start = old_oobinfo.eccbytes;
-					len = meminfo.oobsize - start;
-					memcpy(ptr_update_G->oobbuf + start,
-							ptr_update_G->oobreadbuf + start,
-							len);
-				}
-				/* Write OOB data first, as ecc will be placed in there*/
-				oob.start = mtdoffset;
-				if (ioctl(fd, MEMWRITEOOB, &oob) != 0) {
-					perror ("ioctl(MEMWRITEOOB)");
-					goto closeall;
-				}
-				imglen -= meminfo.oobsize;
-			}
-
-			/* Write out the Page data */
-			if (pwrite(fd, ptr_update_G->writebuf, meminfo.writesize, mtdoffset) != meminfo.writesize) {
-				perror ("pwrite");
-				goto closeall;
-			}
-
-			/* read out the Page data */
-			if (pread(fd, readbuf, meminfo.writesize, mtdoffset) != meminfo.writesize) {
-				perror ("pread");
-				goto closeall;
-			}
-
-			buf_num=0;
-			while ((ptr_update_G->writebuf[buf_num]==readbuf[buf_num]) && (buf_num < readlen)) buf_num++;
-
-			//if (((blockstart/MAX_PAGE_SIZE/64) % 10) == 9)
-			if (buf_num < readlen)
-			{
-				//printf("offs[%x ],blockstart[%x],mtdoffset[%x],writesize[0x%x], buf_num[0x%x]\n",(int)offs,blockstart,mtdoffset,meminfo.writesize, buf_num);
-
-				/* set bad blocks */
-				offs = (loff_t) blockstart;
-				if ((ret = ioctl(fd, MEMSETBADBLOCK, &offs)) < 0) {
-					perror("ioctl(MEMSETBADBLOCK)");
-					goto closeall;
-				}
-				if ((ret == 0) && (!quiet)) {
-					fprintf (stdout, "set Bad block at %x !\n",blockstart);
-					file_offset = file_offset - (mtdoffset-blockstart);
-					imglen = imglen+ (mtdoffset-blockstart);;
-					mtdoffset = blockstart + meminfo.erasesize;
-				}
-			}
-			else {
-				imglen -= readlen;
-				mtdoffset += meminfo.writesize;
-				file_offset+= meminfo.writesize;
-			}
-		}
-
-	closeall:
-		close(ifd);
-
-	restoreoob:
-
-		close(fd);
-
-		if (imglen > 0) {
-			perror ("Data was only partially written due to error\n");
-			exit (1);
-		}
-
-		image_crc ^= ~0U;
-		printf ("image_length = 0x%08x\n", image_length);
-		printf ("image_crc = 0x%08x\n", image_crc);
-		free(ptr_update_G);
-
-	}
-	/* end Update the partition */
-
-ambarella_process:
-	if (ambarella_bld ||ambarella_force_ptb|| ambarella_spl ||
-		ambarella_pba || ambarella_sec || ambarella_dsp ||
-		ambarella_lnx || ambarella_swp || ambarella_add ||
-		ambarella_adc || ambarella_pri || ambarella_rmd ||
-		ambarella_rom || ambarella_cmd || ambarella_eth ||
-		ambarella_sn || ambarella_bak || ambarella_auto_dl ||
-		ambarella_auto_boot || ambarella_lan_ip || ambarella_lan_mask ||
-		ambarella_lan_gw || ambarella_tftpd || ambarella_pri_addr ||
-		ambarella_pri_file || ambarella_show_info_flag|| update_fdt ||
-		ambarella_eth1 || ambarella_eth1_ip || ambarella_eth1_mask ||
-		ambarella_eth1_gw ||
-		ambarella_wifi0 || ambarella_wifi0_ip || ambarella_wifi0_mask ||
-		ambarella_wifi0_gw || ambarella_set_upgrade_status
+  int cnt = 0, fd = -1, ifd = -1;
+  size_t readlen = 0;
+  int image_crc = ~0U;
+  size_t image_length = 0, imglen = 0;
+  unsigned char readbuf[MAX_PAGE_SIZE];
+  unsigned char *preadbuf;
+  uint8_t *ptb_buf = NULL;
+  flpart_table_t *ptb_table;
+  int file_offset = mtdoffset;
+  int buf_num = 0;
+  nand_update_file_header_t image_head;
+  uint8_t *fdt_buf = NULL;
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+  flpart_meta_t *ptb_meta;
+  uint32_t partition_size = 0;;
+  char mtd_dev[NAME_LEN] = {0};
+  int index = 0;
+  int percent = 0, last = -1;;
+  int i = PART_MAX_WITH_RSV;
+  size_t write_size = EMMC_SECTOR_SIZE;
+  uint32_t sector_start = 0;
+  double comp = 0;
+#else
+  int pagelen, baderaseblock, blockstart = -1;
+  int ret, oobinfochanged = 0;
+  struct nand_oobinfo old_oobinfo;
+  struct mtd_info_user meminfo;
+  struct mtd_oob_buf oob;
+  loff_t offs;
+#endif
+
+
+
+
+  if (argc < 2) {
+    usage();
+    return -1;
+  }
+
+  process_options(argc, argv);
+
+  if (ambarella_skip_img == 1)
+    goto ambarella_process;
+
+  /* Update the partition */
+  {
+    if (!mtd_device || !img) {
+      printf("mtd device or img is NULL.\n");
+      exit(1);
+    }
+
+    ptr_update_G = malloc(sizeof(nand_update_global_t));
+    if (!ptr_update_G) {
+      perror("can not malloc buffer for update global.\n");
+      exit(1);
+    }
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+    if (flprog_get_part_table(&ptb_buf) < 0) {
+      exit (1);
+    }
+
+    //update_partition_with_img();
+    if (ptb_buf) {
+      ptb_meta = PTB_META(ptb_buf);
+    } else {
+      exit(1);
+    }
+
+    if (strchr(mtd_device, '/')) {
+      int part = 0;
+      char *ptr = strstr(mtd_device ,"mmcblk0p");
+      if (ptr) {
+        if(sscanf(ptr, "mmcblk0p%d", &part) == 1) {
+          for (i = 0; i < PART_MAX; i++) {
+            if (ptb_meta->part_info[i].nblk != 0) {
+              ++index;
+              if (index == part) {
+                partition_size = ptb_meta->part_info[i].nblk * EMMC_SECTOR_SIZE;
+                sector_start = ptb_meta->part_info[i].sblk;
+                snprintf(mtd_dev, sizeof(mtd_dev) - 1, "/dev/mmcblk0p%d", index);
+                break;
+              }
+            }
+          }
+          partition_size = ptb_meta->part_info[i].nblk * EMMC_SECTOR_SIZE;
+          sector_start = ptb_meta->part_info[i].sblk;
+          snprintf(mtd_dev, sizeof(mtd_dev) - 1, "%s", mtd_device);
+        }
+      }
+
+    } else {
+      for (i = 0; i < PART_MAX; i++) {
+        if (ptb_meta->part_info[i].nblk != 0) {
+          ++index;
+          if (!strcmp(ptb_meta->part_info[i].name, mtd_device)) {
+            partition_size = ptb_meta->part_info[i].nblk * EMMC_SECTOR_SIZE;
+            sector_start = ptb_meta->part_info[i].sblk;
+            snprintf(mtd_dev, sizeof(mtd_dev) - 1, "/dev/mmcblk0p%d", index);
+            break;
+          }
+        }
+      }
+    }
+    if (i == PART_MAX) {
+      printf("%s not found!\n", mtd_device);
+      exit(1);
+    }
+
+    printf("mtd_dev=%s\n", mtd_dev);
+    /* Open the device */
+    if ((fd = open(mtd_dev, O_RDWR)) == -1) {
+      perror("open flash");
+      exit(1);
+    }
+#else
+    init_nand_update_global(ptr_update_G);
+
+    if (pad && writeoob) {
+      fprintf(stderr, "Can't pad when oob data is present.\n");
+      exit(1);
+    }
+    //update_partition_with_img();
+    /* Open the device */
+    if ((fd = open(mtd_device, O_RDWR)) == -1) {
+      perror("open flash");
+      exit(1);
+    }
+
+    /* Fill in MTD device capability structure */
+    if (ioctl(fd, MEMGETINFO, &meminfo) != 0) {
+      perror("MEMGETINFO");
+      close(fd);
+      exit(1);
+    }
+
+    /* Set erasesize to specified number of blocks - to match jffs2
+     * (virtual) block size */
+    meminfo.erasesize *= blockalign;
+
+    /* Make sure device page sizes are valid */
+    if (!(meminfo.oobsize == 16 && meminfo.writesize == 512) &&
+        !((meminfo.oobsize == 64 && meminfo.writesize == 2048) ||
+            (meminfo.oobsize == 128 && meminfo.writesize == 2048))) {
+      fprintf(stderr, "Unknown flash (not normal NAND)\n");
+      close(fd);
+      exit(1);
+    }
+
+    /*
+     * force oob layout for jffs2 or yaffs ?
+     * Legacy support
+     */
+    if (forcejffs2 || forceyaffs) {
+      if (meminfo.oobsize == 8) {
+        if (forceyaffs) {
+          fprintf (stderr, "YAFSS cannot operate on 256 Byte page size");
+          goto restoreoob;
+        }
+        /* Adjust number of ecc bytes */
+        ptr_update_G->jffs2_oobinfo.eccbytes = 3;
+      }
+    }
+
+    oob.length = meminfo.oobsize;
+    oob.ptr = ptr_update_G->oobbuf;
+#endif
+    /* Open the input file */
+    if ((ifd = open(img, O_RDONLY)) == -1) {
+      perror("open input file");
+      goto restoreoob;
+    }
+
+    // get image length
+    imglen = lseek(ifd, 0, SEEK_END);
+    lseek (ifd, 0, SEEK_SET);
+    if(skip_head)
+    {
+      if(read(ifd, &image_head, sizeof(nand_update_file_header_t)) != sizeof(nand_update_file_header_t))
+      {
+        perror ("File I/O error on input file");
+        goto closeall;
+      }
+      lseek(ifd, image_head.header_size, SEEK_SET);
+      imglen =image_head.payload_size;
+      file_offset +=image_head.header_size;
+    }
+    image_length = imglen;
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+    // Check, if length fits into device
+    if ( imglen > (partition_size - mtdoffset)) {
+      fprintf (stderr, "Image %d bytes, device size %u bytes\n",
+               imglen, partition_size);
+      perror ("Input file does not fit into device");
+      goto closeall;
+    }
+
+
+    /* Get data from input and write to the device */
+    while (imglen && (mtdoffset < partition_size)) {
+      // new eraseblock , check for bad block(s)
+      // Stay in the loop to be sure if the mtdoffset changes because
+      // of a bad block, that the next block that will be written to
+      // is also checked. Thus avoiding errors if the block(s) after the
+      // skipped block(s) is also bad (number of blocks depending on
+      // the blockalign
+
+      readlen = write_size;
+      if (pad && (imglen < readlen))
+      {
+        readlen = imglen;
+        memset(ptr_update_G->writebuf + readlen, 0xff, write_size - readlen);
+      }
+
+      if ((cnt = pread(ifd, ptr_update_G->writebuf, readlen, file_offset)) != readlen) {
+        if (cnt == 0) // EOF
+          break;
+        perror ("File I/O error on input file");
+        goto closeall;
+      }
+
+      image_crc = crc32(image_crc, ptr_update_G->writebuf, cnt);
+
+
+      if (pwrite(fd, ptr_update_G->writebuf, write_size, mtdoffset) != write_size) {
+        perror ("pwrite");
+        goto closeall;
+      }
+
+      if (pread(fd, readbuf, write_size, mtdoffset) != write_size) {
+        perror ("pread");
+        goto closeall;
+      }
+
+      buf_num=0;
+      while ((ptr_update_G->writebuf[buf_num]==readbuf[buf_num]) && (buf_num < readlen)) buf_num++;
+
+      if (buf_num < readlen)
+      {
+        printf("data program error!\n");
+        goto closeall;
+      }
+      else {
+        imglen -= readlen;
+        mtdoffset += write_size;
+        file_offset+= write_size;
+      }
+      if (!quiet) {
+        comp = (double)(image_length - imglen);
+        percent = (int32_t)((comp / (double)image_length) * 100);
+        if (percent != last) {
+          last = percent;
+          fprintf (stdout, "Writing data to sector...%d%%\n", percent);
+        }
+      }
+      ++sector_start;
+    }
+    printf("Done!\n");
+#else
+    pagelen = meminfo.writesize + ((writeoob == 1) ? meminfo.oobsize : 0);
+
+    // Check, if file is pagealigned
+    if ((!pad) && ((imglen % pagelen) != 0)) {
+      fprintf (stderr, "Input file is not page aligned\n");
+      goto closeall;
+    }
+
+    // Check, if length fits into device
+    if ( ((imglen / pagelen) * meminfo.writesize) > (meminfo.size - mtdoffset)) {
+      fprintf (stderr, "Image %zu bytes, NAND page %d bytes, OOB area %u bytes, device size %u bytes\n",
+               imglen, pagelen, meminfo.writesize, meminfo.size);
+      perror ("Input file does not fit into device");
+      goto closeall;
+    }
+
+    //		crc32_table = crc32_filltable(NULL, 0);
+
+    /* Get data from input and write to the device */
+    while (imglen && (mtdoffset < meminfo.size)) {
+      // new eraseblock , check for bad block(s)
+      // Stay in the loop to be sure if the mtdoffset changes because
+      // of a bad block, that the next block that will be written to
+      // is also checked. Thus avoiding errors if the block(s) after the
+      // skipped block(s) is also bad (number of blocks depending on
+      // the blockalign
+      while (blockstart != (mtdoffset & (~meminfo.erasesize + 1))) {
+        blockstart = mtdoffset & (~meminfo.erasesize + 1);
+        offs = blockstart;
+        baderaseblock = 0;
+        if (!quiet)
+          fprintf (stdout, "Writing data to block %x\n", blockstart);
+
+        /* Check all the blocks in an erase block for bad blocks */
+        do {
+          if ((ret = ioctl(fd, MEMGETBADBLOCK, &offs)) < 0) {
+            perror("ioctl(MEMGETBADBLOCK)");
+            goto closeall;
+          }
+          if (ret == 1) {
+            baderaseblock = 1;
+            if (!quiet)
+              fprintf (stderr, "Bad block at %x, %u block(s) "
+                       "from %x will be skipped\n",
+                       (int) offs, blockalign, blockstart);
+          }
+
+          if (baderaseblock) {
+            mtdoffset = blockstart + meminfo.erasesize;
+          }
+          offs +=  meminfo.erasesize / blockalign ;
+        } while ( offs < blockstart + meminfo.erasesize );
+
+      }
+
+      readlen = meminfo.writesize;
+      if (pad && (imglen < readlen))
+      {
+        readlen = imglen;
+        memset(ptr_update_G->writebuf + readlen, 0xff, meminfo.writesize - readlen);
+      }
+
+      /* Read Page Data from input file */
+      if ((cnt = pread(ifd, ptr_update_G->writebuf, readlen,file_offset)) != readlen) {
+        if (cnt == 0)	// EOF
+          break;
+        perror ("File I/O error on input file");
+        goto closeall;
+      }
+
+      image_crc = crc32(image_crc, ptr_update_G->writebuf, cnt);
+
+      if (writeoob) {
+        int i, start, len, filled;
+        /* Read OOB data from input file, exit on failure */
+        if ((cnt = pread(ifd, ptr_update_G->oobreadbuf, meminfo.oobsize,file_offset)) != meminfo.oobsize) {
+          perror ("File I/O error on input file");
+          goto closeall;
+        }
+        /*
+         *  We use autoplacement and have the oobinfo with the autoplacement
+         * information from the kernel available
+         *
+         * Modified to support out of order oobfree segments,
+         * such as the layout used by diskonchip.c
+         */
+        if (!oobinfochanged && (old_oobinfo.useecc == MTD_NANDECC_AUTOPLACE)) {
+          for (filled = 0, i = 0; old_oobinfo.oobfree[i][1] && (i < MTD_MAX_OOBFREE_ENTRIES); i++) {
+            /* Set the reserved bytes to 0xff */
+            start = old_oobinfo.oobfree[i][0];
+            len = old_oobinfo.oobfree[i][1];
+            memcpy(ptr_update_G->oobbuf + start,
+                   ptr_update_G->oobreadbuf + filled,
+                   len);
+            filled += len;
+          }
+        } else {
+          /* Set at least the ecc byte positions to 0xff */
+          start = old_oobinfo.eccbytes;
+          len = meminfo.oobsize - start;
+          memcpy(ptr_update_G->oobbuf + start,
+                 ptr_update_G->oobreadbuf + start,
+                 len);
+        }
+        /* Write OOB data first, as ecc will be placed in there*/
+        oob.start = mtdoffset;
+        if (ioctl(fd, MEMWRITEOOB, &oob) != 0) {
+          perror ("ioctl(MEMWRITEOOB)");
+          goto closeall;
+        }
+        imglen -= meminfo.oobsize;
+      }
+
+      /* Write out the Page data */
+      if (pwrite(fd, ptr_update_G->writebuf, meminfo.writesize, mtdoffset) != meminfo.writesize) {
+        perror ("pwrite");
+        goto closeall;
+      }
+
+      /* read out the Page data */
+      if (pread(fd, readbuf, meminfo.writesize, mtdoffset) != meminfo.writesize) {
+        perror ("pread");
+        goto closeall;
+      }
+
+      buf_num=0;
+      while ((ptr_update_G->writebuf[buf_num]==readbuf[buf_num]) && (buf_num < readlen)) buf_num++;
+
+      //if (((blockstart/MAX_PAGE_SIZE/64) % 10) == 9)
+      if (buf_num < readlen)
+      {
+        //printf("offs[%x ],blockstart[%x],mtdoffset[%x],writesize[0x%x], buf_num[0x%x]\n",(int)offs,blockstart,mtdoffset,meminfo.writesize, buf_num);
+
+        /* set bad blocks */
+        offs = (loff_t) blockstart;
+        if ((ret = ioctl(fd, MEMSETBADBLOCK, &offs)) < 0) {
+          perror("ioctl(MEMSETBADBLOCK)");
+          goto closeall;
+        }
+        if (ret == 0) {
+          if (!quiet)
+            fprintf (stdout, "set Bad block at %x !\n",blockstart);
+          file_offset = file_offset - (mtdoffset-blockstart);
+          imglen = imglen+ (mtdoffset-blockstart);;
+          mtdoffset = blockstart + meminfo.erasesize;
+        }
+      }
+      else {
+        imglen -= readlen;
+        mtdoffset += meminfo.writesize;
+        file_offset+= meminfo.writesize;
+      }
+    }
+#endif
+    closeall:
+    close(ifd);
+
+    restoreoob:
+
+    close(fd);
+
+    if (imglen > 0) {
+      perror ("Data was only partially written due to error\n");
+      exit (1);
+    }
+
+    image_crc ^= ~0U;
+    printf ("image_length = 0x%zx\n", image_length);
+    printf ("image_crc = 0x%08x\n", image_crc);
+    free(ptr_update_G);
+
+  }
+  /* end Update the partition */
+
+  ambarella_process:
+  if (ambarella_bld ||ambarella_force_ptb|| ambarella_spl ||
+      ambarella_pba || ambarella_sec || ambarella_dsp ||
+      ambarella_lnx || ambarella_swp || ambarella_add ||
+      ambarella_adc || ambarella_pri || ambarella_rmd ||
+      ambarella_rom || ambarella_cmd || ambarella_eth ||
+      ambarella_sn || ambarella_bak || ambarella_auto_dl ||
+      ambarella_auto_boot || ambarella_lan_ip || ambarella_lan_mask ||
+      ambarella_lan_gw || ambarella_tftpd || ambarella_pri_addr ||
+      ambarella_pri_file || ambarella_show_info_flag|| update_fdt ||
+      ambarella_eth1 || ambarella_eth1_ip || ambarella_eth1_mask ||
+      ambarella_eth1_gw || ambarella_boot_command ||
+      ambarella_wifi0 || ambarella_wifi0_ip || ambarella_wifi0_mask ||
+      ambarella_wifi0_gw || ambarella_set_upgrade_status
 #if (USE_WIFI >= 2)
-		|| ambarella_wifi1 || ambarella_wifi1_ip || ambarella_wifi1_mask ||
-		ambarella_wifi1_gw
+      || ambarella_wifi1 || ambarella_wifi1_ip || ambarella_wifi1_mask ||
+      ambarella_wifi1_gw
+#endif
+  ) {
+#ifdef CONFIG_BOOT_MEDIA_EMMC
+    if (ambarella_skip_img == 1)
 #endif
-		) {
-		if (flprog_get_part_table(&ptb_buf) < 0)
-			exit (1);
-		if (update_fdt) {
-			/* Open the input file */
-			if ((ifd = open(img, O_RDONLY)) == -1) {
-				perror("open fdt input file");
-				fdt_check_error = 1;
-				goto ptbhandle;
-			}
-
-			// get image length
-			imglen = lseek(ifd, 0, SEEK_END);
-			lseek (ifd, 0, SEEK_SET);
-			{
-				if(read(ifd, readbuf, sizeof(fdt_header_t)) != sizeof(fdt_header_t)) {
-					perror ("File I/O error on fdt input file");
-					fdt_check_error = 1;
-					goto ptbcloseall;
-				}
-				preadbuf = &readbuf[0];
-				if ((fdt_magic(preadbuf) != FDT_MAGIC)|| (imglen != fdt_totalsize(preadbuf))) {
-					fdt_check_error = 1;
-					goto ptbcloseall;
-				}
-			}
-			image_length = imglen;
-			lseek (ifd, 0, SEEK_SET);
-			fdt_buf = malloc(image_length);
-			if(read(ifd, fdt_buf, image_length) != image_length) {
-				perror ("File I/O error on fdt input file");
-				fdt_check_error = 1;
-			} else {
-				memcpy(fdt_root, fdt_buf, image_length);
-			}
-ptbcloseall:
-		free(fdt_buf);
-		close(ifd);
-		}
-
-		if (ambarella_cmd)
-			fdt_update_cmdline(fdt_root, ambarella_cmdline);
-	}
-
-ptbhandle:
-	ptb_table = PTB_TABLE(ptb_buf);
-
-	if (ambarella_pri) {
-		ptb_table->part[PART_PRI].img_len = image_length;
-		ptb_table->part[PART_PRI].crc32 = image_crc;
-		ptb_table->part[PART_PRI].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_PRI].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_PRI].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_PRI].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_rmd) {
-		ptb_table->part[PART_RMD].img_len = image_length;
-		ptb_table->part[PART_RMD].crc32 = image_crc;
-		ptb_table->part[PART_RMD].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_RMD].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_RMD].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_RMD].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_rom) {
-		ptb_table->part[PART_ROM].img_len = image_length;
-		ptb_table->part[PART_ROM].crc32 = image_crc;
-		ptb_table->part[PART_ROM].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_ROM].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_ROM].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_ROM].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_bak) {
-		ptb_table->part[PART_BAK].img_len = image_length;
-		ptb_table->part[PART_BAK].crc32 = image_crc;
-		ptb_table->part[PART_BAK].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_BAK].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_BAK].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_BAK].ver_date = ambarella_flpart_date;
-	}
-
-	if (ambarella_ptb) {
-		ptb_table->part[PART_PTB].img_len = image_length;
-		ptb_table->part[PART_PTB].crc32 = image_crc;
-		ptb_table->part[PART_PTB].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_PTB].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_PTB].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_PTB].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_bld) {
-		ptb_table->part[PART_BLD].img_len = image_length;
-		ptb_table->part[PART_BLD].crc32 = image_crc;
-		ptb_table->part[PART_BLD].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_BLD].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_BLD].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_BLD].ver_date = ambarella_flpart_date;
-	}
-
-	if (ambarella_spl) {
-		ptb_table->part[PART_SPL].img_len = image_length;
-		ptb_table->part[PART_SPL].crc32 = image_crc;
-		ptb_table->part[PART_SPL].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_SPL].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_SPL].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_SPL].ver_date = ambarella_flpart_date;
-	}
-
-	if (ambarella_pba) {
-		ptb_table->part[PART_PBA].img_len = image_length;
-		ptb_table->part[PART_PBA].crc32 = image_crc;
-		ptb_table->part[PART_PBA].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_PBA].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_PBA].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_PBA].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_sec) {
-		ptb_table->part[PART_SEC].img_len = image_length;
-		ptb_table->part[PART_SEC].crc32 = image_crc;
-		ptb_table->part[PART_SEC].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_SEC].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_SEC].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_SEC].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_dsp) {
-		ptb_table->part[PART_DSP].img_len = image_length;
-		ptb_table->part[PART_DSP].crc32 = image_crc;
-		ptb_table->part[PART_DSP].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_DSP].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_DSP].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_DSP].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_lnx) {
-		ptb_table->part[PART_LNX].img_len = image_length;
-		ptb_table->part[PART_LNX].crc32 = image_crc;
-		ptb_table->part[PART_LNX].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_LNX].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_LNX].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_LNX].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_swp) {
-		ptb_table->part[PART_SWP].img_len = image_length;
-		ptb_table->part[PART_SWP].crc32 = image_crc;
-		ptb_table->part[PART_SWP].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_SWP].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_SWP].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_SWP].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_add) {
-		ptb_table->part[PART_ADD].img_len = image_length;
-		ptb_table->part[PART_ADD].crc32 = image_crc;
-		ptb_table->part[PART_ADD].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_ADD].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_ADD].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_ADD].ver_date = ambarella_flpart_date;
-	}
-	if (ambarella_adc) {
-		ptb_table->part[PART_ADC].img_len = image_length;
-		ptb_table->part[PART_ADC].crc32 = image_crc;
-		ptb_table->part[PART_ADC].flag = ambarella_flpart_flag;
-//		ptb_table->part[PART_ADC].mem_addr = ambarella_flpart_mem_addr;
-		ptb_table->part[PART_ADC].ver_num = ambarella_flpart_version;
-		ptb_table->part[PART_ADC].ver_date = ambarella_flpart_date;
-	}
-
-	if (ambarella_force_ptb) {
-		ptb_table->dev.rsv[0] = ambarella_ptb_data;
-	}
-
-	if (ambarella_cmd && ambarella_force_ptb) {
-		strncpy(ptb_table->dev.cmdline, ambarella_cmdline, CMD_LINE_SIZE);
-	}
-
-	if (ambarella_sn) {
-		strncpy(ptb_table->dev.sn, ambarella_sn_data, SN_SIZE);
-	}
-
-
-	if (ambarella_auto_dl) {
-		ptb_table->dev.auto_dl = ambarella_auto_dl_data;
-	}
-
-	if (ambarella_auto_boot) {
-		ptb_table->dev.auto_boot = ambarella_auto_boot_data;
-	}
-
-	if (ambarella_eth) {
-		memcpy(ptb_table->dev.eth[0].mac, ambarella_eth_mac, MAC_SIZE);
-	}
-	if (ambarella_lan_ip) {
-		ptb_table->dev.eth[0].ip = ambarella_lan_ip_data;
-	}
-	if (ambarella_lan_mask) {
-		ptb_table->dev.eth[0].mask = ambarella_lan_mask_data;
-	}
-	if (ambarella_lan_gw) {
-		ptb_table->dev.eth[0].gw = ambarella_lan_gw_data;
-	}
-	if (ambarella_tftpd) {
-		ptb_table->dev.tftpd = ambarella_tftpd_data;
-	}
-
-	if (ambarella_eth1) {
-		memcpy(ptb_table->dev.eth[1].mac, ambarella_eth1_mac, MAC_SIZE);
-	}
-	if (ambarella_eth1_ip) {
-		ptb_table->dev.eth[1].ip = ambarella_eth1_ip_data;
-	}
-	if (ambarella_eth1_mask) {
-		ptb_table->dev.eth[1].mask = ambarella_eth1_mask_data;
-	}
-	if (ambarella_eth1_gw) {
-		ptb_table->dev.eth[1].gw = ambarella_eth1_gw_data;
-	}
-
-	if (ambarella_wifi0) {
-		memcpy(ptb_table->dev.wifi[0].mac, ambarella_wifi0_mac, MAC_SIZE);
-	}
-	if (ambarella_wifi0_ip) {
-		ptb_table->dev.wifi[0].ip = ambarella_wifi0_ip_data;
-	}
-	if (ambarella_wifi0_mask) {
-		ptb_table->dev.wifi[0].mask = ambarella_wifi0_mask_data;
-	}
-	if (ambarella_wifi0_gw) {
-		ptb_table->dev.wifi[0].gw = ambarella_wifi0_gw_data;
-	}
+      if (flprog_get_part_table(&ptb_buf) < 0)
+        exit (1);
+    if (update_fdt) {
+      /* Open the input file */
+      if ((ifd = open(img, O_RDONLY)) == -1) {
+        perror("open fdt input file");
+        fdt_check_error = 1;
+        goto ptbhandle;
+      }
+
+      // get image length
+      imglen = lseek(ifd, 0, SEEK_END);
+      lseek (ifd, 0, SEEK_SET);
+      {
+        if(read(ifd, readbuf, sizeof(fdt_header_t)) != sizeof(fdt_header_t)) {
+          perror ("File I/O error on fdt input file");
+          fdt_check_error = 1;
+          goto ptbcloseall;
+        }
+        preadbuf = &readbuf[0];
+        if ((fdt_magic(preadbuf) != FDT_MAGIC)|| (imglen != fdt_totalsize(preadbuf))) {
+          fdt_check_error = 1;
+          goto ptbcloseall;
+        }
+      }
+      image_length = imglen;
+      lseek (ifd, 0, SEEK_SET);
+      fdt_buf = malloc(image_length);
+      if(read(ifd, fdt_buf, image_length) != image_length) {
+        perror ("File I/O error on fdt input file");
+        fdt_check_error = 1;
+      } else {
+        memcpy(fdt_root, fdt_buf, image_length);
+      }
+      ptbcloseall:
+      free(fdt_buf);
+      close(ifd);
+    }
+
+    if (ambarella_cmd)
+      fdt_update_cmdline(fdt_root, ambarella_cmdline);
+  }
+
+  ptbhandle:
+  ptb_table = PTB_TABLE(ptb_buf);
+
+  if (ambarella_pri) {
+    ptb_table->part[PART_PRI].img_len = image_length;
+    ptb_table->part[PART_PRI].crc32 = image_crc;
+    ptb_table->part[PART_PRI].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_PRI].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_PRI].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_PRI].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_rmd) {
+    ptb_table->part[PART_RMD].img_len = image_length;
+    ptb_table->part[PART_RMD].crc32 = image_crc;
+    ptb_table->part[PART_RMD].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_RMD].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_RMD].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_RMD].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_rom) {
+    ptb_table->part[PART_ROM].img_len = image_length;
+    ptb_table->part[PART_ROM].crc32 = image_crc;
+    ptb_table->part[PART_ROM].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_ROM].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_ROM].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_ROM].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_bak) {
+    ptb_table->part[PART_BAK].img_len = image_length;
+    ptb_table->part[PART_BAK].crc32 = image_crc;
+    ptb_table->part[PART_BAK].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_BAK].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_BAK].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_BAK].ver_date = ambarella_flpart_date;
+  }
+
+  if (ambarella_ptb) {
+    ptb_table->part[PART_PTB].img_len = image_length;
+    ptb_table->part[PART_PTB].crc32 = image_crc;
+    ptb_table->part[PART_PTB].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_PTB].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_PTB].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_PTB].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_bld) {
+    ptb_table->part[PART_BLD].img_len = image_length;
+    ptb_table->part[PART_BLD].crc32 = image_crc;
+    ptb_table->part[PART_BLD].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_BLD].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_BLD].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_BLD].ver_date = ambarella_flpart_date;
+  }
+
+  if (ambarella_spl) {
+    ptb_table->part[PART_SPL].img_len = image_length;
+    ptb_table->part[PART_SPL].crc32 = image_crc;
+    ptb_table->part[PART_SPL].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_SPL].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_SPL].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_SPL].ver_date = ambarella_flpart_date;
+  }
+
+  if (ambarella_pba) {
+    ptb_table->part[PART_PBA].img_len = image_length;
+    ptb_table->part[PART_PBA].crc32 = image_crc;
+    ptb_table->part[PART_PBA].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_PBA].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_PBA].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_PBA].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_sec) {
+    ptb_table->part[PART_SEC].img_len = image_length;
+    ptb_table->part[PART_SEC].crc32 = image_crc;
+    ptb_table->part[PART_SEC].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_SEC].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_SEC].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_SEC].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_dsp) {
+    ptb_table->part[PART_DSP].img_len = image_length;
+    ptb_table->part[PART_DSP].crc32 = image_crc;
+    ptb_table->part[PART_DSP].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_DSP].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_DSP].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_DSP].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_lnx) {
+    ptb_table->part[PART_LNX].img_len = image_length;
+    ptb_table->part[PART_LNX].crc32 = image_crc;
+    ptb_table->part[PART_LNX].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_LNX].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_LNX].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_LNX].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_swp) {
+    ptb_table->part[PART_SWP].img_len = image_length;
+    ptb_table->part[PART_SWP].crc32 = image_crc;
+    ptb_table->part[PART_SWP].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_SWP].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_SWP].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_SWP].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_add) {
+    ptb_table->part[PART_ADD].img_len = image_length;
+    ptb_table->part[PART_ADD].crc32 = image_crc;
+    ptb_table->part[PART_ADD].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_ADD].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_ADD].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_ADD].ver_date = ambarella_flpart_date;
+  }
+  if (ambarella_adc) {
+    ptb_table->part[PART_ADC].img_len = image_length;
+    ptb_table->part[PART_ADC].crc32 = image_crc;
+    ptb_table->part[PART_ADC].flag = ambarella_flpart_flag;
+    //		ptb_table->part[PART_ADC].mem_addr = ambarella_flpart_mem_addr;
+    ptb_table->part[PART_ADC].ver_num = ambarella_flpart_version;
+    ptb_table->part[PART_ADC].ver_date = ambarella_flpart_date;
+  }
+
+  if (ambarella_force_ptb) {
+    ptb_table->dev.rsv[0] = ambarella_ptb_data;
+  }
+
+  if (ambarella_cmd && ambarella_force_ptb) {
+    strncpy(ptb_table->dev.cmdline, ambarella_cmdline, CMD_LINE_SIZE);
+  }
+
+  if (ambarella_boot_command && ambarella_force_ptb) {
+    strncpy(ptb_table->dev.bootcmd, ambarella_bootcmd, BOOT_COMMAND_MAX);
+  }
+
+  if (ambarella_sn) {
+    strncpy(ptb_table->dev.sn, ambarella_sn_data, SN_SIZE);
+  }
+
+
+  if (ambarella_auto_dl) {
+    ptb_table->dev.auto_dl = ambarella_auto_dl_data;
+  }
+
+  if (ambarella_auto_boot) {
+    ptb_table->dev.auto_boot = ambarella_auto_boot_data;
+  }
+
+  if (ambarella_eth) {
+    memcpy(ptb_table->dev.eth[0].mac, ambarella_eth_mac, MAC_SIZE);
+  }
+  if (ambarella_lan_ip) {
+    ptb_table->dev.eth[0].ip = ambarella_lan_ip_data;
+  }
+  if (ambarella_lan_mask) {
+    ptb_table->dev.eth[0].mask = ambarella_lan_mask_data;
+  }
+  if (ambarella_lan_gw) {
+    ptb_table->dev.eth[0].gw = ambarella_lan_gw_data;
+  }
+  if (ambarella_tftpd) {
+    ptb_table->dev.tftpd = ambarella_tftpd_data;
+  }
+
+  if (ambarella_eth1) {
+    memcpy(ptb_table->dev.eth[1].mac, ambarella_eth1_mac, MAC_SIZE);
+  }
+  if (ambarella_eth1_ip) {
+    ptb_table->dev.eth[1].ip = ambarella_eth1_ip_data;
+  }
+  if (ambarella_eth1_mask) {
+    ptb_table->dev.eth[1].mask = ambarella_eth1_mask_data;
+  }
+  if (ambarella_eth1_gw) {
+    ptb_table->dev.eth[1].gw = ambarella_eth1_gw_data;
+  }
+
+  if (ambarella_wifi0) {
+    memcpy(ptb_table->dev.wifi[0].mac, ambarella_wifi0_mac, MAC_SIZE);
+  }
+  if (ambarella_wifi0_ip) {
+    ptb_table->dev.wifi[0].ip = ambarella_wifi0_ip_data;
+  }
+  if (ambarella_wifi0_mask) {
+    ptb_table->dev.wifi[0].mask = ambarella_wifi0_mask_data;
+  }
+  if (ambarella_wifi0_gw) {
+    ptb_table->dev.wifi[0].gw = ambarella_wifi0_gw_data;
+  }
 #if (USE_WIFI >= 2)
-	if (ambarella_wifi1) {
-		memcpy(ptb_table->dev.wifi[1].mac, ambarella_wifi1_mac, MAC_SIZE);
-	}
-	if (ambarella_wifi1_ip) {
-		ptb_table->dev.wifi[1].ip = ambarella_wifi1_ip_data;
-	}
-	if (ambarella_wifi1_mask) {
-		ptb_table->dev.wifi[1].mask = ambarella_wifi1_mask_data;
-	}
-	if (ambarella_wifi1_gw) {
-		ptb_table->dev.wifi[1].gw = ambarella_wifi1_gw_data;
-	}
+  if (ambarella_wifi1) {
+    memcpy(ptb_table->dev.wifi[1].mac, ambarella_wifi1_mac, MAC_SIZE);
+  }
+  if (ambarella_wifi1_ip) {
+    ptb_table->dev.wifi[1].ip = ambarella_wifi1_ip_data;
+  }
+  if (ambarella_wifi1_mask) {
+    ptb_table->dev.wifi[1].mask = ambarella_wifi1_mask_data;
+  }
+  if (ambarella_wifi1_gw) {
+    ptb_table->dev.wifi[1].gw = ambarella_wifi1_gw_data;
+  }
 #endif
-	if (ambarella_pri_addr) {
-		ptb_table->dev.pri_addr = ambarella_pri_addr_data;
-	}
+  if (ambarella_pri_addr) {
+    ptb_table->dev.pri_addr = ambarella_pri_addr_data;
+  }
 
-	if (ambarella_pri_file) {
-		strncpy(ptb_table->dev.pri_file, ambarella_pri_file_data, SN_SIZE);
-	}
+  if (ambarella_pri_file) {
+    strncpy(ptb_table->dev.pri_file, ambarella_pri_file_data, SN_SIZE);
+  }
 #if 0
-    if(ambarella_set_upgrade_status){
-		ptb_table->dev.pba_boot_flag[1] = ambarella_upgrade_status_data;
-	}
+  if(ambarella_set_upgrade_status){
+    ptb_table->dev.pba_boot_flag[1] = ambarella_upgrade_status_data;
+  }
 #endif
-	if (ambarella_bld ||ambarella_force_ptb|| ambarella_spl ||
-		ambarella_pba || ambarella_sec || ambarella_dsp ||
-		ambarella_lnx || ambarella_swp || ambarella_add ||
-		ambarella_adc || ambarella_pri || ambarella_rmd ||
-		ambarella_rom || ambarella_cmd || ambarella_eth ||
-		ambarella_sn || ambarella_bak ||ambarella_auto_dl||
-		ambarella_auto_boot || ambarella_lan_ip || ambarella_lan_mask ||
-		ambarella_lan_gw || ambarella_tftpd || ambarella_pri_addr ||
-		ambarella_pri_file || update_fdt ||
-		ambarella_eth1 || ambarella_eth1_ip || ambarella_eth1_mask ||
-		ambarella_eth1_gw ||
-		ambarella_wifi0 || ambarella_wifi0_ip || ambarella_wifi0_mask ||
-		ambarella_wifi0_gw || ambarella_set_upgrade_status
+  if (ambarella_bld ||ambarella_force_ptb|| ambarella_spl ||
+      ambarella_pba || ambarella_sec || ambarella_dsp ||
+      ambarella_lnx || ambarella_swp || ambarella_add ||
+      ambarella_adc || ambarella_pri || ambarella_rmd ||
+      ambarella_rom || ambarella_cmd || ambarella_eth ||
+      ambarella_sn || ambarella_bak ||ambarella_auto_dl||
+      ambarella_auto_boot || ambarella_lan_ip || ambarella_lan_mask ||
+      ambarella_lan_gw || ambarella_tftpd || ambarella_pri_addr ||
+      ambarella_pri_file || update_fdt ||
+      ambarella_eth1 || ambarella_eth1_ip || ambarella_eth1_mask ||
+      ambarella_eth1_gw ||
+      ambarella_wifi0 || ambarella_wifi0_ip || ambarella_wifi0_mask ||
+      ambarella_wifi0_gw || ambarella_set_upgrade_status
 #if (USE_WIFI >= 2)
-		|| ambarella_wifi1 || ambarella_wifi1_ip || ambarella_wifi1_mask ||
-		ambarella_wifi1_gw
+      || ambarella_wifi1 || ambarella_wifi1_ip || ambarella_wifi1_mask ||
+      ambarella_wifi1_gw
 #endif
-		) {
-		if (flprog_set_part_table(&ptb_buf) < 0)
-			exit (1);
-	}
-
-	sync();
-	/* Return happy */
-	return 0;
+  ) {
+    if (flprog_set_part_table(&ptb_buf) < 0)
+      exit (1);
+  }
+
+  sync();
+  /* Return happy */
+  return 0;
 }
 
diff --git a/upgrade_partition/upgrade_partition.h b/upgrade_partition/upgrade_partition.h
index e170db4..ad36d8f 100644
--- a/upgrade_partition/upgrade_partition.h
+++ b/upgrade_partition/upgrade_partition.h
@@ -4,14 +4,33 @@
  * History:
  *    2014/05/27 - [Ken He] created file
  *
- * Copyright (C) 2014-2018, Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- **/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #ifndef __UPGRADE_PARTITION_H__
 #define __UPGRADE_PARTITION_H__
 
@@ -53,16 +72,17 @@
 #define CMD_LINE_SIZE		512
 #define MAC_SIZE		6
 #define SN_SIZE			32
+#define BOOT_COMMAND_MAX	256
 
 typedef __ARMCC_PACK__ struct flpart_s
 {
-	uint32_t	crc32;		/**< CRC32 checksum of image */
-	uint32_t	ver_num;	/**< Version number */
-	uint32_t	ver_date;	/**< Version date */
-	uint32_t	img_len;	/**< Lengh of image in the partition */
-	uint32_t	mem_addr;	/**< Starting address to copy to RAM */
-	uint32_t	flag;		/**< Special properties of this partition */
-	uint32_t	magic;		/**< Magic number */
+	u32	crc32;		/**< CRC32 checksum of image */
+	u32	ver_num;	/**< Version number */
+	u32	ver_date;	/**< Version date */
+	u32	img_len;	/**< Lengh of image in the partition */
+	u32	mem_addr;	/**< Starting address to copy to RAM */
+	u32	flag;		/**< Special properties of this partition */
+	u32	magic;		/**< Magic number */
 } __ATTRIB_PACK__ flpart_t;
 
 /**
@@ -105,10 +125,10 @@ typedef __ARMCC_PACK__ struct flpart_s
 typedef __ARMCC_PACK__ struct netdev_s
 {
 	/* This section contains networking related settings */
-	uint8_t	mac[6];		/**< MAC address*/
-	uint32_t	ip;		/**< Boot loader's LAN IP */
-	uint32_t	mask;		/**< Boot loader's LAN mask */
-	uint32_t	gw;		/**< Boot loader's LAN gateway */
+	u8	mac[6];		/**< MAC address*/
+	u32	ip;		/**< Boot loader's LAN IP */
+	u32	mask;		/**< Boot loader's LAN mask */
+	u32	gw;		/**< Boot loader's LAN gateway */
 } __ATTRIB_PACK__ netdev_t;
 
 /**
@@ -116,12 +136,12 @@ typedef __ARMCC_PACK__ struct netdev_s
  */
 typedef __ARMCC_PACK__ struct fldev_s
 {
-	uint32_t	magic;		/**< Magic number */
+	u32	magic;		/**< Magic number */
 	char	sn[32];			/**< Serial number */
-	uint8_t	usbdl_mode;		/**< USB download mode */
-	uint8_t	auto_boot;		/**< Automatic boot */
-	uint8_t	rsv[2];
-	uint32_t splash_id;
+	u8	usbdl_mode;		/**< USB download mode */
+	u8	auto_boot;		/**< Automatic boot */
+	u8	rsv[2];
+	u32	splash_id;
 	char	cmdline[FLDEV_CMD_LINE_SIZE];	/**< Boot command line options */
 
 	/* This section contains networking related settings */
@@ -130,19 +150,31 @@ typedef __ARMCC_PACK__ struct fldev_s
 	netdev_t usb_eth[2];
 
 	/* This section contains update by network  related settings */
-	uint32_t	auto_dl;	/**< Automatic download? */
-	uint32_t	tftpd;		/**< Boot loader's TFTP server */
-	uint32_t	pri_addr;	/**< RTOS download address */
+	u32	auto_dl;	/**< Automatic download? */
+	u32	tftpd;		/**< Boot loader's TFTP server */
+	u32	pri_addr;	/**< RTOS download address */
 	char	pri_file[32];	/**< RTOS file name */
-	uint32_t	pri_comp;	/**< RTOS compressed? */
-	//uint32_t	dtb_addr;	/**< DTB download address */
+	u32	pri_comp;	/**< RTOS compressed? */
+	//u32	dtb_addr;	/**< DTB download address */
 	//char	dtb_file[32];	/**< DTB file name */
-	uint32_t	rmd_addr;	/**< Ramdisk download address */
+	u32	rmd_addr;	/**< Ramdisk download address */
 	char	rmd_file[32];	/**< Ramdisk file name */
-	uint32_t	rmd_comp;	/**< Ramdisk compressed? */
-	uint32_t	dsp_addr;	/**< DSP download address */
+	u32	rmd_comp;	/**< Ramdisk compressed? */
+	u32	dsp_addr;	/**< DSP download address */
 	char	dsp_file[32];	/**< DSP file name */
-	uint32_t	dsp_comp;	/**< DSP compressed? */
+	u32	dsp_comp;	/**< DSP compressed? */
+
+	/* This section contains secure boot related settings */
+	u8	secure_boot_init;	/**< Secure boot initialized flag */
+	u8	need_generate_firmware_hw_signature;	/**< Secure boot flag, indicate the firmware need generate hw signature*/
+	u8	reserved0;
+	u8	reserved1;
+
+	u8	rsa_key_n[256 + 4];
+	u8	rsa_key_e[16];
+	//u8	cryptochip_sn[12];
+	u8	sn_signature[128];
+	char	bootcmd[BOOT_COMMAND_MAX];
 } __ATTRIB_PACK__ fldev_t;
 
 /**
@@ -168,17 +200,17 @@ typedef __ARMCC_PACK__ struct fldev_s
 //#define AMBOOT_PTB_BUF_SIZE	(0x00008000)
 
 #define PTB_HEADER_SIZE		64
-#define PTB_HEADER_PAD_SIZE	(PTB_HEADER_SIZE - sizeof(uint32_t) * 4)
+#define PTB_HEADER_PAD_SIZE	(PTB_HEADER_SIZE - sizeof(u32) * 4)
 #define PTB_HEADER_MAGIC	0x524f4e47
 #define PTB_HEADER_VERSION	0x20140417
 
 typedef __ARMCC_PACK__ struct ptb_header_s
 {
-	uint32_t	magic;
-	uint32_t	crc32;
-	uint32_t	version;
-	uint32_t	dev;
-	uint8_t	rsv[PTB_HEADER_PAD_SIZE];
+	u32	magic;
+	u32	crc32;
+	u32	version;
+	u32	dev;
+	u8	rsv[PTB_HEADER_PAD_SIZE];
 } __ATTRIB_PACK__ ptb_header_t;
 
 /**
@@ -195,7 +227,7 @@ typedef __ARMCC_PACK__ struct flpart_table_s
 	flpart_t	part[PART_MAX_WITH_RSV];/** Partitions */
 	/* ------------------------------------------ */
 	fldev_t		dev;			/**< Device properties */
-	uint8_t		rsv[PTB_PAD_SIZE];	/**< Padding to 2048 bytes */
+	u8		rsv[PTB_PAD_SIZE];	/**< Padding to 2048 bytes */
 } __ATTRIB_PACK__ flpart_table_t;
 
 /**
@@ -207,8 +239,8 @@ typedef __ARMCC_PACK__ struct flpart_table_s
 #define PTB_META_SIZE		2048
 #define FW_MODEL_NAME_SIZE	128
 
-#define PTB_META_PAD_SIZE	(PTB_META_SIZE - sizeof(uint32_t) - \
-				(sizeof(uint32_t) * 3 + PART_NAME_LEN) * PART_MAX - \
+#define PTB_META_PAD_SIZE	(PTB_META_SIZE - sizeof(u32) - \
+				(sizeof(u32) * 3 + PART_NAME_LEN) * PART_MAX - \
 				FW_MODEL_NAME_SIZE)
 
 typedef  __ARMCC_PACK__ struct flpart_meta_s
@@ -227,15 +259,15 @@ typedef  __ARMCC_PACK__ struct flpart_meta_s
 #define PTB_HEADER(ptb_buf)	((ptb_header_t *)ptb_buf)
 
 #define PTB_TABLE(ptb_buf)	((flpart_table_t *) \
-				((uint8_t *)ptb_buf + sizeof(ptb_header_t)))
+				((u8 *)ptb_buf + sizeof(ptb_header_t)))
 
 #define PTB_META(ptb_buf)	((flpart_meta_t *) \
-					((uint8_t *)ptb_buf + \
+					((u8 *)ptb_buf + \
 					 sizeof(ptb_header_t) + \
 					 sizeof(flpart_table_t)))
 
 #define PTB_DTB(ptb_buf)	((void *) \
-					((uint8_t *)ptb_buf + \
+					((u8 *)ptb_buf + \
 					sizeof(ptb_header_t) + \
 					sizeof(flpart_table_t)) + \
 					sizeof(flpart_meta_t))
@@ -244,7 +276,7 @@ typedef struct fdt_header fdt_header_t;
 #else
 /*===========================FDT struct==============================*/
 #define FDT_MAGIC	0xd00dfeed	/* 4: version, 4: total size */
-typedef uint32_t fdt32_t;
+typedef u32 fdt32_t;
 typedef __ARMCC_PACK__ struct fdt_header {
 	fdt32_t magic;			 /* magic word FDT_MAGIC */
 	fdt32_t totalsize;		 /* total size of DT block */
diff --git a/upgrade_partition/upgrade_partition_v38.c b/upgrade_partition/upgrade_partition_v38.c
index 331395b..5e66453 100644
--- a/upgrade_partition/upgrade_partition_v38.c
+++ b/upgrade_partition/upgrade_partition_v38.c
@@ -4,14 +4,33 @@
  * History:
  *    2014/05/27 - [Ken He] created file
  *
- * Copyright (C) 2014-2018, Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- **/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 
 //usage:#define nandwrite_trivial_usage
 //usage:	"[OPTIONS] MTD-device"
diff --git a/upgrade_partition/upgrade_partition_v38.h b/upgrade_partition/upgrade_partition_v38.h
index efc6b1e..d7d5548 100644
--- a/upgrade_partition/upgrade_partition_v38.h
+++ b/upgrade_partition/upgrade_partition_v38.h
@@ -4,14 +4,33 @@
  * History:
  *    2014/05/27 - [Ken He] created file
  *
- * Copyright (C) 2014-2018, Ambarella, Inc.
  *
- * All rights reserved. No Part of this file may be reproduced, stored
- * in a retrieval system, or transmitted, in any form, or by any means,
- * electronic, mechanical, photocopying, recording, or otherwise,
- * without the prior consent of Ambarella, Inc.
+ * Copyright (c) 2016 Ambarella, Inc.
  *
- **/
+ * This file and its contents ("Software") are protected by intellectual
+ * property rights including, without limitation, U.S. and/or foreign
+ * copyrights. This Software is also the confidential and proprietary
+ * information of Ambarella, Inc. and its licensors. You may not use, reproduce,
+ * disclose, distribute, modify, or otherwise prepare derivative works of this
+ * Software or any portion thereof except pursuant to a signed license agreement
+ * or nondisclosure agreement with Ambarella, Inc. or its authorized affiliates.
+ * In the absence of such an agreement, you agree to promptly notify and return
+ * this Software to Ambarella, Inc.
+ *
+ * THIS SOFTWARE IS PROVIDED "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
+ * INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF NON-INFRINGEMENT,
+ * MERCHANTABILITY, AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.
+ * IN NO EVENT SHALL AMBARELLA, INC. OR ITS AFFILIATES BE LIABLE FOR ANY DIRECT,
+ * INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES
+ * (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES;
+ * LOSS OF USE, DATA, OR PROFITS; COMPUTER FAILURE OR MALFUNCTION; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ *
+ */
+
 #ifndef __UPGRADE_PARTITION_H__
 #define __UPGRADE_PARTITION_H__
 
